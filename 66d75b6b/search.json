[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TP de Biométrie Semestre 6",
    "section": "",
    "text": "Ce livre contient l’ensemble du matériel (contenus, exemples, exercices…) nécessaire à la réalisation des travaux pratiques de Biométrie de l’EC ‘Outils pour l’étude et la compréhension du vivant 5’ du semestre 6 de la licence Sciences de la Vie de La Rochelle Université.\nÀ la fin du semestre, vous devriez être capables de faire les choses suivantes dans le logiciel RStudio :\n\nExplorer des jeux de données en produisant des résumés statistiques de variables de différentes nature (numériques continues ou catégorielles) et en produisant des graphiques appropriés\nCalculer des statistiques descriptives (moyennes, médianes, quartiles, écart-types, variances, erreurs standard, intervalles de confiance, etc.) pour plusieurs sous-groupes de vos jeux de données, et les représenter sur des graphiques adaptés\nChoisir et formuler des hypothèses adaptées à la question scientifique posée (hypothèses bilatérales ou unilatérales)\nChoisir les tests statistiques permettant de répondre à une question scientifique précise selon la nature de la question posée et la nature des variables à disposition\nRéaliser les tests usuels de comparaison de proportions et de moyennes (\\(\\chi^2\\), \\(t\\) de Student à 1 ou 2 échantillons, appariés ou indépendants, ANOVAs etc.) et d’association entre 2 variables numériques (régression linéaire)\nVérifier les conditions d’application des tests, et le cas échéant, réaliser des tests non paramétriques équivalents\nInterpréter correctement les résultats des tests pour répondre aux questions scientifiques posées\n\n\n\n\nPour atteindre les objectifs fixés ici, et compte tenu du volume horaire restreint qui est consacré aux TP et TEA de Biométrie au S6, vous devez impérativement posséder un certain nombre de pré-requis. En particulier, vous devriez avoir à ce stade une bonne connaissance de l’interface des logiciels R et RStudio, et vous devriez être capables :\n\nde créer un Rproject et un script d’analyse dans RStudio\nd’importer des jeux de données issus de tableurs dans RStudio\nd’effectuer des manipulations de données simples (sélectionner des variables, trier des colonnes, filtrer des lignes, créer de nouvelles variables, etc.)\nde produire des graphiques de qualité, adaptés à la fois aux variables dont vous disposez et aux questions auxquelles vous souhaitez répondre.\nde calculer des indices de statistiques descriptives de position (moyenne, médiane, quartiles), de dispersion (variance, écart-type, intervalle interquartile) et de d’incertitude (erreur standard et intervalle de confiance), pour un échantillon ou pour chaque modalité d’un facteur\nde représenter sur un graphique des données accompagnées des barres d’erreur pertinentes\n\nVous devriez en outre être capable d’expliquer les différences entre dispersion et incertitude, et de choisir le type de graphique adapté selon le nombre et la nature des variables dont vous disposez, et selon la question à laquelle vous tentez de répondre.\n\n\n\n\n\n\nSi ces pré-requis ne sont pas maîtrisés\n\n\n\nMettez-vous à niveau de toute urgence en lisant attentivement :\n\nle livre en ligne de Biométrie du semestre 3. Vous y trouverez les éléments de prise en main du logiciel, les explications concernant les représentations graphiques et la manipulation de tableaux de données dans RStudio.\nle livre en ligne de Biométrie du semestre 4. Vous y trouverez notamment les explications concernant les statistiques descriptives, les notions de position, de dispersion et d’incertitude.\n\nSans une bonne maîtrise de ces outils et notions, vous aurez du mal à suivre ce que nous allons aborder ce semestre.\n\n\n\n\n\n\n\nAu total, 4 séances de TP d’1h30 suivies de 4 séances de TEA d’1h30 sont prévues entre le 27 février et le 24 mars 2023 :\n\nSemaine 09 (du 27 février au 3 mars octobre) : 1 séance de TP d’1h30 et 1 séance de TEA d’1h30\nSemaine 10 (du 06 au 10 mars) : 1 séance de TP d’1h30 et 1 séance de TEA d’1h30\nSemaine 11 (du 13 au 17 mars) : 1 séance de TP d’1h30 et 1 séance de TEA d’1h30\nSemaine 12 (du 20 au 24 mars) : 1 séance de TP d’1h30 et 1 séance de TEA d’1h30\n\nToutes les séances de TP ont lieu les lundis matins de 8h00 à 13h00 (3 groupes) et les vendredi après-midi de 13h15 à 16h30 (2 groupes). Il y a cependant 2 exceptions à cela : le vendredi 3 mars, les TP auront lieu de 15h00 à 18h15, et la semaine 12, les TP auront lieu le mardi matin de 8h00 à 13h00 au lieu du lundi matin.\nTous les TP ont lieu en salle MSI 217. Tous les TEA sont à distance.\nJe vous indique tout ceci pour vous permettre de vous déplacer aux séances aux séances qui vous conviennent le mieux. Si vous êtes disponible pendant le TP d’un autre groupe mais que vous avez des questions à poser, n’hésitez pas à venir en MSI 217 : j’y serai systématiquement.\nAu total, chaque groupe aura donc 4 séances de TP et 4 séances de TEA, soit un total de 12 heures prévues dans vos emplois du temps. C’est peu pour atteindre les objectifs fixés et il y aura donc évidemment du travail personnel à fournir en dehors de ces séances. J’estime que vous devrez fournir à peu près une douzaine d’heures de travail personnel en plus des séances prévues dans votre emploi du temps. Sachez toutefois que selon votre niveau d’aisance, et les acquis des semestres précédents, vous pourrez aller plus vite que prévu, ou au contraire (beaucoup) plus lentement ! Attention donc : pensez bien à prévoir du temps dans vos plannings car le travail personnel est essentiel pour progresser dans cette matière. J’insiste sur l’importance de faire l’effort dès maintenant : vous aurez très probablement besoin de savoir faire ce qui est au programme de ce semestre pendant votre stage et, très vraisemblablement, dans vos futurs masters également. C’est donc maintenant qu’il faut acquérir des automatismes, cela vous fera gagner énormément de temps ensuite.\n\n\n\nPour suivre cet enseignement vous pourrez utiliser les ordinateurs de l’université, mais je ne peux que vous encourager à utiliser vos propres ordinateurs, sous Windows, Linux ou MacOS. Lors de vos futurs stages et pour rédiger vos comptes-rendus de TP, vous utiliserez le plus souvent vos propres ordinateurs, autant prendre dès maintenant de bonnes habitudes en installant les logiciels dont vous aurez besoin tout au long de votre licence. Si vous n’avez pas suivi les enseignements de biométrie du semestre 5 et que les logiciels R et RStudio ne sont pas encore installés sur vos ordinateurs, suivez la procédure décrite ici. Si vous ne possédez pas d’ordinateur, manifestez vous rapidement auprès de moi car des solutions existent (prêt par l’université, travail sur tablette via RStudio cloud…).\n\n\n\n\n\n\nImportant\n\n\n\nL’essentiel du contenu de cet enseignement peut être abordé en autonomie, à distance, grâce à ce livre en ligne, aux ressources mises à disposition sur Moodle et à votre ordinateur personnel. Cela signifie que la présence physique lors de ces séances de TP n’est pas obligatoire.\n\n\nPlus que des séances de TP classiques, considérez plutôt qu’il s’agit de permanences non-obligatoires : si vous pensez avoir besoin d’aide, si vous avez des points de blocage ou des questions sur le contenu de ce document ou sur les exercices demandés, alors venez poser vos questions lors des séances de TP (les vôtres ou celles de vos collègues). Vous ne serez d’ailleurs pas tenus de rester pendant 1h30 : si vous obtenez une réponse en 10 minutes et que vous préférez travailler ailleurs, vous serez libres de repartir !\nDe même, si vous n’avez pas de difficulté de compréhension et les exercices de ce livre en ligne ne vous posent pas de problème, votre présence n’est pas requise. Si vous souhaitez malgré tout venir en salle de TP, pas de problème, vous y serez toujours les bienvenus. Mais attention, on a parfois l’impression d’avoir bien compris lorsque l’on lit des explications. La seule façon d’en être sûr, c’est d’être capable d’expliquer (un concept, un notion, un raisonnement, une méthode…) à une autre personne. Si c’est clair pour vous, vous devriez être en mesure d’expliquer facilement à une tierce personne, en utilisant le vocabulaire approprié. Donc si vous avez le moindre doute faites l’effort de passer en salle de TP, ne serait-ce que quelque minutes, afin de confirmer auprès de moi que vous avez bien compris. Cela ne vous coûte pas grand chose : les créneaux de TP apparaissent de toutes façons dans vos emplois du temps.\nCe fonctionnement très souple a de nombreux avantages :\n\nvous vous organisez comme vous le souhaitez\nvous ne venez que lorsque vous en avez vraiment besoin\ncelles et ceux qui se déplacent reçoivent une aide personnalisée\nvous travaillez sur vos ordinateurs\nles effectifs étant réduits, c’est aussi plus confortable pour moi !\n\nToutefois, pour que cette organisation fonctionne, cela demande de la rigueur de votre part, en particulier sur la régularité du travail que vous devez fournir. Si la présence en salle de TP n’est pas requise, le travail demandé est bel et bien obligatoire ! Si vous venez en salle de TP sans avoir travaillé en amont, vous risquez de perdre votre temps car vous passerez votre séance à lire et suivre ce livre en ligne, choses que vous pouvez très bien faire chez vous. De même, si vous attendez le 20 mars pour vous y mettre sérieusement, je ne pourrai pas grand chose pour vous. Je le répète, outre les heures de TP/TEA prévus dans vos emplois du temps, vous devez prévoir au moins 12 heures de travail personnel supplémentaire.\nPour finir sur cette question de l’organisation de ces TP et TEA, je vous livre un commentaire qui m’a été fait lors des semestres précédents lorsque je demandais à vos collègues et prédécesseurs s’ils appréciaient ou non ce fonctionnement. Plusieurs m’ont dit ceci : “nous aurions préféré des séances de présentiel classique car comme ça, on aurait pu vous poser nos questions directement”. J’avoue ne pas avoir su quoi répondre… Encore une fois, les créneaux sont prévus dans vos emplois du temps, je suis physiquement présent en salle de TP pour toutes les séances de tous les groupes. Donc si vous avez des questions à poser, et si c’est plus facile pour vous, venez comme à une séance de TP classique, rien ne vous en empêche !\n\n\n\nComme au semestre précédent, nous pourrons échanger sur l’application Slack. Si vous ne l’avez pas encore fait, créez-vous un compte en ligne et installez le logiciel sur votre ordinateur (il existe aussi des versions pour tablettes et smartphones). Lorsque vous aurez installé le logiciel, cliquez sur ce lien pour vous connecter à notre espace de travail commun intitulé L3 SV 22-23 / EC outils (ce lien expire régulièrement : faites moi signe s’il n’est plus valide). C’est le même espace de travail qu’au semestre précédent et si vous vous y êtes déjà connecté cet automne, vous n’avez plus qu’à relancer le logiciel.\nVous verrez que 3 “canaux” y sont disponibles :\n\n#général : c’est là que les questions liées à l’organisation générale du cours, des TP et TEA, des évaluations, etc. doivent être posées. Si vous ne savez pas si une séance de permanence a lieu, posez la question ici.\n#questions-rstudio : c’est ici que toutes les questions pratiques liées à l’utilisation de R et RStudio devront êtres posées. Problèmes de syntaxe, problèmes liés à l’interface, à l’installation des packages ou à l’utilisation des fonctions, à la création des graphiques, à la manipulation des tableaux… Tout ce qui concerne directement les logiciels sera traité ici. Vous êtes libres de poser des questions, de poster des captures d’écran, des morceaux de code, des messages d’erreur. Et vous êtes bien entendus vivement encouragés à vous entraider et à répondre aux questions de vos collègues. Je n’interviendrai ici que pour répondre aux questions laissées sans réponse ou si les réponses apportées sont inexactes. Le fonctionnement est celui d’un forum de discussion instantané. Vous en tirerez le plus grand bénéfice en participant et en n’ayant pas peur de poser des questions, même si elles vous paraissent idiotes. Rappelez-vous toujours que si vous vous posez une question, d’autres se la posent aussi probablement.\n#questions-stats : C’est ici que vous pourrez poser vos questions liées aux méthodes statistiques ou aux choix des modèles de dynamique des populations. Tout ce qui ne concerne pas directement l’utilisation du logiciel (comme par exemple le choix d’un test ou des hypothèses nulles et alternatives, la démarche d’analyse, la signification de tel paramètre ou estimateur, le principe de telle ou telle méthode…) peut être discuté ici. Comme pour le canal #questions-rstudio, vous êtes encouragés à vous entraider et à répondre aux questions de vos collègues.\n\nAinsi, quand vous travaillerez à vos TP ou TEA, que vous soyez installés chez vous ou en salle de TP, prenez l’habitude de garder Slack ouvert sur votre ordinateur. Même si vous n’avez pas de question à poser, votre participation active pour répondre à vos collègues est souhaitable et souhaitée. Je vous incite donc fortement à vous entraider : c’est très formateur pour celui qui explique, et celui qui rencontre une difficulté a plus de chances de comprendre si c’est quelqu’un d’autre qui lui explique plutôt que la personne qui a rédigé les instructions mal comprises.\nCe document est fait pour vous permettre d’avancer en autonomie et vous ne devriez normalement pas avoir beaucoup besoin de moi si votre lecture est attentive. L’expérience montre en effet que la plupart du temps, il suffit de lire correctement les paragraphes précédents et/ou suivants pour obtenir la réponse à ses questions. J’essaie néanmoins de rester disponible sur Slack pendant les séances de TP et de TEA de tous les groupes. Cela veut donc dire que même si votre groupe n’est pas en TP, vos questions ont des chances d’être lues et de recevoir des réponses dès que d’autres groupes sont en TP ou TEA. Vous êtes d’ailleurs encouragés à échanger sur Slack aussi pendant vos phases de travail personnel.\n\n\n\n\nSi vous avez suivi les livres en ligne des semestres précédents, vous savez que pour apprendre à utiliser RStudio, il faut faire les choses soi-même, ne pas avoir peur des messages d’erreurs (il faut d’ailleurs apprendre à les déchiffrer pour comprendre d’où viennent les problèmes), essayer maintes fois, se tromper beaucoup, recommencer, et surtout, ne pas se décourager. J’utilise ce logiciel presque quotidiennement depuis plus de 15 ans et à chaque session de travail, je rencontre des messages d’erreur. Avec suffisamment d’habitude, on apprend à les déchiffrer, et on corrige les problèmes en quelques secondes. Ce livre est conçu pour vous faciliter la tâche, mais ne vous y trompez pas, vous rencontrerez des difficultés, et c’est normal. C’est le prix à payer pour profiter de la puissance du meilleur logiciel permettant d’analyser des données, de produire des graphiques de qualité et de réaliser toutes les statistiques dont vous aurez besoin d’ici la fin de vos études et au-delà.\nPour que cet apprentissage soit le moins problématique possible, il convient de prendre les choses dans l’ordre. C’est la raison pour laquelle les chapitres de ce livre doivent être lus dans l’ordre, et les exercices d’application faits au fur et à mesure de la lecture.\nIdéalement, voilà les étapes que vous devriez avoir franchi chaque semaine :\n\nLa première semaine (09) est consacrée à la comparaison de la moyenne d’une population à une valeur théorique (Chapitre 1). Les fonctions nouvelles sont peu nombreuses, mais ce chapitre est l’occasion d’aborder des notions complexes (test paramétrique ou non, hypothèses nulles et alternatives, \\(p-\\)value, décision, erreurs, puissance, etc.) qui demanderont une lecture très attentive. C’est également la première fois que vous serez confronté à toutes les étapes d’une analyse de données : de l’importation des données dans RStudio jusqu’à la réalisation des tests statistiques et leur interprétation, en passant par le calcul des statistiques descriptives appropriées, la réalisation de graphiques exploratoires pertinents, et la vérification des conditions d’application du test. La maîtrise du logiciel n’est donc ici qu’une petite partie de ce qui est demandé : maîtriser les notions et concepts, comprendre la démarche d’analyse, être capable de l’expliquer et de la reproduire, est ici crucial.\nLa deuxième semaine (10) est consacrée à la comparaison de la moyenne de 2 populations, dans deux situations : lorsque les données des deux groupes sont appariées (Chapitre 2) et quand elles sont indépendantes (Chapitre 3). Ces chapitre seront également l’occasion d’aborder la notion de test unilatéral et bilatéral et d’apprendre comment coder des hypothèses alternatives spécifiques dans RStudio. Comme pour la semaine 10, vous aurez l’occasion de mettre en œuvre la totalité de la démarche d’analyse statistique.\nLa troisième semaine (11) sera consacrée aux modèles linéaires. Deux familles de méthodes très proches seront traitées : l’analyse de variance (Chapitre 4) et la régression linéaire (Chapitre 5). Nous apprendrons dans ces deux chapitres comment mettre en œuvre ces méthodes dans RStudio, et nous verrons que les points communs entre ces deux méthodes sont très nombreux (nature des questions posées, mise en œuvre des tests, vérification graphique des conditions d’application, etc.)\nLa quatrième et dernière semaine (12) est également consacrée aux tests d’hypothèses, mais cette fois sur des données de comptage (Chapitre 6). Vous verrez ici comment comparer une proportion observée à une valeur théorique, et comment tester l’égalité de proportions observées dans plusieurs groupes. L’intervalle de confiance d’une proportion ainsi que la notion de ratio des chances seront également abordés.\n\nAu final :\n\nle chapitre 1 doit être traité avant le début de la deuxième séance de TP\nles chapitres 2 et 3 doivent être traités avant le début de la troisième séance de TP\nle chapitre 4 doit être traité avant le début de la quatrième séance de TP\nles chapitres 5 et 6 doivent être traités avant la fin de la quatrième séance de TP\n\nVous comprenez j’espère que dans chaque chapitre, une ou des méthodes vous sont présentées en détail. À la fin de chaque chapitre, un exercice d’application vous est proposé. À l’issue des ces TP, vous disposerez, dans votre arsenal de biostatisticien, de près d’une quinzaine de tests statistiques différents. Le plus difficile sera d’être en mesure d’identifier lequel choisir face à un jeu de données inconnu, et face à des questions nouvelles. Votre travail consiste donc aussi à vous assurer que vous comprenez bien dans quelle situation utiliser chaque test, et à savoir comment vérifier que vous avez le droit d’utiliser tel ou tel test pour répondre aux questions posées.\n\n\n\nL’évaluation de cette partie “TP de Biométrie” de l’EC “Outils pour l’étude et la compréhension du vivant” aura lieu sous la forme d’un devoir à la maison individuel, qui vous demandera de traiter les données acquises dans le cadre du travail de stratégie d’échantillonnage et sur lesquelles vous travaillez depuis plusieurs mois avec Pierrick Bocher. Je vous demanderai de me remettre un script commenté qui me permettra de vérifier les points suivants :\n\nles grands principes de stratégie d’échantillonnage abordés par Pierrick Bocher sont-ils bien compris ?\nêtes vous capables de choisir la ou les méthodes d’analyses de donnée appropriées pour répondre aux questions posées ?\nêtes vous capables de mettre ces méthode en œuvre dans RStudio et d’en interpréter correctement les résultats ?\nmaîtrisez-vous suffisamment le logiciel RStudio pour réaliser les analyses de données pertinentes (de l’importation des données et leur mise en forme dans le logiciel, à la réalisation et l’interprétation correcte des tests statistiques appropriés, en passant par l’exploration des statistiques descriptives et la création de graphiques informatifs) ?\nenfin, êtes-vous capable de produire un script clair, bien commenté et qui fait ce que vous souhaitez faire sans erreur ?\n\nPour vous aider à comprendre ce qui est attendu sur ce dernier point, je vous fournis ci-dessous la grille critériée dont je me servirai pour évaluer la forme de votre script. Je ne peux que vous encourager à lire attentivement les critères d’évaluation ci-dessous et à tenter de vous les approprier. Les séances de TP et de TEA qui viennent doivent vous permettre de vous entraîner à produire des scripts de qualité.\n\nL’énoncé de ce devoir sera déposé sur Moodle le samedi 25 mars, et vos travaux seront à rendre avant votre départ en stage, le samedi 15 avril à midi au plus tard.\n\n\n\nCe livre est ligne est sous licence Creative Commons (CC BY-NC-ND 4.0)\n\n\n\n\n\nVous êtes autorisé à partager, copier, distribuer et communiquer ce matériel par tous moyens et sous tous formats, tant que les conditions suivantes sont respectées :\n\n\n Attribution : vous devez créditer ce travail (donc citer son auteur), fournir un lien vers ce livre en ligne, intégrer un lien vers la licence Creative Commons et indiquer si des modifications du contenu original ont été effectuées. Vous devez indiquer ces informations par tous les moyens raisonnables, sans toutefois suggérer que l’auteur vous soutient ou soutient la façon dont vous avez utilisé son travail.\n\n\n Pas d’Utilisation Commerciale : vous n’êtes pas autorisé à faire un usage commercial de cet ouvrage, ni de tout ou partie du matériel le composant. Cela comprend évidemment la diffusion sur des plateformes de partage telles que studocu.com qui tirent profit d’œuvres dont elles ne sont pas propriétaires, souvent à l’insu des auteurs.\n\n\n Pas de modifications : dans le cas où vous effectuez un remix, que vous transformez, ou créez à partir du matériel composant l’ouvrage original, vous n’êtes pas autorisé à distribuer ou mettre à disposition l’ouvrage modifié.\n\n\n Pas de restrictions complémentaires : vous n’êtes pas autorisé à appliquer des conditions légales ou des mesures techniques qui restreindraient légalement autrui à utiliser cet ouvrage dans les conditions décrites par la licence."
  },
  {
    "objectID": "01-OneSampleTests.html",
    "href": "01-OneSampleTests.html",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "",
    "text": "Pour travailler dans de bonnes conditions, créez un nouveau dossier sur votre ordinateur, créez un Rproject et un script dans ce dossier, et travaillez systématiquement dans votre script, et surtout pas directement dans la console. Consultez le livre en ligne du semestre 3 si vous ne savez plus comment faire.\nDans ce chapitre, vous aurez besoin d’utiliser des packages spécifiques et d’importer des données depuis des fichiers externes téléchargeables directement depuis ce document. Les packages dont vous aurez besoin ici et que vous devez donc charger en mémoire, sont :\n\nle tidyverse (Wickham 2022), qui comprend notamment le package readr (Wickham, Hester, et Bryan 2022), pour importer facilement des fichiers .csv au format tibble, le package dplyr (Wickham et al. 2023), pour manipuler des tableaux, et le package ggplot2 (Wickham et al. 2022) pour les représentations graphiques. \nskimr (Waring et al. 2022), qui permet de calculer des résumés de données très informatifs.  \n\n\nlibrary(tidyverse)\nlibrary(skimr)\n\n\n\n\n\n\n\nImportant\n\n\n\nMême si vous avez déjà installé le tidyverse ou dplyr au semestre précédent, ré-installez dplyr avec install.packages(\"dplyr\"). Ce package a en effet été mis à jour tout récemment, et nous aurons besoin de sa toute dernière version (v1.1.0). Chargez-le ensuite en mémoire avec library(dplyr).\n\n\n\n\n\n\n\n\nAttention\n\n\n\nPensez à installer tous les packages listés ci-dessous avant de les charger en mémoire si vous ne l’avez pas déjà fait. Si vous ne savez plus comment faire, consultez d’urgence la section dédiée aux packages dans le livre en ligne de Biométrie du semestre 3.\n\n\nVous aurez également besoin des jeux de données suivants :\n\nTemperature.csv\nTemperature2.csv\n\nEnfin, je spécifie ici une fois pour toutes le thème que j’utiliserai pour tous les graphiques de ce chapitre. Libre à vous de choisir un thème différent ou de vous contenter du thème proposé par défaut :\n\ntheme_set(theme_bw())"
  },
  {
    "objectID": "01-OneSampleTests.html#contexte",
    "href": "01-OneSampleTests.html#contexte",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.2 Contexte",
    "text": "1.2 Contexte\nOn s’intéresse ici à la température corporelle des adultes en bonne santé. On souhaite examiner la croyance populaire qui veut que cette température vaut en moyenne 37ºC. Pour le vérifier, on dispose d’un échantillon de 25 adultes en bonne santé choisis au hasard parmi la population américaine et dont on a mesuré la température. Comme pour toute étude statistique, les étapes que nous allons devoir suivre sont les suivantes (dans l’ordre) :\n\nImporter les données dans RStudio, les examiner et éventuellement les (re)mettre en forme si besoin.\nFaire une première exploration des données, grâce au calcul d’indices de statistiques descriptives d’une part, et de représentations graphiques d’autre part.\nRéaliser un test d’hypothèses en respectant la procédure adéquate (en particulier, la vérification des conditions d’application).\n\nC’est donc ce que nous allons faire dans les sections suivantes.\n\n\n\n\n\n\nÀ retenir !\n\n\n\nAvant de se lancer dans les tests d’hypothèses, il est toujours indispensable d’examiner les données dont on dispose à l’aide, d’une part de statistiques descriptives numériques, et d’autres part, de graphiques exploratoires.\nNous avons vu au cours des semestres précédents quels indices statistiques il peut être utile de calculer (dans le livre en ligne du semestre 4) et quelles représentations graphiques il peut être utile de réaliser (dans le livre en ligne du semestre 3) afin de pouvoir se lancer dans des tests d’hypothèses sans risquer de grossières erreurs. N’hésitez pas à cliquer sur ces liens pour vous rafraîchir la mémoire !"
  },
  {
    "objectID": "01-OneSampleTests.html#importation-et-mise-en-forme-des-données",
    "href": "01-OneSampleTests.html#importation-et-mise-en-forme-des-données",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.3 Importation et mise en forme des données",
    "text": "1.3 Importation et mise en forme des données\nNous allons travailler ici sur les données contenues dans le fichier Temperature.csv. Téléchargez ces données dans votre répertoire de travail (attention : ne les ouvrez pas avec Excel !), puis importez les données dans RStudio grâce à l’assistant d’importation. Si vous ne savez plus comment faire, consultez la section dédiée à l’importation des données dans le livre en ligne de Biométrie du semestre 3\n\n\n\nVous stockerez les données dans un objet que vous nommerez Temperature. Après l’importation, tapez son nom dans la console de RStudio et vérifiez que vous obtenez bien exactement ce résultat :\n\nTemperature\n\n# A tibble: 25 × 2\n   individual temperature\n        <dbl>       <dbl>\n 1          1        98.4\n 2          2        98.6\n 3          3        97.8\n 4          4        98.8\n 5          5        97.9\n 6          6        99  \n 7          7        98.2\n 8          8        98.8\n 9          9        98.8\n10         10        99  \n# … with 15 more rows\n\n\nLa première chose à faire quand on travaille avec des données inconnues, c’est d’examiner les données brutes. Ici, les données sont importées au format tibble, donc seules les premières lignes sont visibles. Pour visualiser l’ensemble du tableau, utilisez la fonction View() (avec un V majuscule) ou, si vous avez mis en mémoire le tidyverse, la fonction view() (sans majuscule) :\n\nView(Temperature)\n\nCette commande ouvre un nouvel onglet présentant les données dans un tableur simplifié, en lecture seule. On constate ici 2 choses que nous allons modifier :\n\nla première colonne, intitulée individual, n’est pas véritablement une variable. Cette colonne ne contient qu’un identifiant sans intérêt pour notre étude et est en fait identique au numéro de ligne. Nous allons donc supprimer cette colonne.\nles températures sont exprimées en degrés Fahrenheit, ce qui rend leur lecture difficile pour nous qui sommes habitués à utiliser le système métrique et les degrés Celsius. Nous allons donc convertir les températures en degrés Celsius grâce à la formule suivante :\n\n\\[ºC = \\frac{ºF - 32}{1.8}\\]\n\nTemp_clean <- Temperature %>%\n  select(-individual) %>%      # Suppression de la colonne `individual`\n  mutate(                      # Transformation des températures en ºCelsius\n    temperature = (temperature - 32) / 1.8\n    )\n\nTemp_clean\n\n# A tibble: 25 × 1\n   temperature\n         <dbl>\n 1        36.9\n 2        37  \n 3        36.6\n 4        37.1\n 5        36.6\n 6        37.2\n 7        36.8\n 8        37.1\n 9        37.1\n10        37.2\n# … with 15 more rows\n\n\nIl nous est maintenant possible d’examiner à nouveau les données avec la fonction View(). Avec des valeurs de températures comprises entre 36.3ºC et 37.8ºC, il n’y a visiblement pas de données aberrantes.\nExaminer les données brutes est donc la première chose que vous devriez prendre l’habitude de faire, et ce de façon systématique, car cela permet de repérer :\n\nLa nature des variables présentes.\nLes variables inutiles qui pourront être supprimées ou négligées.\nLes unités des variables utiles, afin de pouvoir les convertir si nécessaire.\nLes valeurs manquantes, atypiques ou aberrantes qui demanderont toujours une attention particulière.\n\nMaintenant que l’examen préliminaire des données est réalisé, on peut passer au calcul des statistiques descriptives."
  },
  {
    "objectID": "01-OneSampleTests.html#sec-eda",
    "href": "01-OneSampleTests.html#sec-eda",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.4 Exploration statistique des données",
    "text": "1.4 Exploration statistique des données\n\n1.4.1 Position et dispersion\nOn s’intéresse ici au calcul de grandeurs statistiques nous apportant des renseignements sur la position et la dispersion des valeurs de l’échantillon. Les questions auxquelles on tente de répondre à ce stade sont les suivantes :\n\nQuelle est la tendance centrale (moyenne ou médiane) ?\nQuelle est la dispersion des valeurs autour de la tendance centrale (écart-type, variance, intervalle interquartile…) ?\n\nPour répondre à ces questions, on peut faire appel à de multiples fonctions déjà présentées dans le livre en ligne du semestre 4. Par exemple la fonction summarise(), en conjonction avec les fonctions mean(), median(), sd(), var(), min(), max() ou quantile(), ou les fonctions summary() ou skim() (du package skimr).\nJe prends ici un exemple simple, mais n’hésitez pas à expérimenter avec les méthodes décrites dans le livre en ligne du semestre 4.\n\nsummary(Temp_clean)\n\n  temperature   \n Min.   :36.33  \n 1st Qu.:36.67  \n Median :37.00  \n Mean   :36.96  \n 3rd Qu.:37.22  \n Max.   :37.78  \n\n\nOn constate ici que la moyenne et la médiane sont très proches. La distribution des températures doit donc être à peut près symétrique, avec à peu près autant de valeurs au-dessus que de valeurs en dessous de la moyenne. Les premier et troisième quartiles sont à peu près aussi éloignés de la médiane l’un que l’autre, ce qui confirme l’apparente symétrie du jeu de données de part et d’autre de la tendance centrale.\nLa moyenne observée dans l’échantillon vaut 36.96ºC, ce qui est très proche de la moyenne théorique de 37ºC.\nUne autre fonction utile est la fonction IQR(), qui renvoie l’étendue de l’intervalle interquartile (la valeur du troisième quartile moins la valeur de premier quartile) :\n\nTemp_clean %>%\n  summarise(IQ_range = IQR(temperature))\n\n# A tibble: 1 × 1\n  IQ_range\n     <dbl>\n1    0.556\n\n\nOn constate ici que l’intervalle interquartile a une largeur de 0.56ºC. Cela signifie que les 50% des températures les plus centrales de l’échantillon sont situées dans un intervalle d’environ un demi-degré Celsius autour de la médiane.\nEnfin, pour obtenir des informations complémentaires, on peut utiliser la fonction skim() du package skimr :\n\nskim(Temp_clean)\n\n── Data Summary ────────────────────────\n                           Values    \nName                       Temp_clean\nNumber of rows             25        \nNumber of columns          1         \n_______________________              \nColumn type frequency:               \n  numeric                  1         \n________________________             \nGroup variables            None      \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate mean    sd   p0  p25 p50  p75 p100 hist \n1 temperature           0             1 37.0 0.377 36.3 36.7  37 37.2 37.8 ▇▇▇▇▂\n\n\nTout comme summary(), la fonction skim() renvoie les valeurs minimales et maximales, les premiers et troisièmes quartiles ainsi que la moyenne et la médiane. Elle nous indique en outre la valeur de l’écart-type de l’échantillon, ainsi que le nombre d’observations et le nombre de données manquantes. Enfin, elle fournit un histogramme très simplifié et sans échelle. Cet histogramme nous permet de nous faire une première idée de la distribution des données et est particulièrement utile pour comparer rapidement un grand nombre de distributions quand il y a plusieurs catégories dans les données (ce qui n’est pas le cas ici).\nOutre ces 3 fonctions (summary(), IQR(), et skim()), il est bien sûr possible de calculer toutes ces valeurs manuellement si besoin :\n\nmean() permet de calculer la moyenne.\nmedian() permet de calculer la médiane.\nmin() et max() permettent de calculer les valeurs minimales et maximales respectivement.\nquantile() permet de calculer les quartiles.\nsd() permet de calculer l’écart-type.\nvar() permet de calculer la variance.\nn() permet de compter le nombre d’observations.\n\nToutes ces fonctions prennent seulement un vecteur en guise d’argument. Il faut donc procéder comme avec IQR() pour les utiliser, en les intégrant à l’intérieur de la fonction summarise(). Par exemple, pour calculer la variance, on peut taper :\n\nTemp_clean %>% \n  summarise(variance = var(temperature))\n\n# A tibble: 1 × 1\n  variance\n     <dbl>\n1    0.142\n\n\nou :\n\nTemp_clean %>%\n  pull(temperature) %>%\n  var()\n\n[1] 0.1417901\n\n\nou encore :\n\nvar(Temp_clean$temperature)\n\n[1] 0.1417901\n\n\nÀ vous d’utiliser la syntaxe qui vous semble la plus simple.\n\n\n1.4.2 Incertitude\nOutre les informations de position et de dispersion, nous avons vu au semestre 4 qu’il était également important d’avoir une idée de l’incertitude associée aux estimations de tendance centrale (erreur standard ou intervalle de confiance de la moyenne ou médiane). Ici, nous allons donc calculer l’intervalle de confiance à 95% de la moyenne. Si vous ne savez plus comment faire, ou que vous ne comprenez pas le code ci-dessous, consultez le livre en ligne du semestre 4 :\n\nTemp_clean %>% \n  reframe(mean_cl_normal(temperature))\n\n# A tibble: 1 × 3\n      y  ymin  ymax\n  <dbl> <dbl> <dbl>\n1  37.0  36.8  37.1\n\n\nOn constate ici que les bornes inférieure (36.8ºC) et supérieure (37.1ºC) de l’intervalle de confiance à 95% de la moyenne sont proches de la valeur de moyenne de l’échantillon. Dans la population générale, la moyenne de la température corporelle chez les adultes en bonne santé a de bonnes chances de se trouver quelque part entre 36.8ºC et 37.1ºC. Autrement dit, si la température corporelle des adultes en bonne santé n’est pas exactement de 37ºC, l’écart à cette valeur théorique ne doit pas être très important."
  },
  {
    "objectID": "01-OneSampleTests.html#sec-edagraph",
    "href": "01-OneSampleTests.html#sec-edagraph",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.5 Exploration graphique des données",
    "text": "1.5 Exploration graphique des données\nIci, puisque nous ne disposons que d’une unique variable numérique et que nous n’avons donc qu’un unique groupe, les représentations graphiques que nous allons réaliser doivent nous permettre d’examiner la distribution des données. Pour cela, nous pouvons réaliser soit un histogramme, soit un diagramme de densité.\n\n1.5.1 Histogramme\nVoilà comment produire un histogramme de qualité pour les données de températures :\n\nTemp_clean %>%\n  ggplot(aes(x = temperature)) +\n  geom_histogram(bins = 10, fill = \"firebrick2\", color = \"grey20\", \n                 alpha = 0.5) +\n  geom_rug() +\n  labs(x = \"Température (ºC)\",\n       y = \"Fréquence\",\n       title = \"Distribution des températures corporelles\",\n       subtitle = \"n = 25 adultes en bonne santé\")\n\n\n\n\nSi vous ne vous rappelez-plus ce qu’est un histogramme ou comment le faire, ou la signification de l’argument bins, relisez la section consacrée aux histogrammes du livre en ligne de Biométrie du semestre 3. Notez que j’ai ajouté une couleur de remplissage et de la transparence pour rendre le graphique plus facile à lire. J’ai également spécifié des titres pour les axes (en précisant l’unité de la variable numérique dont on représente la distribution) ainsi que le titre (et sous-titre) du graphique, qui précise ce qu’on a sous les yeux et la taille de l’échantillon. Il n’est pas toujours nécessaire de spécifier le titre (et le sous-titre) de cette façon : lorsque vous intégrez des graphiques dans un compte-rendu ou un rapport, le titre est en général précisé sous la figure, au début d’une légende qui la décrit. Enfin, j’ai ajouté geom_rug() pour faire apparaître sous le graphique, le long de l’axe des x, la position des données observées. Cela permet de visualiser les données brutes, et peut donc permettre de mieux comprendre pourquoi un histogramme présente telle ou telle forme.\nIci, la forme de ce l’histogramme est assez proche de celle présentée plus tôt par l’histogramme très simplifié produit par la fonction skim(). Cet histogramme nous apprend qu’en dehors d’un “trou” autour de la température 36.75ºC, la distribution des données est proche d’une courbe en cloche. Il y a fort à parier qu’un test de normalité conclurait à la normalité des données de cet échantillon. C’est ce que nous verrons dans la Section 1.6.1.\n\n\n1.5.2 Diagramme de densité\nUne autre façon de visualiser la distribution d’une variable numérique est de produire un graphique de densité. Il a l’avantage d’éviter à l’utilisateur d’avoir à choisir une valeur pour l’argument bin de la fonction geom_histogram(), mais il a l’inconvénient de présenter une échelle plus difficile à comprendre pour l’axe des ordonnées :\n\nTemp_clean %>%\n  ggplot(aes(x = temperature)) +\n  geom_density(fill = \"firebrick2\", alpha = 0.5) +\n  geom_rug() +\n  labs(x = \"Température (ºC)\",\n       y = \"Densité\",\n       title = \"Distribution des températures corporelles\",\n       subtitle = \"n = 25 adultes en bonne santé\")\n\n\n\n\nLes informations apportées par ce graphique sont cohérentes avec celle de l’histogramme :\n\nles températures les plus fréquemment observées dans notre échantillon de 25 adultes en bonne santé se situent légèrement au dessus de 37ºC. Il s’agit d’une information concernant la position des données (c’est-à-dire où se trouve le pic de la distribution sur l’axe des x)\nles températures observées ont une distribution qui ressemble à peu près à une courbe en cloche, avec des valeurs comprises entre 36.4ºC et 37.8ºC environ. La symétrie de part et d’autre du pic n’est pas parfaite, mais elle reste bonne. Il s’agit d’informations concernant la forme de la distribution et la dispersion des données.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBilan des analyses préliminaires\n\n\n\nSuite à l’exploration statistique et graphique des données de températures, voilà ce qu’on retient :\n\nIl n’y a visiblement pas de données aberrantes.\nLa distribution des données semble suivre à peu près la loi Normale.\nLa médiane et la moyenne sont très proches de 37ºC. Un test devrait donc arriver à la conclusion que la température corporelle des adultes n’est pas significativement différente de 37ºC.\nLa largeur de l’intervalle de confiance à 95% semble faible, ce qui indique une incertitude relativement faible. Si la température réelle des adultes en bonne santé n’est pas exactement de 37ºC, elle ne devrait pas en être très éloignée (quelques dixièmes de degrés Celsuis au plus)."
  },
  {
    "objectID": "01-OneSampleTests.html#le-test-paramétrique",
    "href": "01-OneSampleTests.html#le-test-paramétrique",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.6 Le test paramétrique",
    "text": "1.6 Le test paramétrique\nLe test permettant de comparer la moyenne \\(\\mu\\) d’une population à une valeur théorique, fixée par l’utilisateur, est le test de Student à un échantillon. Il permet de répondre à la question suivante :\n\nLes données observés dans l’échantillon dont je dispose sont-elles compatibles avec l’hypothèse que la moyenne \\(\\mu\\) de la population dont est issu mon échantillon vaut XXX ?\n\navec XXX, une valeur d’intérêt spécifiée par l’utilisateur. Il s’agit d’un test paramétrique très puissant. Comme tous les tests paramétriques, certaines conditions d’application doivent être vérifiées avant de pouvoir l’appliquer.\n\n\n\n\n\n\nImportant\n\n\n\nComme pour tous les tests statistiques que nous allons réaliser lors de ces séances de TP et TEA, nous devrons commencer par spécifier les hypothèses nulles et alternatives de chaque test, ainsi que la valeur du seuil \\(\\alpha\\) que nous allons utiliser. À moins d’avoir une bonne raison de faire autrement, on utilise presque toujours le seuil \\(\\alpha = 0.05\\) dans le domaine des sciences du vivant. C’est donc ce seuil que nous utiliserons dans ce livre en ligne.\n\n\n\n1.6.1 Conditions d’application\nLes conditions d’application du test de Student à un échantillon sont les suivantes :\n\nLes données de l’échantillon sont issues d’un échantillonnage aléatoire au sein de la population générale. Cette condition est partagée par toutes les méthodes que nous verrons dans ces TP. En l’absence d’informations sur la façon dont l’échantillonnage a été réalisé, on considère que cette condition est remplie. Il n’y a pas de moyen statistique de le vérifier, cela fait uniquement référence à la stratégie d’échantillonnage déployée et à la rigueur de la procédure mise en œuvre lors de l’acquisition des données.\nLa variable étudiée doit suivre une distribution Normale dans la population générale. Nous allons vérifier cette condition d’application avec un test de normalité de Shapiro-Wilk.\n\nPour un test de normalité, les hypothèses seront toujours les suivantes :\n\nH\\(_0\\) : la variable étudiée suit une distribution Normale dans la population générale.\nH\\(_1\\) : la variable étudiée ne suit pas une distribution Normale dans la population générale.\n\nLe test de Shapiro-Wilk se réalise de la façon suivante :\n\nshapiro.test(Temp_clean$temperature)\n\nou\n\nTemp_clean %>%\n  pull(temperature) %>%\n  shapiro.test()\n\n\n    Shapiro-Wilk normality test\n\ndata:  .\nW = 0.97216, p-value = 0.7001\n\n\nla fonction pull() permet d’extraire une colonne (ici temperature) d’un tibble (ici Temp_clean) et de la transformer en vecteur.\nW est la statistique du test. Elle permet à RStudio de calculer la p-value. Ici, \\(p > \\alpha\\). On ne peut donc pas rejeter l’hypothèse nulle de normalité : on ne peut pas exclure que dans la population générale, la température suive bel et bien une distribution Normale. Les conditions d’application du test de Student sont bien vérifiées.\n\n\n\n\n\n\nTests et décision : rappel de cours\n\n\n\nÀ l’issue d’un tests statistique, la décision finale est toujours prise par rapport à l’hypothèse nulle (\\(H_0\\)) :\n\nSi la \\(p-\\)value du test est supérieure ou égale à \\(\\alpha\\), on dit qu’on ne peut pas rejeter l’hypothèse nulle \\(H_0\\). Attention, on ne dit jamais que “\\(H_0\\) est vraie”, car il est impossible de le vérifier avec une certitude absolue. Toutefois, les données observées (celles de notre échantillon), sont compatibles avec l’hypothèse nulle que nous avons formulée, jusqu’à preuve du contraire.\nSi la \\(p-\\)value du test est inférieure à \\(\\alpha\\), on dit qu’on rejette l’hypothèse nulle au seuil \\(\\alpha\\). Autrement dit, les données observées ne sont pas compatibles avec l’hypothèse nulle. On accepte alors l’hypothèse alternative (\\(H_A\\)).\n\nL’hypothèse nulle est toujours l’hypothèse la moins “intéressante”, celle pour laquelle “il ne se passe rien de notable” (par exemple : “les données suivent la distribution Normale”, ou “les moyennes sont égales”).\n\n\n\n\n1.6.2 Signification de la \\(p-\\)value\nLa \\(p-\\)value est une grandeur centrale en statistiques et elle est souvent mal comprise et donc mal interprétée. Je prends donc le temps ici d’expliquer ce qu’est la \\(p-\\)value et comment il faut la comprendre.\n\n\n\n\n\n\nDéfinition : la \\(p-\\)value\n\n\n\nLa \\(p-\\)value d’un test statistique, c’est la probabilité, si \\(H_0\\) est vraie, d’obtenir un effet au moins aussi extrême que celui qu’on a observé dans l’échantillon, sous le seul effet du hasard.\n\n\nIci, la \\(p-\\)value de notre test de Normalité de Shapiro-Wilk vaut 0.7101. Cela signifie que si les données suivent réellement la loi Normale dans la population générale (donc si \\(H_0\\) est vraie), l’écart à la Normalité que nous avons observé (ou un écart encore plus important), peut être observé dans 70.1% des cas. Autrement dit, si on prélève un grand nombre d’échantillons de 25 adultes dans la population générale et qu’on regarde à quoi ressemble la distribution des températures dans chacun de ces échantillons, pour 70.1% d’entre eux, la distribution obtenue sera au moins aussi éloignée de la distribution Normale que celle que nous avons observée ici.\nDans notre cas, l’écart entre la loi Normale et les données de notre échantillon peut être visualisé de la façon suivante :\n\n\n\n\n\nLa courbe de densité des données observées est en rouge, et la distribution Normale théorique correspond à la courbe en bleu. Il y a donc un écart entre la courbe en cloche parfaite de la loi Normale et les données observées. La \\(p-\\)value du test de Shapiro-Wilk nous dit que si la température des adultes en bonne santé suit réellement la loi Normale dans la population générale, alors, l’écart que nous avons observé, ou un écart encore plus important, peut être observé simplement par hasard dans 70.1% des cas. Autrement dit, c’est très probable, et on peut donc considérer que l’écart à la loi Normale que nous avons observé est le fruit du hasard et que notre variable suit donc bien la Loi Normale.\nPour bien comprendre cette notion importante, je simule ci-dessous 36 échantillons de 25 adultes dont les températures suivent parfaitement la loi Normale dans la population générale. Je me place donc dans la situation ou je sais que \\(H_0\\) est vraie, pour illustrer la notion de fluctuation d’échantillonnage. En raison du seul hasard de l’échantillonnage, et alors même que les échantillons que je génère sont issus d’une population qui suit parfaitement la Normale, la distribution dans chaque échantillon s’écarte parfois fortement de la courbe en cloche théorique :\n\n\n\n\n\nOn voit bien ici que certains échantillons s’écartent fortement de la distribution théorique alors même que tous les échantillons sont issus d’une population Normale. Et plus l’échantillon sera de taille réduite, plus les écarts à la courbe en cloche parfaite seront grands. La preuve ci-dessous avec des échantillons de n = 15 adultes au lieu de 25 :\n\n\n\n\n\nAu final, la \\(p-\\)value de 0.701 de notre test de Shapiro-Wilk nous indique que l’hypothèse de la Normalité n’est pas incompatible avec les données que nous avons observées.\nImaginons qu’à l’inverse, nous ayons obtenu une \\(p-\\)value très faible, égale à 0.01 par exemple (donc inférieure à notre seuil \\(\\alpha\\) de 0.05). Nous aurions alors rejeté l’hypothèse nulle. En effet, obtenir une \\(p-\\)value de 0.01, signifie que si \\(H_0\\) est vraie, obtenir un écart à la courbe en cloche théorique aussi important que celui que nous observons est très peu probable (une chance sur 100). Puisqu’il est très improbable d’observer un tel écart si \\(H_0\\) est vraie, on en conclu que \\(H_0\\) n’est pas vraie : les données sont incompatibles avec l’hypothèse nulle et on la rejette donc logiquement.\nCette logique sera valable pour tous les autres tests statistiques que nous aborderons dans cet ouvrage. Pour un test de Normalité, on regarde l’écart entre la distribution Normale et les données observées. Pour un test de comparaison de moyennes, on regarde l’écart entre la moyenne théorique et la moyenne observée, ou entre les 2 moyennes qu’on essaie de comparer. Mais la philosophie reste la même.\n\n\n1.6.3 Réalisation du test de Student et interprétation\nPuisque les conditions d’application du test de Student à un échantillon sont vérifiées, nous avons le droit de faire ce test, et nous devons donc maintenant spécifier les hypothèses nulles et alternatives que nous allons utiliser pour le réaliser :\n\nH\\(_0\\) : dans la population générale, la température corporelle moyenne des adultes en bonne santé vaut 37ºC (\\(\\mu = 37\\)).\nH\\(_1\\) : dans la population générale, la température corporelle moyenne des adultes en bonne santé est différente de 37ºC (\\(\\mu \\neq 37\\)).\n\n\n\n\n\n\n\nHypothèses et paramètres\n\n\n\nNotez que les hypothèses des tests statistiques concernent toujours la valeur d’un paramètre de la population générale, et non la valeur des estimateurs calculés dans un échantillon.\n\n\nOn réalise ensuite le test de la façon suivante :\n\nt.test(Temp_clean$temperature, mu = 37)\n\nou\n\nt.test(temperature ~ 1, mu = 37, data = Temp_clean)\n\nou encore,\n\nTemp_clean %>%\n  pull(temperature) %>%\n  t.test(mu = 37)\n\n\n    One Sample t-test\n\ndata:  .\nt = -0.56065, df = 24, p-value = 0.5802\nalternative hypothesis: true mean is not equal to 37\n95 percent confidence interval:\n 36.80235 37.11321\nsample estimates:\nmean of x \n 36.95778 \n\n\nLes résultats fournis ont une forme particulière qui est utilisée par de nombreuses fonctions de tests statistiques dans R. Ils méritent donc qu’on s’y attarde un peu.\nSur la première ligne, R nous confirme que nous avons bien réalisé un test de Student à un échantillon. La première ligne de résultats fournit la valeur du \\(t\\) calculé (ici, -0.56), le nombre de degrés de libertés (ici, df = 24), et la \\(p-\\)value (ici, 0.58, soit une valeur supérieure à \\(\\alpha\\)). Cette première ligne contient donc tous les résultats du test qu’il conviendrait de rappeler dans un rapport. On devrait ainsi dire :\n\nAu seuil \\(\\alpha\\) de 5%, le test de Student ne permet pas rejeter l’hypothèse nulle \\(\\mu = 37\\) (\\(t = -0.56\\), ddl = 24, \\(p = 0.58\\)). Les données observées sont donc compatibles avec l’hypothèse selon laquelle la température corporelle moyenne des adultes en bonne santé vaut 37ºC.\n\nC’est de cette manière que vous devriez rapporter les résultats de ce test dans un compte-rendu ou un rapport à partir de maintenant.\nDans les résultats du test, la ligne suivante (alternative hypothesis: ...) ne donne pas la conclusion du test. Il s’agit simplement d’un rappel concernant l’hypothèse alternative qui a été utilisée pour réaliser le test. Ici, l’hypothèse alternative utilisée est une hypothèse bilatérale (\\(\\mu \\neq 37\\)). Nous verrons plus tard comment spécifier des hypothèses alternatives uni-latérales, même si la plupart du temps, mieux vaut s’abstenir de réaliser de tels tests (à moins bien sûr d’avoir une bonne raison de le faire).\nLes résultats fournis ensuite concernent, non plus le test statistique à proprement parler, mais l’estimation. Ici, la moyenne de l’échantillon est fournie. Il s’agit de la meilleure estimation possible de la moyenne de la population : \\(\\bar{x} = \\hat{\\mu} = 36.96\\). Comme pour toutes les estimations, cette valeur est entachée d’incertitude liée à la fluctuation d’échantillonnage. L’intervalle de confiance à 95% de cette estimation de moyenne est donc également fourni : \\([36.80 ; 37.11]\\). Vous notez qu’il s’agit des mêmes valeurs que celles que nous avions calculées dans la Section 1.4.2. Autrement dit, cet intervalle contient les valeurs les plus vraisemblables pour la véritable valeur de moyenne dans la population générale. Cela confirme bien que nous n’avons pas prouvé au sens strict que la moyenne de la population vaut 37ºC. Nous avons en réalité montré que nous ne pouvions pas exclure que la moyenne de la population générale soit de 37ºC. Puisque cette valeur est comprise dans l’intervalle de confiance, on ne peut donc pas l’exclure : nos données sont compatibles avec cette hypothèse. Mais beaucoup d’autres valeurs figurent aussi dans cet intervalle. Il est donc tout à fait possible que la moyenne soit en réalité différente de 37ºC (par exemple, 36.9ºC). Pour en être sûr, il faudrait probablement un échantillon de plus grande taille afin de limiter l’incertitude, d’augmenter la puissance statistique de notre test, et ainsi d’être en mesure de détecter des différences subtiles."
  },
  {
    "objectID": "01-OneSampleTests.html#lalternative-non-paramétrique",
    "href": "01-OneSampleTests.html#lalternative-non-paramétrique",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.7 L’alternative non paramétrique",
    "text": "1.7 L’alternative non paramétrique\nSi jamais les conditions d’application du test de Student à un échantillon n’étaient pas remplies, il faudrait alors réaliser son équivalent non paramétrique : le test de Wilcoxon des rangs signés. Ce test est moins puissant que son homologue paramétrique. On ne l’effectue donc que lorsque l’on n’a pas le choix :\n\nwilcox.test(Temp_clean$temperature, mu = 37, conf.int = TRUE)\n\nou\n\nwilcox.test(temperature ~ 1, mu = 37, conf.int = TRUE, data = Temp_clean)\n\nou encore\n\nTemp_clean %>%\n  pull(temperature) %>%\n  wilcox.test(mu = 37, conf.int = TRUE)\n\nWarning in wilcox.test.default(., mu = 37, conf.int = TRUE): impossible de\ncalculer la p-value exacte avec des ex-aequos\n\n\nWarning in wilcox.test.default(., mu = 37, conf.int = TRUE): impossible de\ncalculer un intervalle de confiance exact avec des ex-aequos\n\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  .\nV = 143, p-value = 0.6077\nalternative hypothesis: true location is not equal to 37\n95 percent confidence interval:\n 36.77780 37.11114\nsample estimates:\n(pseudo)median \n      36.94446 \n\n\nLa syntaxe est identique à celle du test de Student à un échantillon à une exception près : l’ajout de l’argument conf.int = TRUE qui permet d’afficher la (pseudo)médiane de l’échantillon et son intervalle de confiance à 95%.\nLes hypothèses nulles et alternatives de ce test sont les mêmes que celles du test de Student à un échantillon. En toute rigueur, on compare la médiane à une valeur théorique, et non la moyenne. Mais dans la pratique, la grande majorité des utilisateurs de ce test font l’amalgame entre moyenne et médiane. Ici, la conclusion correcte devrait donc être :\n\nAu seuil \\(\\alpha\\) de 5%, on ne peut pas rejeter l’hypothèse nulle (test de Wilcoxon des rangs signés, \\(V\\) = 143, \\(p\\) = 0.6077). La médiane de la population (\\(\\widehat{med}\\) = 36.94) n’est pas significativement différente de 37ºC (IC 95% : \\([36.78 ; 37.11]\\)).\n\nSi les données ne suivent pas la loi Normale, la médiane est bien la métrique la plus intéressante puisque c’est elle qui nous renseigne sur la tendance centrale des données.\nEnfin, les tests de Wilcoxon renvoient souvent des messages d’avertissement. Il ne s’agit que de ça : des avertissements. Tant que la \\(p\\)-value d’un test est éloignée de la valeur seuil \\(\\alpha\\), cela n’a pas d’importance. Quand en revanche la \\(p\\)-value est très proche de \\(\\alpha\\), les messages d’avertissement doivent vous alerter : il faut être très prudent face aux conclusions du test qui peuvent alors être assez “fragiles”."
  },
  {
    "objectID": "01-OneSampleTests.html#sec-puiss",
    "href": "01-OneSampleTests.html#sec-puiss",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.8 Les notions d’erreur et de puissance statistique",
    "text": "1.8 Les notions d’erreur et de puissance statistique\nPour avoir le droit de réaliser un test paramétrique, il faut au préalable vérifier qu’un certain nombre de conditions sont vérifiées. Si ce n’est pas le cas, on réalise un équivalent non paramétrique. On peut alors se demander pourquoi ne pas se contenter de faire des tests non paramétrique systématiquement, sans s’embêter à faire des tests supplémentaires ou des tests paramétriques.\nLa raison est simple et elle est liée aux notions d’erreur et de puissance statistique.\n\n\n\n\n\n\nDéfinitions\n\n\n\n\nErreur de type I : notée \\(\\alpha\\), c’est la probabilité de rejeter à tort l’hypothèse nulle. C’est donc la probabilité de rejeter \\(H_0\\) alors qu’elle est vraie.\nErreur de type II : notée \\(\\beta\\), c’est la probabilité d’accepter à tort l’hypothèse nulle. C’est donc la probabilité d’accepter \\(H_0\\) alors qu’elle est fausse.\nPuissance statistique : notée 1 - \\(\\beta\\)), c’est la probabilité de rejeter l’hypothèse nulle à raison. C’est donc la probabilité de rejeter \\(H_0\\) quand elle est réellement fausse.\n\n\n\nÀ chaque fois que l’on réalise un test statistique, on commet nécessairement les 2 types d’erreurs \\(\\alpha\\) et \\(\\beta\\). On souhaite évidemment minimiser les erreurs, mais on ne peut malheureusement pas faire baisser les 2 en même temps. Faire baisser \\(\\alpha\\) (pour diminuer les faux positifs) conduit toujours à augmenter \\(\\beta\\) (les faux négatifs). Faire baisser \\(\\alpha\\) revient en effet à accepter plus souvent l’hypothèse nulle quand elle est vraie. Cela conduit inévitablement accepter aussi plus souvent l’hypothèse nulle quand elle est fausse (et donc, à augmenter les faux négatifs).\nPour bien comprendre l’enjeu associé à ces erreurs, prenons l’exemple de notre système judiciaire. Lorsqu’un accusé est jugé, il est présumé innocent jusqu’à preuve du contraire. Le procès est l’équivalent d’un test statistique, avec :\n\n\\(H_0\\) : l’accusé est innocent\n\\(H_1\\) : l’accusé est coupable\n\nCommettre une erreur de type I revient à condamner à tort l’accusé (on rejette à tort \\(H_0\\)), donc on condamne un innocent. À l’inverse, commettre une erreur de type II revient à libérer un coupable (accepter à tort \\(H_0\\)). Un système de justice plus strict condamnera un plus grand nombre d’accusés, qu’ils soient coupables ou non. Un système plus strict fera donc augmenter l’erreur de type I et baisser l’erreur de type II. À vous de voir ce que vous préférez : libérer plus de coupables, ou condamner plus d’innocents ?\nEn statistiques, la question est tranchée puisqu’on préfère maintenir l’erreur de type I à un niveau assez faible (à 5% ou moins), quitte à laisser augmenter l’erreur de type II (qui est considérée comme acceptable jusqu’à 20% environ). Toutefois, seule l’erreur de type I est sous notre contrôle. En effet, c’est nous qui la choisissons lorsque l’on fixe le seuil \\(\\alpha\\) de nos tests statistiques.\n\n\n\n\n\n\nÀ retenir\n\n\n\nC’est vous qui fixez l’erreur de type I lorsque vous faites un test statistique. L’erreur de type I est le seuil \\(\\alpha\\) du test, que l’on fixe en général à 0,05 (soit 5%) dans le domaine des sciences du vivant.\n\n\nUne fois que le seuil \\(\\alpha\\) est fixé, l’erreur \\(\\beta\\) l’est aussi dans une certaine mesure. Mais on ne peut la connaitre avec précision car elle dépend de beaucoup de choses, notamment la taille des échantillons dont on dispose, la variabilité des données, le type de test réalisé, etc. En général, plus la taille de l’échantillon sera grande, plus l’erreur \\(\\beta\\) sera faible, et donc plus la puissance sera élevée. De même, par rapport aux tests non paramétriques, les tests paramétriques permettent de minimiser l’erreur \\(\\beta\\) et donc d’augmenter la puissance.\nPuisque la puissance statistique vaut \\(1 - \\beta\\), cela revient à dire que les tests paramétriques sont plus puissants que les tests non paramétriques (parfois, beaucoup plus). Au contraire des erreurs de type I et II, la puissance est une grandeur que l’on souhaite maximiser. On aimerait en effet être capables de systématiquement rejeter \\(H_0\\) quand elle est fausse. Nous avons vu plus haut que c’est hélas impossible. Mais choisir le bon test et la bonne procédure statistique permettent néanmoins d’augmenter la puissance, jusqu’à un certain point. C’est la raison pour laquelle on réalisera toujours un test paramétrique si les données dont on dispose le permettent (donc si les conditions d’application des tests paramétriques sont respectées). Et ce n’est qu’en dernier recours qu’on se tournera vers les tests non paramétriques, toujours moins puissants.\n\n\n\n\n\n\nImportant\n\n\n\nUn test paramétrique est toujours plus puissant que ses homologues non paramétriques. Avec un test paramétrique, il est donc plus probable de rejeter \\(H_0\\) à raison qu’avec un test non paramétrique."
  },
  {
    "objectID": "01-OneSampleTests.html#bilan",
    "href": "01-OneSampleTests.html#bilan",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.9 Bilan",
    "text": "1.9 Bilan\nNous avons vu dans ce chapitre quelle est la procédure à suivre pour réaliser un test de comparaison de la moyenne d’une population à une valeur théorique :\n\nexamen préliminaire des données\ncalcul de statistiques descriptives\ncréation de graphiques exploratoires\nvérification des conditions d’application du test paramétrique\nréalisation du test paramétrique ou non paramétrique selon l’issue de l’étape 4\n\nMais nous avons aussi abordé des notions statistiques essentielles pour la suite :\n\nLes ingrédients indispensables pour réaliser un test statistique (les hypothèses nulle et alternative, la statistique du test et le seuil \\(\\alpha\\)).\nLa \\(p-\\)value et la décision du test.\nLes erreurs de type I (\\(\\alpha\\)) et II (\\(\\beta\\)).\nLa puissance statistique (1 - \\(\\beta\\)) qui n’a rien à voir avec la notion de précision.\nLa notion de test paramétrique ou non paramétrique.\n\nAssurez-vous d’avoir les idées claires sur toutes ces notion car elles sont absolument centrales pour ne pas faire/dire de bêtises lorsque l’on analyse des données."
  },
  {
    "objectID": "01-OneSampleTests.html#exercice-dapplication",
    "href": "01-OneSampleTests.html#exercice-dapplication",
    "title": "1  Comparaison de la moyenne d’une population à une valeur théorique",
    "section": "1.10 Exercice d’application",
    "text": "1.10 Exercice d’application\nLe fichier Temperature2.csv contient les données brutes d’une seconde étude similaire, réalisée à plus grande échelle. Importez ces données et analysez-les afin de vérifier si la température corporelle moyenne des adultes en bonne santé vaut bien 37ºC. Comme toujours, avant de vous lancer dans la réalisation des tests statistiques, prenez le temps d’examiner vos données comme nous l’avons décrit dans la Section 1.4 et la Section 1.5, afin de savoir où vous allez, et de repérer les éventuelles données manquantes ou aberrantes. Enfin, interprétez les résultats à la lumière des notions que nous avons abordées ici (en particulier la notion de puissance statistique).\n\n\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia, Hao Zhu, et Shannon Ellis. 2022. skimr: Compact and Flexible Summaries of Data. https://CRAN.R-project.org/package=skimr.\n\n\nWickham, Hadley. 2022. tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, et Dewey Dunnington. 2022. ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, et Davis Vaughan. 2023. dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Jim Hester, et Jennifer Bryan. 2022. readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html",
    "href": "02-TwoSamplePairedTests.html",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "",
    "text": "Pour ce nouveau chapitre, je vous conseille de travailler dans un nouveau script que vous placerez dans votre répertoire de travail, et dans une nouvelle session de travail (Menu Session > Restart R). Inutile en revanche de créer un nouveau Rproject : vos pouvez tout à fait avoir plusieurs script dans le même répertoire de travail et pour un même Rproject. Comme toujours, consultez le livre en ligne du semestre 3 si vous ne savez plus comment faire.\nSi vous êtes dans une nouvelle session de travail (ou que vous avez quitté puis relancé RStudio), vous devrez penser à recharger en mémoire les packages utiles. Dans ce chapitre, vous aurez besoin d’utiliser les mêmes packages que précédemment :\n\nle tidyverse (Wickham 2022), qui comprend notamment le package readr (Wickham, Hester, et Bryan 2022), pour importer facilement des fichiers .csv au format tibble, le package dplyr (Wickham et al. 2023), pour manipuler des tableaux, et le package ggplot2 (Wickham et al. 2022) pour les représentations graphiques. \nskimr (Waring et al. 2022), qui permet de calculer des résumés de données très informatifs.  \n\n\nlibrary(tidyverse)\nlibrary(skimr)\n\nVous aurez également besoin des jeux de données suivants que vous pouvez dès maintenant télécharger dans votre répertoire de travail :\n\nAutruches.csv\nTestosterone.csv  \n\nEnfin, je spécifie ici une fois pour toutes le thème que j’utiliserai pour tous les graphiques de ce chapitre. Libre à vous de choisir un thème différent ou de vous contenter du thème proposé par défaut :\n\ntheme_set(theme_bw())"
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#contexte",
    "href": "02-TwoSamplePairedTests.html#contexte",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.2 Contexte",
    "text": "2.2 Contexte\nOn s’intéresse ici à la comparaison de 2 séries de données dont les observations sont liées 2 à 2. C’est par exemple le cas lorsque l’on fait subir un traitement à différents sujets et que l’on souhaite comparer les mesures obtenues avant et après le traitement.\nAutrement dit, dans les plans d’expériences appariés, les deux traitements ou modalités sont appliqués à chaque unité d’échantillonnage : chaque sujet ou unité d’échantillonnage fournit plusieurs valeurs. Ça n’était pas le cas du chapitre précédent (@#sec-moy1) où chaque adulte n’avait fourni qu’une unique valeur de température.\nVoici quelques exemples de situations qui devraient être traitées avec des tests sur données appariées :\n\nComparaison de la masse de patients avant et après une hospitalisation.\nComparaison de la diversité de peuplements de poissons dans des lacs avant et après contamination par des métaux lourds.\nTest des effets d’une crème solaire appliquée sur un bras de chaque volontaire alors que l’autre bras ne reçoit qu’un placébo.\nTest des effets du tabagisme dans un échantillon de fumeurs, dont chaque membre est comparé à un non fumeur choisi pour qu’il lui ressemble le plus possible en terme d’âge, de masse, d’origine ethnique et sociale, etc.\nTest des effets que les conditions socio-économiques ont sur les préférences alimentaires en comparant des vrais jumeaux élevés dans des familles adoptives séparées qui diffèrent en termes de conditions socio-économiques.\n\nLes 2 derniers exemples montrent que même des individus séparés peuvent constituer une “paire statistique” s’ils partagent un certain nombre de caractéristiques (physiques, environnementales, génétiques, comportementales, etc.) pertinentes pour l’étude.\nIci, nous allons nous intéresser au lien qui pourrait exister entre la production de testostérone et l’immunité chez une espèce d’oiseau vivant en Amérique du Nord, le carouge à épaulettes.\n\n\n\nLe carouge à épaulettes\n\n\nChez de nombreuses espèces, les mâles ont plus de chances d’attirer des femelles s’ils produisent des niveaux de testostérone élevés. Est-ce que la forte production de testostérone de certains mâles a un coût, notamment en terme d’immunocompétence ? Autrement dit, est-ce que produire beaucoup de testostérone au moment de la reproduction (ce qui fournit un avantage sélectif) se traduit par une immunité plus faible par la suite, et donc une plus forte susceptibilité de contracter des maladies (ce qui constitue donc un désavantage sélectif) ? Ce type de question est central pour comprendre comment l’allocation des ressources affecte à la fois la survie et la fécondité des individus.\nPour étudier cette question, une équipe de chercheurs (Hasselquist et al. 1999) a mis en place le dispositif expérimental suivant. Les niveaux de testostérone de 13 carouges à épaulettes mâles ont été artificiellement augmentés par l’implantation chirurgicale d’un microtube perméable contenant de la testostérone. L’immunocompétence a été mesurée pour chaque oiseau avant et après l’opération chirurgicale. La variable mesurée est la production d’anticorps suite à l’exposition des oiseaux avec un antigène non pathogène mais censé déclencher une réponse immunitaire. Les taux de production d’anticorps sont exprimés en logarithmes de densité optique par minute \\(\\left(\\ln\\frac{mOD}{min}\\right)\\). Si la production de testostérone influence l’immunocompétence, on s’attend à observer des différence de production d’anticorps avant et après l’intervention chirurgicale."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#importation-et-mise-en-forme-des-données",
    "href": "02-TwoSamplePairedTests.html#importation-et-mise-en-forme-des-données",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.3 Importation et mise en forme des données",
    "text": "2.3 Importation et mise en forme des données\nLes données se trouvent dans le fichier Testosterone.csv. Importez ces données dans un objet nommé Testo et affichez son contenu.\n\n\n\n\nTesto\n\n# A tibble: 13 × 5\n   blackbird beforeImplant afterImplant logBeforeImplant logAfterImplant\n       <dbl>         <dbl>        <dbl>            <dbl>           <dbl>\n 1         1           105           85             4.65            4.44\n 2         2            50           74             3.91            4.3 \n 3         3           136          145             4.91            4.98\n 4         4            90           86             4.5             4.45\n 5         5           122          148             4.8             5   \n 6         6           132          148             4.88            5   \n 7         7           131          150             4.88            5.01\n 8         8           119          142             4.78            4.96\n 9         9           145          151             4.98            5.02\n10        10           130          113             4.87            4.73\n11        11           116          118             4.75            4.77\n12        12           110           99             4.7             4.6 \n13        13           138          150             4.93            5.01\n\n\nVisiblement, il n’y a pas de données manquantes mais certaines variables sont inutiles. En effet, nous aurons besoin des variables transformées en logarithmes, mais pas des 2 colonnes beforeImplant et afterImplant. Nous allons donc les retirer avec la fonction select(). Par ailleurs, la variable blackbird est importante puisque chaque individu a fourni 2 valeurs de production d’anticorps : 1 avant et 1 après l’opération chirurgicale. Il sera donc important de conserver cet identifiant individuel. Toutefois, il apparaît ici sous la forme d’une variable numérique alors qu’il s’agit d’un identifiant, d’un code. Il faut donc le transformer en facteur car cela n’aurait pas de sens calculer une moyenne des identifiants par exemple. Pour cela, nous utiliserons la fonction factor() à l’intérieur de mutate(). Enfin, nous renommerons les colonnes avec rename() pour avoir des noms plus courts et plus faciles à utiliser. Si vous ne vous rappelez plus comment utilisez ces fonctions, consulter ces chapitres du livre en ligne de biométrie du semestre 3 : select() et rename(), mutate() et factor(). Enfin, nous donnerons le nom Testo_large au tableau modifié :\n\nTesto_large <- Testo %>% \n  select(-beforeImplant, -afterImplant) %>%  # Suppression des colonnes inutiles\n  mutate(blackbird = factor(blackbird)) %>%  # Transformation en facteur \n  rename(ID = blackbird,                     # Changement des noms de variables\n         Before = logBeforeImplant,\n         After = logAfterImplant)\n\nTesto_large\n\n# A tibble: 13 × 3\n   ID    Before After\n   <fct>  <dbl> <dbl>\n 1 1       4.65  4.44\n 2 2       3.91  4.3 \n 3 3       4.91  4.98\n 4 4       4.5   4.45\n 5 5       4.8   5   \n 6 6       4.88  5   \n 7 7       4.88  5.01\n 8 8       4.78  4.96\n 9 9       4.98  5.02\n10 10      4.87  4.73\n11 11      4.75  4.77\n12 12      4.7   4.6 \n13 13      4.93  5.01\n\n\nLe tableau Testo_large dont nous disposons maintenant n’est pas dans un format qui nous permettra de réaliser toutes les opérations dont nous aurons besoin. En réalité, il ne s’agit pas d’un “tableau rangé” au sens du tidyverse. Un tableau rangé est un tableau dans lequel chaque ligne correspond à une unique observation et chaque colonne correspond à une unique variable. Ici, nous devrions avoir les 3 variables suivantes :\n\nL’identifiant des individus. La colonne ID correspond à cette variable.\nLe moment auquel chaque mesure a été effectuée, avant ou après l’opération chirurgicale. Cette information est pour l’instant stockée dans l’en-tête des colonnes 2 et 3 du tableau Testo_large\nLa mesure de réponse immunitaire (en logarithme de la densité optique par minute). Cette information est pour l’instant stockée sous forme de valeurs numériques dans les colonnes 2 et 3 du tableau Testo_large\n\nPour obtenir un tableau rangé, il nous faut donc réorganiser les colonnes 2 et 3 du tableau Testo_large :\n\nl’entête de ces 2 colonnes devrait constituer une nouvelle variable que nous nommerons Moment\nle contenu de ces 2 colonnes (les valeurs numériques) devrait constituer une nouvelle variable que nous nommerons DO (pour densité optique).\n\nPour effectuer cette transformation, nous utiliserons la fonction pivot_longer() du package tidyr (il est déjà chargé en mémoire si vous avez chargé le tidyverse). Comme son nom l’indique, cette fonction produira un tableau plus “long” (qui aura plus de lignes) que le tableau de départ. Nous l’appellerons donc Testo_long :\n\nTesto_long <- Testo_large %>%\n  pivot_longer(cols = c(Before, After),   # Les colonnes qu'on veut réorganiser\n               names_to = \"Moment\",   # Quel nom donner à la variable qui contiendra les noms des anciennes colonnes\n               values_to = \"DO\") %>%      # Quel nom donner à la variable qui contiendra le contenu des anciennes colonnes\n  mutate(Moment = factor(Moment, levels = c(\"Before\", \"After\")))\n\nTesto_long\n\n# A tibble: 26 × 3\n   ID    Moment    DO\n   <fct> <fct>  <dbl>\n 1 1     Before  4.65\n 2 1     After   4.44\n 3 2     Before  3.91\n 4 2     After   4.3 \n 5 3     Before  4.91\n 6 3     After   4.98\n 7 4     Before  4.5 \n 8 4     After   4.45\n 9 5     Before  4.8 \n10 5     After   5   \n# … with 16 more rows\n\n\nCe nouvel objet contient les mêmes données que précédemment, mais sous un format différent (il contient maintenant 26 lignes et non plus 13) : il s’agit d’un tableau rangé.\nLa plupart du temps, on a besoin de ces 2 formats de tableaux quand nous traitons des données. Le tableau au format long est à privilégier pour les représentations graphiques et les tests statistiques, et le format court sert souvent à présenter des résultats sous une forme synthétique. Mais parfois (et c’est justement le cas quand on dispose de données appariées comme pour notre exemple de lien entre testostérone et immunocompétence), le tableau au format large permettra de faire certains graphiques, certains tests ou certaines manipulations plus facilement que le tableau rangé au format long.\nSi on ne dispose que d’un tableau au format large, on peut passer au format long, comme nous venons de le faire, grâce à la fonction pivot_longer(). Et si on ne dispose que d’un tableau au format long, on peut passer au format large grâce à la fonction pivot_wider(). Nous avons déjà d’ailleurs évoqué cette fonction dans le livre en ligne de biométrie du semestre 4 pour mettre en forme des résultats obtenus avec summarise() (par exemple ici) ou reframe() (ou là), et je vous encourage à y jeter un œil à nouveau pour vous remémorer la syntaxe. Car il est important que vous maîtrisiez ces 2 fonctions dont vous aurez très souvent besoin.\nMaintenant que nous disposons de ces 2 tableaux, Testo_large et Testo_long, nous pouvons commencer à décrire nos données."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#exploration-statistique-des-données",
    "href": "02-TwoSamplePairedTests.html#exploration-statistique-des-données",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.4 Exploration statistique des données",
    "text": "2.4 Exploration statistique des données\nPour décrire simplement les données, nous nous en tiendront ici à l’utilisation des fonctions summary() et skim().\nPour la fonction summary(), le plus simple est toujours d’utiliser le tableau au format large :\n\nsummary(Testo_large)\n\n       ID        Before          After     \n 1      :1   Min.   :3.910   Min.   :4.30  \n 2      :1   1st Qu.:4.700   1st Qu.:4.60  \n 3      :1   Median :4.800   Median :4.96  \n 4      :1   Mean   :4.734   Mean   :4.79  \n 5      :1   3rd Qu.:4.880   3rd Qu.:5.00  \n 6      :1   Max.   :4.980   Max.   :5.02  \n (Other):7                                 \n\n\nOn constate ici que pour les 2 traitements, les valeurs des différents indices sont très proches entre les 2 séries de données, avec des valeurs de densité optiques (DO) légèrement supérieures après l’opération chirurgicale (sauf pour le premier quartile).\nPour la fonction skim() le plus simple est là aussi d’utiliser le tableau large :\n\nskim(Testo_large)\n\n── Data Summary ────────────────────────\n                           Values     \nName                       Testo_large\nNumber of rows             13         \nNumber of columns          3          \n_______________________               \nColumn type frequency:                \n  factor                   1          \n  numeric                  2          \n________________________              \nGroup variables            None       \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts            \n1 ID                    0             1 FALSE         13 1: 1, 2: 1, 3: 1, 4: 1\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate mean    sd   p0 p25  p50  p75 p100 hist \n1 Before                0             1 4.73 0.280 3.91 4.7 4.8  4.88 4.98 ▁▁▁▃▇\n2 After                 0             1 4.79 0.262 4.3  4.6 4.96 5    5.02 ▂▁▂▁▇\n\n\nOn arrive toutefois aux mêmes résultats avec le tableau long, à condition de grouper les données par traitement (variable Traitement) avec group_by() :\n\nTesto_long %>%\n  group_by(Moment) %>%\n  skim(DO)\n\n── Data Summary ────────────────────────\n                           Values    \nName                       Piped data\nNumber of rows             26        \nNumber of columns          3         \n_______________________              \nColumn type frequency:               \n  numeric                  1         \n________________________             \nGroup variables            Moment    \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable Moment n_missing complete_rate mean    sd   p0 p25  p50  p75\n1 DO            Before         0             1 4.73 0.280 3.91 4.7 4.8  4.88\n2 DO            After          0             1 4.79 0.262 4.3  4.6 4.96 5   \n  p100 hist \n1 4.98 ▁▁▁▃▇\n2 5.02 ▂▁▂▁▇\n\n\nCela revient à demander à la fonction skim() de produire un résumé des données de densité optique (variable DO), pour chaque catégorie de la variable Moment, soit un résumé pour la catégorie Before (avant l’intervention chirurgicale), et un résumé pour la catégorie After (après l’intervention chirurgicale).\nPar rapport aux résultats fournis par la fonction summary(), la fonction skim() nous permet de confirmer que les valeurs de DO sont très légèrement supérieures après l’opération (sauf pour le premier quartile). Elle nous permet également de constater que l’écart-type est du même ordre de grandeur pour les 2 catégories, bien qu’il soit légèrement plus faible après l’opération. Enfin, les petits histogrammes laissent entrevoir une distribution très asymétrique des données dans chacun des 2 groupes de mesures."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#exploration-graphique-des-données",
    "href": "02-TwoSamplePairedTests.html#exploration-graphique-des-données",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.5 Exploration graphique des données",
    "text": "2.5 Exploration graphique des données\nIci, c’est le tableau rangé au format long qui sera le plus adapté. Lorsque nous avions une unique série de données, nous avons utilisé 2 types de représentations graphiques très similaires pour visualiser les données (les histogrammes et les graphiques de densités). Ici, nous allons utiliser ces mêmes types de graphiques mais “facettés”. Les graphiques facettés ont été abordés dans le livre en ligne de biométrie du semestre 3. Ils permettent de faire des sous-graphiques pour chaque catégorie d’un facteur. Ici, le facteur Moment contient 2 catégories. Les facets nous permettrons donc de comparer les 2 distributions de densités optiques.\nOutre ces graphiques, nous utiliserons aussi les stripcharts et les boites à moustaches pour comparer les 2 catégories. Ces 2 types de graphiques sont particulièrement adaptés pour ce genre de tâche, et seront aussi très utiles pour l’ANOVA lorsque nous aurons plus de 2 catégories à comparer.\nD’une façon générale, nous disposons :\n\nd’une variable numérique, DO : la mesure de densité optique qui rend compte de l’immunocompétence des carouges à épaulettes\nd’une variable catégorielle, le facteur Moment : indique si les valeurs d’immunocompétences ont été mesurées avant ou après l’opération chirurgicale d’implantation de la capsule de testostérone.\n\nTous les graphiques présentés dans le chapitre consacré à cette situation précise dans le livre en ligne de biométrie du semestre 3, peuvent être réalisés. N’hésitez pas à le relire, en particulier la section expliquant comment faire apparaître et interpréter les encoches d’incertitudes sur des boiites à moustaches.\n\n2.5.1 Avec un stripchart\n\nTesto_long %>%\n  ggplot(aes(x = Moment, y = DO)) +\n  geom_jitter(height = 0, width = 0.25) +\n  labs(y = \"immunocompétence (log DO / minute)\",\n       title = \"immunocompétence\\navant et après l'opération\",\n       subtitle = \"n = 13 carouges à épaulettes\")\n\n\n\n\n\n\n\n\n\n\n2.5.2 Avec des histogrammes facettés\nNous allons faire un histogramme pour chaque série de données en utilisant des facettes :\n\nTesto_long %>%\n  ggplot(aes(x = DO)) +\n  geom_histogram(bins = 10, fill = \"firebrick2\", color = \"grey20\", alpha = 0.5)+\n  geom_rug() +\n  facet_wrap(~Moment, ncol = 1) +\n  labs(x = \"immunocompétence (log DO / minute)\",\n       y = \"Fréquence\",\n       title = \"Comparaison de l'immunocompétence avant et après l'opération chirurgicale\",\n       subtitle = \"n = 13 carouges à épaulettes\")\n\n\n\n\n\n\n2.5.3 Avec des diagrammes de densité facettés\n\nTesto_long %>%\n  ggplot(aes(x = DO)) +\n  geom_density(fill = \"firebrick2\", alpha = 0.5) +\n  geom_rug() +\n  facet_wrap(~Moment, ncol = 1) +\n  labs(x = \"immunocompétence (log DO / minute)\",\n       y = \"Densité\",\n       title = \"Comparaison de l'immunocompétence avant et après l'opération chirurgicale\",\n       subtitle = \"n = 13 carouges à épaulettes\")\n\n\n\n\n\n\n2.5.4 Avec des boîtes à moustaches\n\nTesto_long %>%\n  ggplot(aes(x = Moment, y = DO)) +\n  geom_boxplot(notch = TRUE) +\n  expand_limits(y = 5.2) +\n  labs(y = \"immunocompétence (log DO / minute)\",\n       title = \"Comparaison de l'immunocompétence avant et après opération chirurgicale\",\n       subtitle = \"n = 13 carouges à épaulettes\")\n\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?\n\n\n\n\n\n\n\n\n\nDu point de vue de la position des données, ces différents graphiques montrent tous que la seconde série de données (catégorie After : après l’opération chirurgicale) présente en moyenne des valeurs très légèrement plus élevées que la première (catégorie Before avant l’opération). En terme de dispersion, si l’on met de côté la valeur minimale de la série Before qui semble atypique (un individu outlier qui présente une immunocompétence très faible avant l’opération), la dispersion des données autour de la tendance centrale semble globalement plus importante pour la série After. Enfin, pour ce qui concerne l’incertitude, les intervalles de confiance à 95% des médianes (qui apparaissent sous la forme d’encoches sur les boîtes à moustaches) se chevauche assez largement, ce qui nous permet d’anticiper les résultats des tests que nous ferons ensuite : puisque les encoches se chevauchent, il y a fort à parier que le test de comparaison de moyenne ne montrera aucune différence significative. On note également que l’encoche de la série After est particulièrement large : la limite supérieure de l’intervalle de confiance à 95% de la médiane est supérieure à la valeur maximale observée dans l’échantillon. Cela traduit le fait que compte de la grande variabilité des données dans cette série, un échantillon de taille n = 13 n’est probablement pas suffisant pour avoir une estimation précise de la médiane.\n\n\n2.5.5 Avec un nuage de points appariés\nToutes ces représentations graphiques sont certes utiles, mais elles masquent un élément crucial : ce sont les mêmes individus qui sont étudiés avant et après l’opération. Il s’agit de données appariées ! Les graphiques que nous avons faits jusque là ne permettent pas de visualiser ce lien entre les deux séries de données. Pour avoir une bonne vision de ce qui se passe, il nous faut faire apparaître ce lien entre les 2 séries de données :\n\nTesto_long %>%\n  ggplot(aes(x = Moment, y = DO, group = ID, color = ID)) +\n  geom_line() +\n  geom_point() +\n  labs(y = \"immunocompétence (log DO / minute)\",\n       title = \"Comparaison de l'immunocompétence avant et après opération chirurgicale\",\n       subtitle = \"n = 13 carouges à épaulettes\", \n       color = \"Individu\")\n\n\n\n\n\n\n\n\nCe graphique nous donne une image très différente de la réalité des données. On constate ici que l’immunocompétence de certains individus augmente après l’opération (parfois fortement), alors que pour d’autres, elle diminue.\nUne façon d’estimer si les changements d’immunocompétence sont majoritairement orientés dans un sens ou non est de calculer l’intervalle de confiance à 95% de la différence d’immunocompétence entre avant et après l’opération. Pour cela, on peut calculer, grâce au tableau large Testo_large, les différences d’immunocompétences (DO après opération moins DO avant opération), pour chacun des 13 individus. puis, grâce à la fonction mean_cl_normal() déjà utilisée à plusieurs reprises, on calcul l’intervalle de confiance à 95% de la moyenne de cette différence :\n\n# Calcul de la différence de DO (After - Before)\nTesto_large <- Testo_large %>% \n  mutate(Difference = After - Before)\n\n# Affichage du tableau\nTesto_large\n\n# A tibble: 13 × 4\n   ID    Before After Difference\n   <fct>  <dbl> <dbl>      <dbl>\n 1 1       4.65  4.44    -0.21  \n 2 2       3.91  4.3      0.390 \n 3 3       4.91  4.98     0.0700\n 4 4       4.5   4.45    -0.0500\n 5 5       4.8   5        0.200 \n 6 6       4.88  5        0.120 \n 7 7       4.88  5.01     0.130 \n 8 8       4.78  4.96     0.180 \n 9 9       4.98  5.02     0.0400\n10 10      4.87  4.73    -0.140 \n11 11      4.75  4.77     0.0200\n12 12      4.7   4.6     -0.100 \n13 13      4.93  5.01     0.0800\n\n# Calcul de la moyenne des différences et de son IC95%\nTesto_large %>% \n  reframe(mean_cl_normal(Difference))\n\n# A tibble: 1 × 3\n       y    ymin  ymax\n   <dbl>   <dbl> <dbl>\n1 0.0562 -0.0401 0.152\n\n\nOn constate ici que la moyenne des différences de densité optique vaut 0.06, soit une valeur positive, qui montre que l’immunocompétence augmente après l’opération (ce qui semble aller à l’opposé de l’hypothèse des chercheurs). Cette moyenne reste néanmoins très proche de 0. D’ailleurs, l’intervalle de confiance de cette moyenne comprend les valeurs situées entre -0.04 et +0.15. La valeur 0 est donc comprise dans cet intervalle. Le zéro fait donc partie des valeurs les plus probables pour la moyenne de ces différences dans la populations générale. C’est là encore un résultat qui nous permet d’anticiper sur les résultats du tests statistique que nous ferons ensuite."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#le-test-paramétrique",
    "href": "02-TwoSamplePairedTests.html#le-test-paramétrique",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.6 Le test paramétrique",
    "text": "2.6 Le test paramétrique\n\n2.6.1 Procédure\nLe test paramétrique permettant de comparer la moyenne sur des séries appariées est là encore un test de Student : le test de Student sur données appariées (étonnant non ?…). En réalité, ce test de Student n’est pas un test de comparaison de moyennes entre 2 séries de données. La procédure est la suivante :\n\nPour chaque individu, calculer la différence d’immunocompétence entre les deux temps de l’expérience (DO après - DO avant opération). C’est ce que nous avons fait plus haut en ajoutant la colonne Difference au tableau Testo_large.\nPuisque nous avons 13 individus, nous aurons 13 valeurs de différences. La moyenne de cette différence sera comparée à la valeur théorique 0. Autrement dit, si cette moyenne vaut 0, l’immunocompétence sera la même avant et après l’opération. Si la moyenne des différence n’est pas égale 0, alors nous aurons prouvé qu’il existe une différence d’immunocompétence entre les 2 groupes, nous aurons prouvé que la procédure chirurgicale d’implantation de la capsule de testostérone a un impact sur l’immunocompétence des carouges à épaulettes\n\n\n\n\n\n\n\nAttention\n\n\n\nDans un test sur données appariées, on s’intéresse à la moyenne des différences entre les données des 2 séries. Cette moyenne est alors comparée à la valeur théorique \\(\\mu\\) = 0. Ce test est donc équivalent au test vu dans le Chapitre 1 sur la comparaison de la moyenne d’une population à une valeur théorique.\nNotez également que la moyenne des différences n’est pas équivalente à la différence des moyennes. La différence des moyennes est une grandeur qui nous sera utile dans le chapitre suivant (Chapitre 3) sur la comparaison de la moyenne de deux populations lorsque les données sont indépendantes.\n\n\n\n\n2.6.2 Conditions d’application\nLes conditions d’application de ce test paramétrique sont presque les mêmes que pour le test de Student à un échantillon :\n\nLes individus sur lesquels portent la comparaison doivent être issus d’un échantillonnage aléatoire. Comme toujours, en l’absence d’indication contraire, on considère que cette condition est vérifiée.\nLes différences par paires entre les 2 modalités du traitement doivent suivre une distribution Normale. Attention, ce n’est donc pas les données brutes de chaque série qui doivent suivre une loi Normale, mais bien la différence “après” - “avant” calculée pour chaque individu. Nous avons déjà calculé ces différences plus haut :\n\n\n# On s'intéresse aux 13 différences calculées sur les 13 individus\nTesto_large \n\n# A tibble: 13 × 4\n   ID    Before After Difference\n   <fct>  <dbl> <dbl>      <dbl>\n 1 1       4.65  4.44    -0.21  \n 2 2       3.91  4.3      0.390 \n 3 3       4.91  4.98     0.0700\n 4 4       4.5   4.45    -0.0500\n 5 5       4.8   5        0.200 \n 6 6       4.88  5        0.120 \n 7 7       4.88  5.01     0.130 \n 8 8       4.78  4.96     0.180 \n 9 9       4.98  5.02     0.0400\n10 10      4.87  4.73    -0.140 \n11 11      4.75  4.77     0.0200\n12 12      4.7   4.6     -0.100 \n13 13      4.93  5.01     0.0800\n\n\nIl nous faut donc tester la Normalité de la nouvelle variable Difference. Commençons par en faire un graphique :\n\nTesto_large %>%\n  ggplot(aes(x = Difference)) +\n  geom_density(fill = \"firebrick2\", alpha = 0.5) +\n  geom_rug() +\n  labs(x = \"Différence d'immunocompétence 'Après - Avant' l'opération (log DO / minute)\",\n       y = \"Densité\",\n       title = \"Distribution de la différence d'immunocompétence entre après et avant l'opération chirurgicale\",\n       subtitle = \"n = 13 carouges à épaulettes\")\n\n\n\n\nCompte tenu du faible nombre d’individus (n = 13), la forme de cette courbe de densité n’est pas si éloignée que ça d’une courbe en cloche (notez que ce n’était pas du tout le cas pour les données brutes de chaque série de départ qui ont toutes les deux des distributions très éloignées de la distribution Normale). On le vérifie avec un test de normalité de Shapiro-Wilk :\n\nH\\(_0\\) : la différence d’immunocompétence des individus suit une distribution Normale.\nH\\(_1\\) : la différence d’immunocompétence des individus ne suit pas une distribution Normale.\n\n\nTesto_large %>%\n  pull(Difference) %>%\n  shapiro.test()\n\n\n    Shapiro-Wilk normality test\n\ndata:  .\nW = 0.97949, p-value = 0.977\n\n\n\nAu seuil \\(\\alpha = 0.05\\), on ne peut pas rejeter l’hypothèse nulle de normalité pour la différence d’immunocompétence entre après et avant l’intervention chirurgicale (test de Shapiro-Wilk, \\(W = 0.98\\), \\(p = 0.977\\)).\n\nLes conditions d’application du test paramétrique sont donc réunies.\n\n\n\n\n\n\nAttention !\n\n\n\nPour ce test, la Normalité doit bien être verifiée sur la différence entre les 2 groupes de valeurs, et non sur chaque groupe de valeur pris séparément. C’est une source d’erreur fréquente. Ici, les données de départ (DO avant et DO après) ne suivaient pas du tout une distribution Normale. Pourtant, la différence de DO suit bel et bien la distribution Normale, nous permettant de faire le test paramétrique.\n\n\n\n\n2.6.3 Réalisation du test et interprétation\nLe test de Student sur données appariées peut se faire de 3 façons distinctes. Les 3 méthodes fournissent exactement les mêmes résultats, seule la syntaxe utilisée change. Quelle que soit la méthode utilisée, les hypothèses nulles et alternatives sont toujours les mêmes :\n\nH\\(_0\\) : le changement moyen de production d’anticorps après la pose chirurgicale de l’implant de testostérone est nul (\\(\\mu_{Diff} = 0\\)). La procédure chirurgicale n’a pas d’effet sur l’immunocompétence. Les variations observées ne sont que le fruit du hasard de l’échantillonnage.\nH\\(_1\\) : le changement moyen de production d’anticorps après la pose chirurgicale de l’implant de testostérone n’est pas nul (\\(\\mu_{Diff} \\neq 0\\)). La procédure chirurgicale a effet significatif sur l’immunocompétence. Les variations observées ne sont pas uniquement dues à la fluctuation d’échantillonnage.\n\n\n2.6.3.1 Première syntaxe\n\n# Méthode nº1 : avec une formule et le tableau au format long\nt.test(DO ~ Moment, data = Testo_long, paired = TRUE)\n\n\n    Paired t-test\n\ndata:  DO by Moment\nt = -1.2714, df = 12, p-value = 0.2277\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.15238464  0.04007695\nsample estimates:\nmean difference \n    -0.05615385 \n\n\nPlusieurs remarques concernant cette première syntaxe :\n\nOn utilise le symbole “~” pour indiquer une formule. On cherche à regarder l’effet du Moment sur la DO qui traduit l’immunocompétence. Le “~” se lit : “en fonction de”.\nAvec la syntaxe utilisant les formules, on doit spécifier l’argument data = Testo_long pour indiquer à RStudio que les variables DO et Moment sont des colonnes de ce tableau.\nEnfin, il est important d’indiquer paired = TRUE puisque nous réalisons un test de Student sur données appariées. Si on ne mets pas cet argument, on réalise un test de Student sur échantillons indépendants, ce qui peut grandement fausser les résultats.\n\nIci, voilà la conclusion de ce test :\n\nLe test de Student sur données appariées ne permet pas de montrer de changement d’immunocompétence suite à l’intégration de l’implant chirurgical de testostérone. On ne peut pas rejeter l’hypothèse nulle au seuil \\(\\alpha = 0.05\\) (\\(t = -1.27\\), \\(ddl = 12\\), \\(p = 0.223\\)). La moyenne des différences de densités optiques observées entre avant et après l’intervention chirurgicale vaut -0.056 (intervalle de confiance à 95% de cette différence : [-0.152 ; 0.040])\n\nDonc visiblement, une forte production de testostérone n’est pas significativement associée à une baisse de l’immunocompétence.\n\n\n\n\n\n\nPoint de vigilance\n\n\n\nAvec cette première syntaxe, la différence qui est calculée n’est pas After - Before comme nous l’avons fait manuellement dans le tableau Testo_large, mais Before - After. En effet, dans le facteur Moment du tableau Testo-Long, la première modalité est Before, et la seconde modalité est After. Par défaut, le test de Student calcule toujours la différence dans le même sens : première modalité moins seconde modalité.\nCela explique pourquoi la différence calculée ici vaut -0.056, alors qu’elle valait +0.056 quand nous l’avions calculée manuellement plus haut. C’est important d’en prendre conscience pour ne pas interpréter à l’envers les résultats du test statistique.\nPour la même raison, les signes et l’ordre des bornes de l’intervalle de confiance à 95% de la moyenne des différences est également inversé. Manuellement, nous avions calculé un intervalle de confiance de [-0.04 ; +0.15], ici, il vaut [-0.15 ; +0.04].\n\n\n\n\n2.6.3.2 Deuxième syntaxe\n\n# Méthode nº2 : avec les 2 séries de données et le tableau au format large\nt.test(Testo_large$Before, Testo_large$After, paired = TRUE)\n\n\n    Paired t-test\n\ndata:  Testo_large$Before and Testo_large$After\nt = -1.2714, df = 12, p-value = 0.2277\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.15238464  0.04007695\nsample estimates:\nmean difference \n    -0.05615385 \n\n\nCette deuxième syntaxe est différente de la première puisque nous n’utilisons plus le format formule. Ici, on indique le nom des 2 colonnes du tableau Testo_large qui contiennent les 2 séries de données. Puisque nous n’utilisons plus de formule, l’argument “data = ...” n’existe plus. C’est pourquoi il nous faut taper spécifiquement “Testo_large$Before” et “Testo_large$After”, et non pas simplement le nom des colonnes. En revanche, comme pour le test précédent, il est indispensable d’indiquer “paired = TRUE” pour faire un test de Student sur données appariées.\nLes résultats fournis et leur interprétation sont identiques à ceux de la syntaxe précédente. Vous notez aussi que les résultats et leurs interprétation dépendent de l’ordre dans lequel les 2 séries de données sont indiquées dans la fonction t.test(). Pour vous en convaincre, regardez ce que donne cette commande :\n\nt.test(Testo_large$After, Testo_large$Before, paired = TRUE)\n\nQu’est-ce qui change ? Et qu’est-ce qui reste inchangé ?\n\n\n2.6.3.3 Troisième syntaxe\n\n# Méthode nº3 : avec la variable Diff, mu = 0, et le tableau au format large\nt.test(Testo_large$Difference, mu = 0)\n\n\n    One Sample t-test\n\ndata:  Testo_large$Difference\nt = 1.2714, df = 12, p-value = 0.2277\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.04007695  0.15238464\nsample estimates:\n mean of x \n0.05615385 \n\n\nEnfin, comme expliqué plus haut, le test de Student sur données appariées est strictement équivalent à un test de Student à un échantillon pour lequel on compare la moyenne des différences individuelles à 0. Là encore, les résultats produits et leur interprétation sont identiques aux deux tests précédents. La seule différence concerne les signes puisque les deux premiers tests regardaient la différence “Before - After” alors que ce troisième test regarde la différence “After - Before” (que nous avons calculée manuellement).\nÀ vous donc de choisir la syntaxe qui vous paraît la plus parlante ou celle que vous avez le plus de facilité à retenir et à interpréter."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#lalternative-non-paramétrique",
    "href": "02-TwoSamplePairedTests.html#lalternative-non-paramétrique",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.7 L’alternative non paramétrique",
    "text": "2.7 L’alternative non paramétrique\nComme pour le test de Student à un échantillon, lorsque les conditions d’application du test de Student sur données appariées ne sont pas vérifiées (c’est à dire lorsque la différence entre les données appariées des deux séries ne suit pas une loi Normale), il faut utiliser un test non paramétrique équivalent.\nIl s’agit là encore du test de Wilcoxon des rangs signés qui s’intéresse aux médianes. Les hypothèses nulles et alternatives sont les suivantes :\n\nH\\(_0\\) : le changement médian de production d’anticorps après la pose chirurgicale de l’implant de testostérone est nul (\\(med_{Diff} = 0\\)).\nH\\(_1\\) : le changement médian de production d’anticorps après la pose chirurgicale de l’implant de testostérone n’est pas nul (\\(med_{Diff} \\neq 0\\)).\n\nComme pour le test de Student, 3 syntaxes sont possibles et strictement équivalentes. Il est important de ne pas oublier l’argument paired = TRUE pour les 2 premières syntaxes afin de s’assurer que l’on réalise bien un test sur données appariées. Enfin, l’argument conf.int = TRUE doit être ajouté pour les 3 syntaxes afin que la (pseudo-) médiane et son intervalle de confiance à 95% soient calculés et affichés.\n\nwilcox.test(DO ~ Moment, data = Testo_long, paired = TRUE, conf.int = TRUE)\n\n\n    Wilcoxon signed rank exact test\n\ndata:  DO by Moment\nV = 30, p-value = 0.3054\nalternative hypothesis: true location shift is not equal to 0\n95 percent confidence interval:\n -0.145  0.040\nsample estimates:\n(pseudo)median \n        -0.055 \n\nwilcox.test(Testo_large$Before, Testo_large$After, paired = TRUE,\n            conf.int = TRUE)\n\n\n    Wilcoxon signed rank exact test\n\ndata:  Testo_large$Before and Testo_large$After\nV = 30, p-value = 0.3054\nalternative hypothesis: true location shift is not equal to 0\n95 percent confidence interval:\n -0.145  0.040\nsample estimates:\n(pseudo)median \n        -0.055 \n\nwilcox.test(Testo_large$Difference, mu = 0, conf.int = TRUE)\n\n\n    Wilcoxon signed rank exact test\n\ndata:  Testo_large$Difference\nV = 61, p-value = 0.3054\nalternative hypothesis: true location is not equal to 0\n95 percent confidence interval:\n -0.040  0.145\nsample estimates:\n(pseudo)median \n         0.055 \n\n\nIci, la conclusion de ce test est :\n\nLe test de Wilcoxon des rangs signés n’a pas permis de montrer de changement d’immunocompétence suite à l’intégration de l’implant chirurgical de testostérone. On ne peut pas rejeter l’hypothèse nulle au seuil \\(\\alpha = 0.05\\) (\\(V = 61\\), \\(p = 0.305\\)). La médiane des différences de densités optiques observées entre après et avant l’intervention chirurgicale vaut 0.055 (intervalle de confiance à 95% de cette différence : [-0.040 ; 0.145])."
  },
  {
    "objectID": "02-TwoSamplePairedTests.html#exercice-dapplication",
    "href": "02-TwoSamplePairedTests.html#exercice-dapplication",
    "title": "2  Comparaison de moyennes : deux échantillons appariés",
    "section": "2.8 Exercice d’application",
    "text": "2.8 Exercice d’application\nLes autruches vivent dans des environnements chauds et elles sont donc fréquemment exposées au soleil durant de longues périodes. Dans des environnements similaires, les mammifères ont des mécanismes physiologiques leur permettant de réduire la température de leur cerveau par rapport à celle de leur corps. Une équipe de chercheurs (Fuller et al. 2003) a testé si les autruches pouvaient faire de même. La température du corps et du cerveau de 37 autruches a été enregistrée par une journée chaude typique. Les résultats, exprimés en degrés Celsius, figurent dans le fichier Autruches.csv.\nImportez ces données et faites-en l’analyse pour savoir s’il existe une différence de température moyenne entre le corps et le cerveau des autruches. Vos observations chez les autruches sont-elles conformes à ce qui est observé chez les mammifères dans un environnement similaire ? Comme toujours, vous commencerez par faire une analyse descriptive des données, sous forme numérique et graphique, avant de vous lancer dans les tests d’hypothèses.\n\n\n\n\nFuller, Andrea, Peter R. Kamerman, Shane K. Maloney, Graham Mitchell, et Duncan Mitchell. 2003. « Variability in brain and arterial blood temperatures in free-ranging ostriches in their natural habitat ». Journal of Experimental Biology 206 (7): 1171‑81. https://doi.org/10.1242/jeb.00230.\n\n\nHasselquist, Dennis, James A. Marsh, Paul W. Sherman, et John C. Wingfield. 1999. « Is avian humoral immunocompetence suppressed by testosterone? » Behavioral Ecology and Sociobiology 45 (3): 167‑75. https://doi.org/10.1007/s002650050550.\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia, Hao Zhu, et Shannon Ellis. 2022. skimr: Compact and Flexible Summaries of Data. https://CRAN.R-project.org/package=skimr.\n\n\nWickham, Hadley. 2022. tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, et Dewey Dunnington. 2022. ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, et Davis Vaughan. 2023. dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Jim Hester, et Jennifer Bryan. 2022. readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr."
  },
  {
    "objectID": "03-TwoSampleTests.html",
    "href": "03-TwoSampleTests.html",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "",
    "text": "Comme pour chaque nouveau chapitre, je vous conseille de travailler dans un nouveau script que vous placerez dans votre répertoire de travail, et dans une nouvelle session de travail (Menu Session > Restart R). Inutile en revanche de créer un nouveau Rproject : vos pouvez tout à fait avoir plusieurs script dans le même répertoire de travail et pour un même Rproject. Comme toujours, consultez le livre en ligne du semestre 3 si vous ne savez plus comment faire.\nSi vous êtes dans une nouvelle session de travail (ou que vous avez quitté puis relancé RStudio), vous devrez penser à recharger en mémoire les packages utiles. Dans ce chapitre, vous aurez besoin d’utiliser :\n\nle tidyverse (Wickham 2022), qui comprend notamment le package readr (Wickham, Hester, et Bryan 2022), pour importer facilement des fichiers .csv au format tibble, le package dplyr (Wickham et al. 2023), pour manipuler des tableaux, et le package ggplot2 (Wickham et al. 2022) pour les représentations graphiques.\nreadxl (Wickham et Bryan 2022), pour importer facilement des fichiers Excel au format tibble.\nskimr (Waring et al. 2022), qui permet de calculer des résumés de données très informatifs.\ncar (Fox, Weisberg, et Price 2022), qui permet d’effectuer le test de comparaison des variances de Levene.\nle package palmerpenguins (Horst, Hill, et Gorman 2022) pour accéder au jeu de données penguins que nous utiliserons pour les exercices d’application.\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\nlibrary(car)\nlibrary(palmerpenguins)\n\nVous aurez également besoin des jeux de données suivants que vous pouvez dès maintenant télécharger dans votre répertoire de travail :\n\nHommesFemmes.xls\nHornedLizards.csv\n\nEnfin, je spécifie ici une fois pour toutes le thème que j’utiliserai pour tous les graphiques de ce chapitre. Libre à vous de choisir un thème différent ou de vous contenter du thème proposé par défaut :\n\ntheme_set(theme_bw())"
  },
  {
    "objectID": "03-TwoSampleTests.html#contexte",
    "href": "03-TwoSampleTests.html#contexte",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.2 Contexte",
    "text": "3.2 Contexte\nOn s’intéresse maintenant aux méthodes permettant de comparer la moyenne de deux groupes ou de deux traitements dans la cas d’échantillons indépendants. Au contraire de la situation décrite dans le Chapitre 2, dans ce type de design expérimentaux, les deux traitements sont appliqués à des échantillons indépendants issus de 2 groupes ou populations distincts. Chaque individu collecté, ou chaque unité expérimentale observée, ne fournit qu’une seule valeur, indépendante de toutes les autres.\nCette situation est extrêmement classique dans le domaine de l’écologie au sens large. Ainsi, par exemple, lorsque l’on souhaite comparer 2 sites, on réalise des prélèvements dans chacun des 2 sites. Chaque prélèvement ne fournit qu’une valeur pour l’un des 2 sites.\nIci, nous allons examiner une espèce intéressante, le lézard cornu Phrynosoma mcallii, qui possède une frange de piquants autour de la tête. Une équipe d’herpétologues (Young, Brodie, et Brodie 2004) a étudié la question suivante : des piquants plus longs autour de la tête protègent-ils le lézard cornu de son prédateur naturel, la pie grièche migratrice Lanius ludovicianus ? Ce prédateur a en effet une particularité : il accroche ses proies mortes à des barbelés ou des branches pour les consommer plus tard. Les chercheurs ont donc mesuré la longueur des cornes de 30 lézards retrouvés morts et accrochés dans des arbres par la pie grièche migratrice. Et en parallèle, ils ont mesuré les cornes de 154 individus vivants et en bonne santé choisis au hasard dans la population.\n\n\n\n\n\n\n\n(a) Lézard cornu vivant\n\n\n\n\n\n\n\n(b) Lézard cornu mort\n\n\n\n\n\n\n\n(c) Pie grièche\n\n\n\n\nFigure 3.1: Le lézard cornu et son prédateur\n\n\nNous disposons donc de 2 groupes indépendants : chaque lézard n’a fourni qu’une valeur de longueur de cornes, et chaque lézard n’appartient qu’à un groupe, vivant ou mort. Nous sommes donc dans la situation typique de la comparaison de moyennes de 2 populations avec des données indépendantes. Avant de procéder aux tests, et comme toujours, nous allons commencer par importer et mettre en forme les données (si besoin), puis nous devrons explorer les données, à l’aide d’une part d’indices statistiques de position, de dispersion et d’incertitude et d’autre part de représentations graphiques pertinentes. Enfin, nous vérifierons les conditions d’application du test paramétrique de Student avant de réaliser ce test si les conditions d’application sont remplies, ou son équivalent non paramétrique si elles ne le sont pas."
  },
  {
    "objectID": "03-TwoSampleTests.html#importation-et-mise-en-forme-des-données",
    "href": "03-TwoSampleTests.html#importation-et-mise-en-forme-des-données",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.3 Importation et mise en forme des données",
    "text": "3.3 Importation et mise en forme des données\nLes données de cette étude sont stockées dans le fichier HornedLizards.csv. Importez ces données dans un objet nommé Lizard_raw et examinez le tableau obtenu.\n\n\n\n\nLizard_raw\n\n# A tibble: 185 × 2\n   squamosalHornLength Survival\n                 <dbl> <chr>   \n 1                25.2 living  \n 2                26.9 living  \n 3                26.6 living  \n 4                25.6 living  \n 5                25.7 living  \n 6                25.9 living  \n 7                27.3 living  \n 8                25.1 living  \n 9                30.3 living  \n10                25.6 living  \n# … with 175 more rows\n\n\n\nView(Lizard_raw)\n\nOn constate ici 3 choses :\n\nla variable Survival devrait être un facteur.\nle nom de la première colonne (squamosalHornLength), qui contient les mesures des longueurs de cornes, est bien trop long.\npour l’un des lézards vivants, la mesure de longueur des cornes est manquante. Nous allons donc retirer cet individu pour éviter les messages d’erreurs par la suite.\n\nNous pouvons facilement réaliser les 3 modifications d’un coup, et stokcer le résultat dans un nouveau tableau Lizard :\n\nLizard <- Lizard_raw %>%\n  mutate(Survival = factor(Survival)) %>%\n  rename(Horn_len = squamosalHornLength) %>%\n  filter(!is.na(Horn_len))\n\nLizard\n\n# A tibble: 184 × 2\n   Horn_len Survival\n      <dbl> <fct>   \n 1     25.2 living  \n 2     26.9 living  \n 3     26.6 living  \n 4     25.6 living  \n 5     25.7 living  \n 6     25.9 living  \n 7     27.3 living  \n 8     25.1 living  \n 9     30.3 living  \n10     25.6 living  \n# … with 174 more rows\n\n\nCe tableau est bien un tableau rangé, au format long : chaque colonne contient une unique variable (Horn_len : longueur des cornes, Survival : groupe de l’individu mesuré, vivant ou mort), et chaque ligne contient les informations d’un unique individu.\nIci, il ne serait pas correct de présenter les données au format large. il nous faudrait en effet une colonne pour chaque groupe, lézard vivant et lézard mort, mais puisque les données de ces 2 groupes sont indépendantes, nous aurions 2 problèmes :\n\nsi le nombre d’individu n’est pas le même dans les 2 groupes, les deux colonnes n’auraient pas la même longueur. C’est impossible dans RStudio, et le logiciel remplierait donc la colonne la plus courte de NAs pour y remédier.\nles lignes de cet hypothétique tableau large ne correspondraient plus à des observations uniques. Chaque ligne renseignerait en effet sur les mesures de 2 individus distincts, un vivant et un mort.\n\nLorsque vous disposez de données appartenant à des groupes indépendants, il faut donc toujours travailler avec un tableau rangé, nécessairement au format long."
  },
  {
    "objectID": "03-TwoSampleTests.html#exploration-statistique-des-données",
    "href": "03-TwoSampleTests.html#exploration-statistique-des-données",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.4 Exploration statistique des données",
    "text": "3.4 Exploration statistique des données\nComme dans le Chapitre 2 sur les données appariées, les statistiques descriptives doivent ici être réalisées pour chaque groupe d’individus, et non tous groupes confondus. Ici, le plus simple est d’utiliser la fonction skim() sur les données groupées par niveau du facteur Survival (avec la fonction group_by()) :\n\nLizard %>%\n  group_by(Survival) %>%\n  skim()\n\n── Data Summary ────────────────────────\n                           Values    \nName                       Piped data\nNumber of rows             184       \nNumber of columns          2         \n_______________________              \nColumn type frequency:               \n  numeric                  1         \n________________________             \nGroup variables            Survival  \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable Survival n_missing complete_rate mean   sd   p0  p25  p50  p75\n1 Horn_len      killed           0             1 22.0 2.71 15.2 21.1 22.2 23.8\n2 Horn_len      living           0             1 24.3 2.63 13.1 23   24.6 26  \n  p100 hist \n1 26.7 ▂▂▇▇▃\n2 30.3 ▁▁▅▇▂\n\n\nOn constate ici qu’il n’y a pas de données manquantes (n_missing = 0 dans les deux groupes). La moyenne des longueurs de cornes est plus grande chez les lézards vivants (\\(\\bar{x}_{living} = 24.3\\) mm) que chez les lézards retrouvés morts (\\(\\bar{x}_{killed} = 22.0\\)), de plus de 2 millimètres. On retrouve cette tendance pour les médianes, ainsi que pour les premiers et troisièmes quartiles. En revanche, les écarts-types des 2 groupes sont proches, et celui du groupe living est très légèrement plus faible (0.08 mm) que celui du groupe killed.\nEnfin, les histogrammes très simplifiés fournis laissent penser que les données de chaque groupe ne s’écartent pas trop fortement d’une courbe en cloche.\nOutre ces informations sur les ordres de grandeurs observés dans chaque groupe de lézards pour les indices de position (moyennes, médianes et quartiles), et de dispersion (écarts-types et histogrammes), la fonction skim() ne fournit pas les effectifs observés dans chaque groupe. On sait qu’il y a en tout 184 individus, mais on ne sait pas comment ils se répartissent dans les 2 groupes de lézards. Pour le déterminer, on peut utiliser une fonction décrite plus tôt, la fonction count() :\n\nLizard %>%\n  count(Survival)\n\n# A tibble: 2 × 2\n  Survival     n\n  <fct>    <int>\n1 killed      30\n2 living     154\n\n\nOn peut obtenir la même information avec la fonction summarise() et son argument .by, et la fonction n() :\n\nLizard %>% \n  summarize(Effectif = n(), .by = Survival)\n\n# A tibble: 2 × 2\n  Survival Effectif\n  <fct>       <int>\n1 living        154\n2 killed         30\n\n\nOn constate ici que les tailles d’échantillons sont très différentes. C’est normal compte tenu de la difficulté de repérer des individus morts dans la nature, et ce n’est pas gênant pour nos analyses puisque la taille des deux échantillons reste élevée.\nEnfin, on peut calculer des indices d’incertitude. C’est d’autant plus important qu’il est difficile de se faire une idée de la signification d’une différence moyenne de longueur de cornes de 2 millimètres. Est-ce important ou négligeable ? Est-ce que ces estimations sont précises ou non ? Comme dans les chapitres précédents, nous allons calculer les intervalles de confiance à 95% de la moyenne de chaque groupe :\n\nLizard %>% \n  reframe(mean_cl_normal(Horn_len), .by = Survival)\n\n# A tibble: 2 × 4\n  Survival     y  ymin  ymax\n  <fct>    <dbl> <dbl> <dbl>\n1 living    24.3  23.9  24.7\n2 killed    22.0  21.0  23.0\n\n\nLa colonne y nous présente à nouveau la moyenne de chaque groupe, la colonne ymin contient les bornes inférieures des intervalles de confiance à 95%, et la colonne ymax les bornes supérieures. On constate ici que les intervalles de confiance à 95% des longueurs de cornes des 2 groupes ne se chevauchent pas du tout : la borne inférieure du groupe living est au-dessus de la borne supérieure du groupe killed. Autrement dit, dans la population générale, la longueur moyenne des cornes chez les lézards vivants a de bonnes chances de se trouver dans l’intervalle [23.9 ; 24.7] millimètres, alors qu’elle a de bonnes chances de se trouver dans l’intervalle [21 ; 23] millimètres chez les lézards morts. La différence de moyennes entre ces 2 groupes vaut donc probablement entre 0.9 millimètres au moins, et 3.7 millimètres au plus. Le test statistique que nous ferons ensuite devrait donc confirmer que ces différences sont significatives, autrement dit, qu’elles ne sont pas liées au simple hasard de l’échantillonnage."
  },
  {
    "objectID": "03-TwoSampleTests.html#exploration-graphique-des-données",
    "href": "03-TwoSampleTests.html#exploration-graphique-des-données",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.5 Exploration graphique des données",
    "text": "3.5 Exploration graphique des données\nComme toujours, nous pouvons réaliser plusieurs types de graphiques pour en apprendre plus sur la distribution des données dans les deux groupes. Si nous faisons un nuage de points, il est évidemment impossible ici de relier les points deux à deux. Non seulement cela n’aurait aucun sens puisque les échantillons sont indépendants, mais en outre, nous ne disposons pas du même nombre d’individus dans les 2 échantillons. Nous nous contenterons donc da faire un stripchart.\n\n3.5.1 Avec un stripchart\n\nLizard %>%\n  ggplot(aes(x = Survival, y = Horn_len)) +\n  geom_jitter(height = 0, width = 0.2, alpha = 0.5) +\n  labs(x = \"Groupe de lézards\",\n       y = \"Longueur des cornes (mm)\",\n       title = \"Visualisation des longueurs\\nde cornes du lézard cornu\")\n\n\n\n\n\n\n\n\nCe premier graphique permet de visualiser très clairement les différences de tailles d’échantillons entre les deux groupes. Il permet également de voir que l’étendue des longueurs de cornes est plus importante dans le groupe des individus vivants que dans celui des individus morts. En outre, le nuage de points des vivants semble être plus haut sur l’axe des y que celui des morts, confirmant les statistiques descriptives qui montraient des tailles de cornes en moyenne plus importantes dans le groupe des vivants.\n\n\n3.5.2 Avec des histogrammes facettés\n\nLizard %>%\n  ggplot(aes(x = Horn_len)) +\n  geom_histogram(bins = 15, fill = \"firebrick2\", color = \"grey20\", alpha = 0.5)+\n  geom_rug() +\n  facet_wrap(~Survival, ncol = 1, scales = \"free_y\") +\n  labs(x = \"Longueur des cornes (mm)\",\n       y = \"Fréquence\",\n       title = \"Distribution de la longueur des cornes dans 2 groupes de lézards cornus\",\n       subtitle = \"nb morts : 30, nb vivants : 154\")\n\n\n\n\nNotez ici l’utilisation de l’argument scales = \"free_y\" dans la fonction facet_wrap(). Cet argument permet de ne pas imposer la même échelle pour l’axe des ordonnées des 2 graphiques. Ce choix est ici pertinent puisque les effectifs des 2 groupes sont très différents. Faîtes un essai sans cet argument pour voir la différence. Il est en revanche important de conserver le même axe des x afin de faciliter la comparaison des 2 groupes.\nCette visualisation nous montre que les données doivent suivre à peu près une distribution Normale dans les 2 groupes, et que globalement la longueur des cornes semble légèrement plus élevée dans le groupe des vivants (avec un mode autour de 25-26 mm) que dans le groupes des morts (avec un mode autour de 23-24 mm). L’étendue des données semble légèrement plus grande dans le groupe des vivants, mais cela n’est peut-être dû qu’à la différence marquée des tailles d’échantillons.\n\n\n3.5.3 Avec des diagrammes de densité facettés\n\nLizard %>%\n  ggplot(aes(x = Horn_len)) +\n  geom_density(fill = \"firebrick2\", alpha = 0.5) +\n  geom_rug() +\n  facet_wrap(~Survival, ncol = 1, scales = \"free_y\") +\n  labs(x = \"Longueur des cornes (mm)\",\n       y = \"Densité\",\n       title = \"Distribution de la longueur des cornes dans 2 groupes de lézards cornus\",\n       subtitle = \"nb morts : 30, nb vivants : 154\")\n\n\n\n\nLes diagrammes de densité ressemblent ici beaucoup aux histogrammes. C’est normal car la taille des échantillons est importante (30 et 154 pour les groupes killed et living respectivement). C’était moins vrais dans les chapitres précédents car les tailles d’échantillons étaient plus faibles, et la forme des histogrammes dépendait alors beaucoup du nombre de classes que l’on choisissait de représenter. Avec des échantillons de grande taille (n ≥ 30), c’est moins problématique.\nEn général, il est donc inutile de faire à la fois les histogrammes et les diagrammes de densité. Choisissez l’un ou l’autre selon vos préférences et la situation.\n\n\n3.5.4 Avec des boites à moustaches\n\nLizard %>%\n  ggplot(aes(x = Survival, y = Horn_len)) +\n  geom_boxplot(notch = TRUE) +\n  labs(x = \"Groupe de lézards\",\n       y = \"Longueur des cornes (mm)\",\n       title = \"Comparaison de 2 groupes\\nde lézards cornus\",\n       subtitle = \"nb morts : 30, nb vivants : 154\")\n\n\n\n\n\n\n\n\nNous visualisons ici encore plus clairement que sur les histogrammes le fait que les longueurs de cornes des individus vivants sont légèrement plus longues que celles des individus morts. D’ailleurs, puisque les intervalles de confiance à 95% des médianes des 2 groupes (les encoches) ne se chevauchent pas, un test de comparaison des moyennes devrait logiquement conclure à une différence significative en faveur des individus vivants. On peut également noter que la largeur de l’encoche pour les individus morts est plus importante que celle des vivants. Cela traduit une incertitude plus grande autour de la médiane estimée dans le groupe des individus morts. C’est tout à fait logique compte tenu des effectifs plus faibles dans ce groupe.\nEnfin, il est tout à fait possible de représenter sur le même graphique les boîtes à moustaches et les données brutes sous forme de stripchart. On a ainsi à la fois (i) une visualisation simplifiée de la position et de la dispersion des données avec les boîtes à moustache, et (ii) accès à l’ensemble des données brutes, ce qui permet parfois de voir des structures invisibles sur les boîtes à moustaches (regroupement de points par exemples). Afin de ne pas dupliquer les valeurs les plus extrêmes du jeu de données, nous indiquerons à geom_boxplot() de ne pas afficher les outliers sur le graphique : tous les points seront en effet déjà affichés par geom_jitter() :\n\nLizard %>%\n  ggplot(aes(x = Survival, y = Horn_len, fill = Survival)) +\n  geom_boxplot(notch = TRUE, color = \"grey20\", alpha = 0.2,\n               outlier.color = NA, show.legend = FALSE) +\n  geom_jitter(height = 0, width = 0.2, alpha = 0.4, shape = 21,\n              show.legend = FALSE, size = 0.8) +\n  labs(x = \"Groupe de lézards\",\n       y = \"Longueur des cornes (mm)\",\n       title = \"Comparaison de 2 groupes\\nde lézards cornus\",\n       subtitle = \"nb morts : 30, nb vivants : 154\") +\n  scale_fill_manual(values = c(\"purple3\", \"royalblue2\"))"
  },
  {
    "objectID": "03-TwoSampleTests.html#le-test-paramétrique",
    "href": "03-TwoSampleTests.html#le-test-paramétrique",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.6 Le test paramétrique",
    "text": "3.6 Le test paramétrique\nLe test paramétrique le plus puissant que nous puissions faire pour comparer la moyenne de 2 populations est le test de Student. Ce test étant paramétrique, nous devons nous assurer que ses conditions d’application sont vérifiées avant de pouvoir le réaliser.\n\n3.6.1 Conditions d’application\nLes conditions d’application de ce test sont au nombre de 3 :\n\nChacun des deux échantillons est issu d’un échantillonnage aléatoire de la population générale. Comme toujours, en l’absence d’indication contraire, on considère que cette condition est toujours vérifiée.\nLa variable numérique étudiée est distribuée normalement dans les deux populations. Il nous faudra donc faire deux tests de Shapiro-Wilk, un pour chaque échantillon.\nLa variance de la variable numérique étudiée est la même dans les deux populations. C’est ce que l’on appelle l’homoscédasticité.\n\nEn réalité, le test du \\(t\\) de Student sur deux échantillons indépendants est assez robuste face au non respect de cette troisième condition d’application. Cela signifie que si cette troisième condition d’application n’est pas strictement vérifiée, les résultats du tests peuvent malgré tout rester valides. Lorsque les 2 échantillons comparés ont des tailles supérieures ou égales à 30, ce test fonctionne bien même si l’écart-type d’un groupe est jusqu’à 3 fois supérieur ou inférieur à l’écart-type du second groupe, à condition que la taille des 2 échantillons soit proche (ce qui n’est pas le cas ici !). En revanche, si les écart-types diffèrent de plus d’un facteur 3, ou si les tailles d’échantillons sont très différentes, le test du \\(t\\) de Student ne devrait pas être utilisé. De même, si la taille des échantillons est inférieure à 30 et que les variances ne sont pas homogènes, ce test ne devrait pas être réalisé. En conclusion, les résultats du test du \\(t\\) de Student à deux échantillons indépendants peuvent rester valides si la troisième condition d’homoscédasticité n’est pas respectée, mais dans certains cas seulement.\nLe test du \\(t\\) de Student sur deux échantillons indépendants est également assez robuste face à des écarts mineurs à la distribution Normale, tant que la forme des deux distributions comparées reste similaire et unimodale. En outre, la robustesse de ce test augmente avec la taille des échantillons.\n\n\n\n\n\n\nRobustesse\n\n\n\nLa robustesse d’un tests statistique est sa capacité à rester valide même lorsque certaines de ses conditions d’application ne sont pas parfaitement respectées. Plus un test est robuste, plus il est capable de supporter des “entorses” importantes à ses conditions d’application.}\n\n\nAu final, avec un peu d’habitude, même lorsque les conditions d’application ne sont pas toutes vérifiées, on peut parfois passer outre. Mais à ce stade, on préfère s’en tenir à des choses plus simples et claires.\n\n\n\n\n\n\nLa procédure à suivre\n\n\n\n\nFaites un test de Normalité pour chacune des deux séries de données. Si elles suivent la loi Normale toutes les deux, passez au point 2. Sinon, rendez-vous au point 4.\nFaites un test d’homoscédasticité (homogénéité des variances). Si les variances sont homogènes, passez au point 3. Sinon,rendez-vous au point 5.\nFaite un test de comparaison des moyennes paramétrique : le test de Student. Examinez la \\(p-\\)value pour conclure, et rendez-vous au point 6.\nFaite un test de comparaison des moyennes non paramétrique : le test de Wilcoxon de la somme des rangs. Examinez la \\(p-\\)value pour conclure, et rendez-vous au point 6.\nFaite un test de comparaison des moyennes non paramétrique : le test \\(t\\) de Welch. Examinez la \\(p-\\)value pour conclure, et rendez-vous au point 6.\nSi la \\(p-\\)value est supérieure à \\(\\alpha\\), on ne peut pas rejeter l’hypothèse nulle et on conclut alors à une absence de différence significative entre les 2 populations. À l’inverse, si la \\(p-\\)value est inférieure ou égale à \\(\\alpha\\), on rejette l’hypothèse nulle et on valide l’hypothèse alternative. Les deux populations ont des moyennes significativement différentes, et pour savoir laquelle est supérieure ou inférieure à l’autre, on revient aux estimations des moyennes et des intervalles de confiances à 95%, calculés dans la partie consacrée aux statistiques descriptives.\n\n\n\n\n3.6.1.1 Normalité des données\nNous commençons donc par tester la Normalité des 2 populations dont sont issus les échantillons, c’est le point 1 de la procédure détaillée ci-dessus. Pour les individus morts, les hypothèses sont les suivantes :\n\nH\\(_0\\) : la taille des cornes suit une distribution Normale dans la population des lézards cornus morts.\nH\\(_1\\) : la taille des cornes ne suit pas une distribution Normale dans la population des lézards cornus morts.\n\n\nLizard %>%\n  filter(Survival == \"killed\") %>%\n  pull(Horn_len) %>%\n  shapiro.test()\n\n\n    Shapiro-Wilk normality test\n\ndata:  .\nW = 0.93452, p-value = 0.06482\n\n\n\nLa \\(p\\)-value est supérieure à \\(\\alpha = 0.05\\), donc on ne peut pas rejeter l’hypothèse nulle de normalité pour la taille des cornes de la population des lézards cornus morts (test de Shapiro-Wilk, \\(W = 0.93\\), \\(p = 0.065\\)).\n\nPour les individus vivants :\n\nH\\(_0\\) : la taille des cornes suit une distribution Normale dans la population des lézards cornus vivants.\nH\\(_1\\) : la taille des cornes ne suit pas une distribution Normale dans la population des lézards cornus vivants.\n\n\nLizard %>%\n  filter(Survival == \"living\") %>%\n  pull(Horn_len) %>%\n  shapiro.test()\n\n\n    Shapiro-Wilk normality test\n\ndata:  .\nW = 0.96055, p-value = 0.0002234\n\n\n\nLa \\(p\\)-value est inférieure à \\(\\alpha = 0.05\\), donc on rejette l’hypothèse nulle de normalité pour la taille des cornes de la population des lézards cornus vivants (test de Shapiro-Wilk, \\(W = 0.96\\), \\(p < 0.001\\)).\n\nL’une des 2 séries de données ne suit pas la loi Normale, nous sommes donc censés passer directement au point 4 de la procédure.\nToutefois, si l’on examine les histogrammes (Section 3.5.2) ou les diagrammes de densité (Section 3.5.3) des 2 échantillons, on constate que la forme des distributions des 2 séries de données est très proche. Pour les 2 échantillons, la distribution est en effet uni-modale, avec une asymétrie gauche assez marquée (une longue queue de distribution du côté gauche). La forme des distributions étant similaire (on parle bien de la forme des histogrammes et non de la position du pic), et les histogrammes étant proches de la forme typique d’une courbe en cloche, le test de Student devrait rester valide car il est robuste dans cette situation. Ici, pour l’exemple, on va donc passer au point 2 de la procédure. Notez toutefois que passer directement au point 4 de la procédure serait tout à fait correct : on ne pourrait rien vous reprocher si vous passez directement au test non paramétrique de comparaison des moyennes lorsque vous constatez que l’une des 2 séries de données ne suit pas la distribution Normale.\n\n\n3.6.1.2 Homogénéité des variances\nLe test le plus simple pour comparer la variance de 2 populations est le test \\(F\\) :\n\nH\\(_0\\) : la variance des 2 populations est égale, leur ratio vaut 1 \\(\\left(\\frac{\\sigma^2_{killed}}{\\sigma^2_{living}} = 1\\right)\\).\nH\\(_1\\) : la variance des 2 populations est différente, leur ratio ne vaut pas 1 \\(\\left(\\frac{\\sigma^2_{killed}}{\\sigma^2_{living}} \\neq 1\\right)\\).\n\n\nvar.test(Horn_len ~ Survival, data = Lizard)\n\n\n    F test to compare two variances\n\ndata:  Horn_len by Survival\nF = 1.0607, num df = 29, denom df = 153, p-value = 0.7859\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.6339331 1.9831398\nsample estimates:\nratio of variances \n          1.060711 \n\n\n\nIci, le ratio des variances (la variance des individus morts divisée par la variance des individus vivants) est très proche de 1 (\\(F = 1.06\\), IC 95% : [0.63 ; 1.98]). Le test \\(F\\) nous montre qu’il est impossible de rejeter H\\(_0\\) : au seuil \\(\\alpha = 0.05\\), le ratio des variances n’est pas significativement différent de 1 (ddl = 29 et 153, \\(p = 0.79\\)), les variances sont homogènes.\n\nLe test de Bartlett est un autre test qui permet de comparer la variance de plusieurs populations (2 ou plus). Lorsque le nombre de populations est égal à 2 (comme ici), ce test est absolument équivalent au test \\(F\\) ci-dessus.\n\nH\\(_0\\) : toutes les populations ont même variance (\\(\\sigma^2_A = \\sigma^2_B = \\sigma^2_C = \\cdots = \\sigma^2_N\\)).\nH\\(_1\\) : au moins une population a une variance différente des autres.\n\n\nbartlett.test(Horn_len ~ Survival, data = Lizard)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  Horn_len by Survival\nBartlett's K-squared = 0.042411, df = 1, p-value = 0.8368\n\n\nEnfin, le test de Levene (attention, le package car doit être chargé) devrait être préféré la plupart du temps. Comme le test de Bartlett, il permet de comparer la variance de plusieurs populations, mais il est plus robuste vis à vis de la non-normalité des données.\n\nH\\(_0\\) : toutes les populations ont même variance (\\(\\sigma^2_A = \\sigma^2_B = \\sigma^2_C = \\cdots = \\sigma^2_N\\)).\nH\\(_1\\) : au moins une population a une variance différente des autres.\n\n\n# Le test de Levene fait partie du package car. Il doit être chargé en mémoire\n# library(car)\nleveneTest(Horn_len ~ Survival, data = Lizard)\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value Pr(>F)\ngroup   1  0.0035  0.953\n      182               \n\n\nIci encore, les conclusions sont les mêmes :\n\nIl est impossible de rejeter l’hypothèse nulle d’homogénéité des variances au seuil \\(\\alpha = 0.05\\) (test de Levene, \\(F\\) = 0.004, ddl = 1, \\(p = 0.953\\)).\n\nÀ vous de choisir lequel de ces 3 tests vous souhaitez réaliser : il est évident qu’on ne fait jamais les 3 !\nIci, puisque l’homoscédasticité est vérifiée, on passe au point 3 de la procédure.\n\n\n\n3.6.2 Réalisation du test et interprétation\nPuisque la taille des cornes du lézard cornu suit approximativement la même distribution “presque Normale” dans les 2 populations (lézards morts et vivants) et que ces 2 populations ont des variances homogènes, on peut réaliser le test du \\(t\\) de Student sur deux échantillons indépendants.\n\nH\\(_0\\) : la moyenne des 2 populations est égale, leur différence vaut 0 (\\(\\mu_{killed}-\\mu_{living} = 0\\)).\nH\\(_1\\) : la moyenne des 2 populations est différente, leur différence ne vaut pas 0 (\\(\\mu_{killed}-\\mu_{living} \\neq 0\\)).\n\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE)\n\n\n    Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.3494, df = 182, p-value = 2.27e-05\nalternative hypothesis: true difference in means between group killed and group living is not equal to 0\n95 percent confidence interval:\n -3.335402 -1.253602\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nNotez bien la syntaxe :\n\nNous utilisons ici la syntaxe du type “formule” faisant appel au symbole “~” (Longueur des cornes en fonction de la Survie) et à l’argument “data =”.\nL’argument “paired = TRUE” a disparu puisque nous avons ici deux échantillons indépendants\nL’argument “var.equal = TRUE” doit obligatoirement être spécifié : nous nous sommes assuré que l’homogénéité des variances était vérifiée. Il faut donc l’indiquer afin que le test de Student classique soit réalisé. Si on omet de le spécifier, c’est un autre test qui est réalisé (voir plus bas).\n\n\nAu seuil \\(\\alpha\\) de 5%, on rejette l’hypothèse nulle d’égalité des moyennes de la longueur des cornes entre lézards vivants et morts (test \\(t\\) de Student sur deux échantillons indépendant, \\(t = -4.35\\), ddl = 182, \\(p < 0.001\\)). Les lézards morts ont en moyenne des cornes plus courtes (\\(\\hat{\\mu}_{killed} = 21.99\\) millimètres) que les lézards vivants (\\(\\hat{\\mu}_{living} = 24.28\\) millimètres). La gamme des valeurs les plus probables pour la différence de moyenne entre les deux populations est fournie par l’intervalle de confiance à 95% de la différence de moyennes : [-3.34 ; -1.25].\n\nCe test confirme donc bien l’impression des chercheurs : les lézards principalement pris pour cibles par les pies grièches migratrices ont des cornes en moyenne plus courtes (probablement entre 1.25 et 3.34 millimètres de moins) que les lézards de la population générale. Avoir des cornes plus longues semble donc protéger les lézards de la prédation, du moins dans une certaine mesure.\nNotez bien que l’intervalle de confiance à 95% qui est fourni avec les résultats du test est l’intervalle de confiance à 95% de la différence de moyenne entre les 2 groupes. Cet intervalle nous donne donc une idée de la magnitude de l’effet, de son ampleur. En effet, dire que les lézards morts ont des cornes en moyenne plus courtes est intéressant, mais cela n’aura pas la même portée si leurs cornes sont plus courtes de 0.02 millimètres ou si elles sont plus courtes de 5 millimètres. Un test statistique permet de rejeter ou non une hypothèse nulle, mais c’est bien l’estimation (la moyenne de chaque groupe et l’intervalle de confiance à 95% de la différence) qui nous dit ce qu’on doit penser des résultats, et de leur pertinence (écologique, biologique, physiologie, comportementale, etc.)."
  },
  {
    "objectID": "03-TwoSampleTests.html#lalternative-non-paramétrique",
    "href": "03-TwoSampleTests.html#lalternative-non-paramétrique",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.7 L’alternative non paramétrique",
    "text": "3.7 L’alternative non paramétrique\nSi les conditions d’application du test de Student ne sont pas vérifiées (c’est bien le cas ici puisque la longueur des cornes ne suit pas une distribution Normale dans la population des lézards vivants), notre procédure nous conduit à l’étape 4 : nous devons utiliser un équivalent non paramétrique au test de Student. C’est le cas du test de Wilcoxon sur la somme des rangs (également appelé test de Mann-Whitney). Comme pour tous les tests de Wilcoxon, la comparaison porte alors non plus sur les moyennes mais sur les médianes.\n\nH\\(_0\\) : la médiane des 2 populations est égale, leur différence vaut 0 (\\(med_{killed}-med_{living} = 0\\)).\nH\\(_1\\) : la médiane des 2 populations est différente, leur différence ne vaut pas 0 (\\(med_{killed}-med_{living}\\neq 0\\)).\n\n\nwilcox.test(Horn_len ~ Survival, data = Lizard, conf.int = TRUE)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  Horn_len by Survival\nW = 1181.5, p-value = 2.366e-05\nalternative hypothesis: true location shift is not equal to 0\n95 percent confidence interval:\n -3.200076 -1.300067\nsample estimates:\ndifference in location \n             -2.200031 \n\n\nL’argument var.equal = TRUE n’existe pas pour ce test, puisque c’est justement un test non paramétrique qui ne requiert pas l’homogénéité des variances. En revanche, comme pour tous les autres tests de Wilcoxon que nous avons réalisés jusqu’ici, l’argument conf.int = TRUE permet d’afficher les estimateurs pertinents, ici, la différence de médiane entre les 2 populations et l’intervalle de confiance à 95% de cette différence de médiane.\nLa conclusion est ici la même que pour le test de Student : puisque la \\(p\\)-value est très inférieure à \\(\\alpha\\), on rejette l’hypothèse nulle : les médianes sont bel et bien différentes."
  },
  {
    "objectID": "03-TwoSampleTests.html#lautre-alternative-non-paramétrique",
    "href": "03-TwoSampleTests.html#lautre-alternative-non-paramétrique",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.8 L’autre alternative non paramétrique",
    "text": "3.8 L’autre alternative non paramétrique\nEnfin, dans le cas où la variable étudiée suit la loi Normale dans les deux populations mais qu’elle n’a pas la même variance dans les deux populations (donc si vous arrivez au point 5 de la procédure décrite plus haut), il est toujours possible de réaliser un test de Wilcoxon, il est préférable de réaliser un test de Student modifié : le test approché du \\(t\\) de Welch. Ce test est moins puissant que le test de Student classique, mais il reste plus puissant que le test de Wilcoxon, et surtout, il permet de comparer les moyennes et non les médianes.\n\nH\\(_0\\) : la moyenne des 2 populations est égale, leur différence vaut 0 (\\(\\mu_{killed}-\\mu_{living} = 0\\)).\nH\\(_1\\) : la moyenne des 2 populations est différente, leur différence ne vaut pas 0 (\\(\\mu_{killed}-\\mu_{living} \\neq 0\\)).\n\n\nt.test(Horn_len ~ Survival, data = Lizard)\n\n\n    Welch Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.2634, df = 40.372, p-value = 0.0001178\nalternative hypothesis: true difference in means between group killed and group living is not equal to 0\n95 percent confidence interval:\n -3.381912 -1.207092\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nLa seule différence par rapport à la syntaxe du test \\(t\\) de Student paramétrique est la suppression de l’argument var.equal = TRUE. Attention donc, à bien utiliser la syntaxe correcte. Le test du \\(t\\) de Welch ne devrait être réalisé que lorsque la Normalité est vérifiée pour les 2 populations, mais pas l’homoscédasticité. Par rapport au test de Student classique, on constate que le nombre de degrés de libertés est très différent, et donc la \\(p\\)-value également. Les bornes de l’intervalle de confiance à 95% de la différence de moyenne sont différentes également puisque leur calcul a été fait en supposant que les 2 populations n’avaient pas même variance."
  },
  {
    "objectID": "03-TwoSampleTests.html#exercices-dapplication",
    "href": "03-TwoSampleTests.html#exercices-dapplication",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.9 Exercices d’application",
    "text": "3.9 Exercices d’application\n\n3.9.1 La taille des hommes et des femmes\nOn s’intéresse à la différence de taille supposée entre hommes et femmes. Le fichier HommesFemmes.xls contient les tailles en centimètres de 38 hommes et 43 femmes choisis au hasard parmi les étudiants de première année à La Rochelle Université. Importez, mettez en forme et analysez ces données. Vous prendrez soin de retirer les éventuelles valeurs manquantes, vous prendrez le temps d’examiner les données à l’aide de statistiques descriptives et de représentations graphiques adaptées, puis vous tenterez de répondre à la question suivante : les hommes et les femmes inscrits en première année à La Rochelle Université ont-il la même taille ? Si non, caractérisez cette différence de taille.\n\n\n3.9.2 La longueur du bec des manchots Adélie\nDans le jeu de données penguins du package palmerpenguins, récupérez les lignes du tableau qui correspondent aux manchots Adélie, et comparez la longueur des becs entre mâles et femelles. Comme toujours, avant de vous lancer dans les tests, vous prendrez soin de retirer les éventuelles valeurs manquantes, et vous prendrez le temps d’examiner les données à l’aide de statistiques descriptives et de représentations graphiques adaptées. Faites l’effort d’expliquer votre démarche, de préciser les hypothèses nulles et alternatives de chaque test, et de rédiger l’interprétation que vous faites de chaque résultat."
  },
  {
    "objectID": "03-TwoSampleTests.html#tests-bilatéraux-et-unilatéraux",
    "href": "03-TwoSampleTests.html#tests-bilatéraux-et-unilatéraux",
    "title": "3  Comparaison de moyennes : deux échantillons indépendants",
    "section": "3.10 Tests bilatéraux et unilatéraux",
    "text": "3.10 Tests bilatéraux et unilatéraux\n\n3.10.1 Principe\nJusqu’à maintenant, tous les tests que nous avons réalisés sont des tests bilatéraux. Pour chaque test, l’hypothèse nulle est imposée. En revanche, pour certains tests, l’hypothèse alternative est à choisir (et à spécifier) par l’utilisateur parmi 3 possibilités :\n\nUne hypothèse bilatérale. C’est celle qui est utilisée par défaut si l’utilisateur ne précise rien.\nDeux hypothèses unilatérales possibles, qui doivent être spécifiées explicitement par l’utilisateur.\n\nLes tests unilatéraux peuvent concerner tous les tests pour lesquels les hypothèses sont de la forme suivante :\n\nH\\(_0\\) : la valeur d’un paramètre de la population est égale à \\(k\\) (\\(k\\) peut être une valeur fixe, arbitraire, choisie par l’utilisateur, ou la valeur d’un paramètre d’une autre populations).\nH\\(_1\\) : la valeur d’un paramètre de la population n’est pas égale à \\(k\\).\n\nEn réalité, si nous remplaçons l’hypothèse H\\(_1\\) par :\n\nH\\(_1\\) : la valeur d’un paramètre de la population est supérieure à \\(k\\).\n\nou par :\n\nH\\(_1\\) : la valeur d’un paramètre de la population est inférieure à \\(k\\).\n\nnous réalisons un test unilatéral.\nDans RStudio, la syntaxe permettant de spécifier l’hypothèse alternative que nous souhaitons utiliser est toujours la même. Il faut préciser, au moment de faire le test l’argument suivant :\n\nalternative = \"two.sided\" : pour faire un test bilatéral. Si on ne le fait pas explicitement, c’est de toutes façons cette valeur qui est utilisée par défaut.\nalternative = \"greater\" : pour choisir l’hypothèse unilatérale “>”.\nalternative = \"less\" : pour choisir l’hypothèse unilatérale “<”.\n\nAttention : le choix d’utiliser “greater” ou “less” dépend donc de l’ordre dans lequel les échantillons sont spécifiés. Cette syntaxe est valable pour tous les tests de Student vus jusqu’ici (un échantillon, deux échantillons appariés, deux échantillons indépendants) et pour leurs alternatives non paramétriques (test de Wilcoxon des rangs signés, test de Wilcoxon de la somme des rangs, test du \\(t\\) de Welch).\n\n\n\n\n\n\nAttention\n\n\n\nL’utilisation de tests unilatéraux doit être réservée exclusivement aux situations pour lesquelles le choix de l’hypothèse unilatérale est possible à justifier par un mécanisme quelconque (biologique, physiologique, comportemental, écologique, génétique, évolutif, biochimique, etc.). Observer que l’un des échantillons a une moyenne plus grande ou plus faible qu’un autre lors de la phase des statistiques descriptives des données n’est pas du tout une raison suffisante. Il faut pouvoir justifier le choix de l’hypothèse alternative par une explication valable. D’ailleurs, si on veut être rigoureux, il faudrait toujours formuler les hypothèses que l’on souhaite tester avant de mettre en place le protocole expérimental et avant d’acquérir les données.\n\n\nPour s’embêter avec les tests unilatéraux puisqu’il est si rare qu’on ait le droit de les faire ? Tout simplement parce que toutes choses étant égales par ailleurs, un test unilatéral est toujours plus puissant (parfois, beaucoup plus puissant) qu’un test bilatéral. Or, la puissance est quelque chose qu’on cherche à maximiser (voir sec-puiss). Lorsqu’il est pertinent de réaliser un test unilatéral, on doit donc toujours le faire.\nReprenons l’un des exemples examinés précédemment pour mieux comprendre comment tout cela fonctionne.\n\n\n3.10.2 Un exemple pas à pas\nReprenons l’exemple des lézards cornus. L’étude a été réalisée parce que les chercheurs supposaient que la longueur des cornes des lézards était susceptible de leur fournir une protection face à la prédation. Autrement dit, les chercheurs supposaient que des cornes plus longues devaient fournir une meilleure protection vis à vis de la prédation. Ainsi, les lézards morts devaient avoir des cornes moins longues en moyenne que les les lézards vivants, simplement parce que porter des cornes courtes expose plus fortement les individus à la prédation. Nous avons donc une bonne raison “écologique/évolutive” de considérer un test unilatéral (la susceptibilité face à la prédation qui a entraîné une pression de sélection sur la longueur des cornes des lézards), avant même de collecter les données.\nLorsque nous avons examiné cette question, nous avons fait le test du \\(t\\) de Student sur échantillons indépendants de la façon suivante :\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE)\n\n\n    Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.3494, df = 182, p-value = 2.27e-05\nalternative hypothesis: true difference in means between group killed and group living is not equal to 0\n95 percent confidence interval:\n -3.335402 -1.253602\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nComme l’indiquent les résultats fournis, l’hypothèse alternative utilisée pour faire le test est : “La vraie différence de moyenne n’est pas égale à 0”. Autrement dit, nous avons fait un test bilatéral avec les hypothèses suivantes :\n\nH\\(_0\\) : la moyenne des 2 populations est égale, leur différence vaut 0 (\\(\\mu_{killed}-\\mu_{living} = 0\\)).\nH\\(_1\\) : la moyenne des 2 populations est différente, leur différence ne vaut pas 0 (\\(\\mu_{killed}-\\mu_{living} \\neq 0\\)).\n\nCe test est donc rigoureusement équivalent à celui-ci :\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE,\n       alternative = \"two.sided\")\n\n\n    Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.3494, df = 182, p-value = 2.27e-05\nalternative hypothesis: true difference in means between group killed and group living is not equal to 0\n95 percent confidence interval:\n -3.335402 -1.253602\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nIci, nous souhaitons en fait réaliser un test unilatéral avec les hypothèses suivantes :\n\nH\\(_0\\) : la moyenne de longueur des cornes de la population des lézards morts est égale à celle des lézards vivants. Leur différence vaut 0 (\\(\\mu_{killed}-\\mu_{living} = 0\\)).\nH\\(_1\\) : la moyenne de longueur des cornes de la population des lézards morts est inférieure à celle des lézards vivants. Leur différence est inférieure à 0 (\\(\\mu_{killed}-\\mu_{living} < 0\\)).\n\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE,\n       alternative = \"less\")\n\n\n    Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.3494, df = 182, p-value = 1.135e-05\nalternative hypothesis: true difference in means between group killed and group living is less than 0\n95 percent confidence interval:\n      -Inf -1.422321\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nPuisque la \\(p\\)-value de ce test est inférieure à \\(\\alpha = 0.05\\), on rejette l’hypothèse nulle de l’égalité des moyennes. On valide donc l’hypothèse alternative : les lézards cornus morts ont en moyenne des cornes plus courtes que les lézards vivants. Cette différence de longueur de cornes est en faveur des lézards vivants et vaut très probablement au moins \\(1.4\\) millimètres (c’est l’intervalle de confiance à 95% de la différence de moyennes qui nous le dit).\nDernière chose importante : il ne faut pas se tromper dans le choix de l’hypothèse alternative. En effet, nous aurions pu tenter de tester exactement la même chose en formulant les hypothèses suivantes :\n\nH\\(_0\\) : la moyenne de longueur des cornes de la population des lézards vivants est égale à celle des lézards morts. Leur différence vaut 0 (\\(\\mu_{living}-\\mu_{killed} = 0\\)).\nH\\(_1\\) : la moyenne de longueur des cornes de la population des lézards vivants est supérieure à celle des lézards morts. Leur différence est supérieure à 0 (\\(\\mu_{living}-\\mu_{killed} > 0\\)).\n\nCe test est normalement exactement le même que précédemment. Toutefois, si on essaie de le réaliser, on rencontre un problème :\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE,\n       alternative = \"greater\")\n\n\n    Two Sample t-test\n\ndata:  Horn_len by Survival\nt = -4.3494, df = 182, p-value = 1\nalternative hypothesis: true difference in means between group killed and group living is greater than 0\n95 percent confidence interval:\n -3.166684       Inf\nsample estimates:\nmean in group killed mean in group living \n            21.98667             24.28117 \n\n\nIci, la \\(p\\)-value est très supérieure à \\(\\alpha\\) puisqu’elle vaut 1. Une \\(p\\)-value de 1 devrait toujours attirer votre attention. La conclusion devrait donc être que l’on ne peut pas rejeter H\\(_0\\) : les lézards morts et vivants ont en moyenne des cornes de même longueur. Nous savons pourtant que c’est faux.\nLe problème est ici liè à l’ordre des catégories “vivant” ou “mort” dans le facteur Survival du tableau Lizard. Les dernières lignes des tests que nous venons de faire indiquent la moyenne de chaque groupe, mais le groupe “killed” apparaît toujours avant le groupe “living”. C’est l’ordre des niveaux dans le facteur Survival qui doit dicter la syntaxe appropriée :\n\nLizard$Survival\n\n  [1] living living living living living living living living living living\n [11] living living living living living living living living living living\n [21] living living living living living living living living living living\n [31] living living living living living living living living living living\n [41] living living living living living living living living living living\n [51] living living living living living living living living living living\n [61] living living living living living living living living living living\n [71] living living living living living living living living living living\n [81] living living living living living living living living living living\n [91] living living living living living living living living living living\n[101] living living living living living living living living living living\n[111] living living living living living living living living living living\n[121] living living living living living living living living living living\n[131] living living living living living living living living living living\n[141] living living living living living living living living living living\n[151] living living living living killed killed killed killed killed killed\n[161] killed killed killed killed killed killed killed killed killed killed\n[171] killed killed killed killed killed killed killed killed killed killed\n[181] killed killed killed killed\nLevels: killed living\n\n\nPar défaut, dans RStudio, les niveaux d’un facteur sont classés par ordre alphabétique sauf si on spécifie manuellement un ordre différent. Ici, le niveau “killed” est donc le premier niveau du facteur, et “living” le second. Attention, on parle bien ici des niveaux, ou modalités, et non des données elles-mêmes. Ici, le premier lézard mesuré appartient à la catégorie living. Ça n’est pas ça qui est important : c’est bien l’ordre des niveaux qui compte, et on peut le vour tout en bas, après Levels: .... Lorsque l’on réalise un test de Student avec ces données (ou un test de Wilcoxon d’ailleurs), la différence de moyenne qui est examinée par le test est donc “moyenne des killed - moyenne des living”. Lorsque nous avons tapé ceci :\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE,\n       alternative = \"greater\")\n\nnous avons donc en réalité posé les hypothèses suivantes :\n\nH\\(_0\\) : la moyenne de longueur des cornes de la population des lézards morts est égale à celle des lézards vivants. Leur différence vaut 0 (\\(\\mu_{killed}-\\mu_{living} = 0\\)).\nH\\(_1\\) : la moyenne de longueur des cornes de la population des lézards morts est supérieure à celle des lézards vivants. Leur différence est supérieure à 0 (\\(\\mu_{killed}-\\mu_{living} > 0\\)).\n\nCe test est donc erroné, ce qui explique qu’il nous renvoie un résultat faux et une \\(p\\)-value de 1. Ici, puisque l’ordre des catégories est “killed” d’abord et “living” ensuite, la seule façon correcte de faire un test unilatéral qui a du sens est donc celle que nous avons réalisée en premier :\n\nt.test(Horn_len ~ Survival, data = Lizard, var.equal = TRUE,\n       alternative = \"less\")\n\nFaites donc toujours attention à l’ordre des catégories de vos facteurs pour ne pas vous tromper. Une façon simple de vérifier cet ordre et d’observer vos graphiques (par exemple, les boîtes à moustaches). L’ordre dans lequel les catégories apparaissent sur l’axe des x reflète l’ordre des catégorie du facteur porté par cet axe :\n\nLizard %>% \n  ggplot(aes(x = Survival, y = Horn_len)) +\n  geom_boxplot()\n\n\n\n\n\n\n3.10.3 Exercice d’application\nReprenez chaque exemple et exercice traité depuis le premier chapitre et identifiez les situations où un test unilatéral aurait du sens. Si vous en trouvez, faites ce test et assurez-vous que les hypothèses choisies sont bien celles qui sont utilisées lors du test.\n\n\n\n\nFox, John, Sanford Weisberg, et Brad Price. 2022. car: Companion to Applied Regression. https://CRAN.R-project.org/package=car.\n\n\nHorst, Allison, Alison Hill, et Kristen Gorman. 2022. palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data. https://CRAN.R-project.org/package=palmerpenguins.\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia, Hao Zhu, et Shannon Ellis. 2022. skimr: Compact and Flexible Summaries of Data. https://CRAN.R-project.org/package=skimr.\n\n\nWickham, Hadley. 2022. tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, et Jennifer Bryan. 2022. readxl: Read Excel Files. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, et Dewey Dunnington. 2022. ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, et Davis Vaughan. 2023. dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Jim Hester, et Jennifer Bryan. 2022. readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nYoung, Kevin V., Edmund D. Brodie, et Edmund D. Brodie. 2004. « How the Horned Lizard Got Its Horns ». Science 304 (5667): 65‑65. https://doi.org/10.1126/science.1094790."
  },
  {
    "objectID": "04-ANOVA.html",
    "href": "04-ANOVA.html",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "",
    "text": "Comme pour chaque nouveau chapitre, je vous conseille de travailler dans un nouveau script que vous placerez dans votre répertoire de travail, et dans une nouvelle session de travail (Menu Session > Restart R). Inutile en revanche de créer un nouveau Rproject : vos pouvez tout à fait avoir plusieurs script dans le même répertoire de travail et pour un même Rproject. Comme toujours, consultez le livre en ligne du semestre 3 si vous ne savez plus comment faire.\nSi vous êtes dans une nouvelle session de travail (ou que vous avez quitté puis relancé RStudio), vous devrez penser à recharger en mémoire les packages utiles. Dans ce chapitre, vous aurez besoin d’utiliser :\n\nle tidyverse (Wickham 2022), qui comprend notamment le package readr (Wickham, Hester, et Bryan 2022), pour importer facilement des fichiers .csv au format tibble, le package dplyr (Wickham et al. 2023), pour manipuler des tableaux, et le package ggplot2 (Wickham et al. 2022) pour les représentations graphiques.\nreadxl (Wickham et Bryan 2022), pour importer facilement des fichiers Excel au format tibble.\nskimr (Waring et al. 2022), qui permet de calculer des résumés de données très informatifs.\ncar (Fox, Weisberg, et Price 2022), qui permet d’effectuer le test de comparaison des variances de Levene.\nbroom (Robinson, Hayes, et Couch 2022), qui fait partie du tidyverse mais qu’il faut charger explicitement. La fonction tidy() de ce package nous permettra de “ranger” correctement les résultats de tests dans un tibble.\nDescTools (Signorell 2022), afin de réaliser un test spécifique de comparaisons multiples. N’oubliez pas de l’installer si nécessaire, avant de le charger en mémoire.\nle package palmerpenguins (Horst, Hill, et Gorman 2022) pour accéder au jeu de données penguins que nous utiliserons pour les exercices d’application.\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\nlibrary(car)\nlibrary(broom)\nlibrary(DescTools)\nlibrary(palmerpenguins)\n\nVous aurez également besoin des jeux de données suivants que vous pouvez dès maintenant télécharger dans votre répertoire de travail :\n\nLight.csv\nInsectes.csv\n\nEnfin, je spécifie ici une fois pour toutes le thème que j’utiliserai pour tous les graphiques de ce chapitre. Libre à vous de choisir un thème différent ou de vous contenter du thème proposé par défaut :\n\ntheme_set(theme_bw())"
  },
  {
    "objectID": "04-ANOVA.html#contexte",
    "href": "04-ANOVA.html#contexte",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.2 Contexte",
    "text": "4.2 Contexte\n\n\nVoyager dans un pays éloigné peut faire souffrir de décalage horaire. Habituellement, la resynchronisation de l’horloge interne circadienne dans le nouveau fuseau horaire est réalisée grâce à la perception de la lumière par les yeux. Ce changement progressif du rythme de notre horloge interne est appelé “décalage de phase”. Ce phénomène a été étudié par 2 chercheurs en 1998 (Campbell et Murphy 1998), qui ont montré que ce décalage de phase pouvait également être obtenu en exposant des sujets à la lumière, non pas au niveau de leurs yeux, mais au niveau de leur fosse (ou creux) poplitée, c’est-à-dire, derrière les genoux.\nCette découverte a été vivement critiquée par certains, et saluée comme une découverte majeure par d’autres. Toutefois, certains aspects du design expérimental de l’étude de 1998 ont été mis en doute en 2002 : il semble en effet que lors de l’exposition du creux poplité, les yeux de certains patients ont été également exposés à de faibles intensités lumineuses. Pour vérifier les trouvailles de Campbell et Murphy, Wright et Czeisler (Wright et Czeisler 2002) ont ré-examiné ce phénomène. La nouvelle expérience a évalué les rythmes circadiens en mesurant les cycles quotidiens de production de mélatonine chez 22 participants placés au hasard dans 3 groupes. Les patients étaient réveillés en pleine nuit et exposés :\n\nSoit à 3 heures de lumière appliquée exclusivement derrière leurs genoux (groupe knee).\nSoit à 3 heures de lumière appliquée exclusivement à leurs yeux (groupe eyes).\nSoit à 3 heures d’obscurité totale (groupe control).\n\nLe décalage de phase du cycle de production de mélatonine était mesuré 48h plus tard. Des chiffres négatifs indiquent un retard de production de mélatonine. C’est l’effet théorique attendu du traitement lumineux administré. Un décalage de phase positif indique une production de mélatonine plus précoce. Une absence de changement se traduit par un décalage de phase de 0."
  },
  {
    "objectID": "04-ANOVA.html#importation-et-mise-en-forme-des-données",
    "href": "04-ANOVA.html#importation-et-mise-en-forme-des-données",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.3 Importation et mise en forme des données",
    "text": "4.3 Importation et mise en forme des données\nLes données brutes de cette étude sont fournies dans le fichier Light.csv. Importez ces données dans RStudio et examinez les données brutes grâce à la fonction View().\n\nLight\n\n# A tibble: 22 × 2\n   treatment shift\n   <chr>     <dbl>\n 1 control    0.53\n 2 control    0.36\n 3 control    0.2 \n 4 control   -0.37\n 5 control   -0.6 \n 6 control   -0.64\n 7 control   -0.68\n 8 control   -1.27\n 9 knee       0.73\n10 knee       0.31\n# … with 12 more rows\n\n\nLe tableau obtenu est-il au format long ou au format court/large ? Pourquoi un tableau au format suivant n’aurait-il pas de sens ?\n\n\n# A tibble: 8 × 3\n  control  eyes  knee\n    <dbl> <dbl> <dbl>\n1    0.53 -0.78  0.73\n2    0.36 -0.86  0.31\n3    0.2  -1.35  0.03\n4   -0.37 -1.48 -0.29\n5   -0.6  -1.52 -0.56\n6   -0.64 -2.04 -0.96\n7   -0.68 -2.83 -1.61\n8   -1.27 NA    NA   \n\n\nLorsque l’on réalise une analyse de variance, puisque les effectifs ne sont pas nécessairement identiques dans tous les groupes (c’est ce qu’on appelle un design déséquilibré, ou “unbalanced design”), présenter les tableaux au format long est indispensable. Par ailleurs, notez que les ANOVAs réalisées sur des “balanced design” (ou designs équilibrés, pour lesquels tous les groupes sont de même taille), sont beaucoup plus puissantes que les ANOVAs réalisées sur des “unbalanced designs”.\nIci, le tableau de données est très simple (et de petite taille). Il n’y a pas de données manquantes et aucune création de nouvelle variable n’est nécessaire. La seule modification que nous devrions faire est de transformer la variable treatment en facteur :\n\nLight <- Light %>%\n  mutate(treatment = factor(treatment))\n\nComme toujours, les niveaux du facteur sont automatiquement classés par ordre alphabétique :\n\nlevels(Light$treatment)\n\n[1] \"control\" \"eyes\"    \"knee\"   \n\n\nPour les statistiques descriptives et les graphiques qui viendront après, nous souhaitons indiquer l’ordre suivant : control, puis knee, puis eyes :\n\nLight <- Light %>%\n  mutate(treatment = fct_relevel(treatment, \"control\", \"knee\", \"eyes\"))\n\nLight\n\n# A tibble: 22 × 2\n   treatment shift\n   <fct>     <dbl>\n 1 control    0.53\n 2 control    0.36\n 3 control    0.2 \n 4 control   -0.37\n 5 control   -0.6 \n 6 control   -0.64\n 7 control   -0.68\n 8 control   -1.27\n 9 knee       0.73\n10 knee       0.31\n# … with 12 more rows\n\nLight$treatment\n\n [1] control control control control control control control control knee   \n[10] knee    knee    knee    knee    knee    knee    eyes    eyes    eyes   \n[19] eyes    eyes    eyes    eyes   \nLevels: control knee eyes\n\n\nAttention à bien respecter la casse (le respect des majuscules/minuscules est toujours aussi important dans RStudio)."
  },
  {
    "objectID": "04-ANOVA.html#exploration-statistique-des-données",
    "href": "04-ANOVA.html#exploration-statistique-des-données",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.4 Exploration statistique des données",
    "text": "4.4 Exploration statistique des données\nComme toujours, et maintenant que nos données sont au bon format, il est nécessaire d’examiner quelques statistiques descriptives pour chaque catégorie étudiée. On peut tout d’abord commencer par examiner la taille de chaque échantillon :\n\nLight %>%\n  count(treatment)\n\n# A tibble: 3 × 2\n  treatment     n\n  <fct>     <int>\n1 control       8\n2 knee          7\n3 eyes          7\n\n\nNous avons ici la confirmation que le design expérimental n’est pas équilibré, puisque le groupe control compte un individu de plus. Nous pouvons ensuite utiliser la fonction skim du package skimr pour obtenir un résumé des données :\n\nLight %>%\n  group_by(treatment) %>%\n  skim()\n\n── Data Summary ────────────────────────\n                           Values    \nName                       Piped data\nNumber of rows             22        \nNumber of columns          2         \n_______________________              \nColumn type frequency:               \n  numeric                  1         \n________________________             \nGroup variables            treatment \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable treatment n_missing complete_rate   mean    sd    p0   p25\n1 shift         control           0             1 -0.309 0.618 -1.27 -0.65\n2 shift         knee              0             1 -0.336 0.791 -1.61 -0.76\n3 shift         eyes              0             1 -1.55  0.706 -2.83 -1.78\n     p50   p75  p100 hist \n1 -0.485  0.24  0.53 ▂▇▂▁▇\n2 -0.29   0.17  0.73 ▃▃▇▃▇\n3 -1.48  -1.10 -0.78 ▂▂▁▇▅\n\n\nIl semble que le groupe eyes se comporte un peu différemment des autres groupes. En effet, pour les groupes control et knee, les valeurs des indices de position observés sont très proches :\n\nles moyennes et les médianes sont négatives mais proches de 0.\nles valeurs observées sont négatives pour certaines, et positives pour d’autres (la colonne p0 contient les minimas et la colonne p100 contient les maximas).\n\nEn revanche, pour le groupe eyes, les décalages de phase observés sont tous négatifs (le maximum, présenté dans la colonne p100 vaut -0.78) et la moyenne est près de 5 fois plus faible que pour les 2 autres groupes.\nConcernant la dispersion, les écart-types semblent en revanche très proches dans les 3 groupes (entre 0.6 et 0.8).\nEnfin, les histogrammes présentés pour chaque groupe semblent très éloignés d’une distribution Normale. C’est logique compte tenu des faibles effectifs dans chaque groupe. Nous verrons plus tard que cela n’a aucune importance puisque les conditions d’application de l’ANOVA portent sur les résidus de l’ANOVA (nous verrons plus loin de quoi il s’agit), et pas sur les données brutes.\nIl semble donc que seul le groupe eyes soit véritablement différent du groupe témoin. Pour le vérifier, on peut calculer les intervalles de confiance à 95% des moyennes. Nous examinerons ensuite quelques graphiques, puis nous ferons un test d’hypothèses.\n\nLight %>% \n  reframe(mean_cl_normal(shift), .by = treatment)\n\n# A tibble: 3 × 4\n  treatment      y   ymin   ymax\n  <fct>      <dbl>  <dbl>  <dbl>\n1 control   -0.309 -0.825  0.208\n2 knee      -0.336 -1.07   0.396\n3 eyes      -1.55  -2.20  -0.898\n\n\nLà encore, le groupe eyes semble assez différent des 2 autres. L’intervalle de confiance à 95% de ce groupe ([-2.20 ; -0.90]) est totalement disjoint du groupe knee ([-1.07 ; 0.40]) et chevauche à peine celui du groupe control ([-0.82 ; 0.21]). L’intervalle de confiance du groupe kneerecouvre en revanche en totalité celui du groupe control. Il n’y aura donc vraisemblablement pas de différence significative entre ces 2 groupes, mais une différence significative entre le groupe eyes et les 2 autres. Pour visualiser un peu mieux ces résultats préliminaires, examinons quelques graphiques."
  },
  {
    "objectID": "04-ANOVA.html#exploration-graphique",
    "href": "04-ANOVA.html#exploration-graphique",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.5 Exploration graphique",
    "text": "4.5 Exploration graphique\nComme toujours, il est indispensable de regarder à quoi ressemblent les données brutes sur un ou des graphiques. Les statistiques descriptives ne racontent en effet pas toujours toute l’histoire. Ici, nous allons superposer les données brutes, sous forme de nuage de points, aux boites à moustaches :\n\nLight %>%\n  ggplot(aes(x = treatment, y = shift, fill = treatment)) +\n  geom_boxplot(notch = TRUE, show.legend = FALSE, \n               alpha = 0.3, outlier.colour = NA) +\n  geom_jitter(width = 0.2, shape = 21, show.legend = FALSE) +\n  labs(x = \"traitement\", y = \"Décalage de phase (sans unité)\") +\n  scale_fill_brewer(palette = \"Accent\")\n\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?\n\n\n\n\n\nPuisqu’il y a peu de données, les intervalles de confiance à 95% sont très larges. Ils dépassent d’ailleurs presque systématiquement les quartiles, ce qui explique l’apparence bizarre des boîtes à moustaches et les messages d’avertissement affichés lors de la création du graphique. Il vaudait donc mieux représenter cette figure sans ces intervalles de confiance. Toutefois, avant de les retirer, on peut constater ici que les IC 95% se chevauchent complètement pour les séries control et knee. En revanche, il n’y a aucun chevauchement de l’IC 95% du groupe eyes avec les 2 autres groupes. Ces réslutats sont très légèrement différents de ceux obtenus plus haut, car on examine ici les intervalles de confiance à 95% des médianes, alors qu’on regardait les intervalles de confiance à 95% des moyennes dans la section précédente. Les conclusions sont toutefois les mêmes : on s’attend donc à trouver une différence de moyenne significative entre le groupe eyes d’une part, et les groupes control et knee d’autre part, mais pas de différence de moyenne entre les groupes control et knee.\n\nLight %>%\n  ggplot(aes(x = treatment, y = shift, fill = treatment)) +\n  geom_boxplot(show.legend = FALSE, \n               alpha = 0.3, outlier.colour = NA) +\n  geom_jitter(width = 0.2, shape = 21, show.legend = FALSE) +\n  labs(x = \"traitement\", y = \"Décalage de phase (sans unité)\") +\n  scale_fill_brewer(palette = \"Accent\")\n\n\n\n\nOn constate ici visuellement que les 3 séries ont une étendue à peu près similaire, et que le groupe eyes semble se distinguer des 2 autres par des valeurs plus faibles. Enfin, les boîtes contenant 50% des valeurs centrales (donc l’étendue des valeurs entre les premiers et troisièmes quartiles) recouvrent le 0 pour les 2 groupes control et knee, mais par pour eyes.\nL’examen d’un graphique de densité facetté donne les mêmes informations :\n\nLight %>% \n  ggplot(aes(x = shift, fill = treatment)) +\n  geom_density(show.legend = FALSE, alpha = 0.5) +\n  geom_rug() +\n  facet_wrap(~treatment, ncol = 1) +\n  scale_fill_brewer(palette = \"Accent\") +\n  labs(x = \"Décalage de phase (sans unité)\", y = \"Densité\")\n\n\n\n\nUn package utile lorsque l’on dispose d’un grand nombre de groupes que l’on souhaite comparer à l’aide de graphiques de densité est le package ggridges :\n\nlibrary(ggridges)\nLight %>% \n  ggplot(aes(x = shift, y = treatment, fill = treatment)) +\n  geom_density_ridges(show.legend = FALSE, alpha = 0.5) +\n  scale_fill_brewer(palette = \"Accent\") +\n  labs(x = \"Décalage de phase (sans unité)\", y = \"Densité\")\n\nPicking joint bandwidth of 0.366"
  },
  {
    "objectID": "04-ANOVA.html#le-test-paramétrique",
    "href": "04-ANOVA.html#le-test-paramétrique",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.6 Le test paramétrique",
    "text": "4.6 Le test paramétrique\nLe test paramétrique permettant de comparer la moyenne de plusieurs populations en une seule étape est l’analyse de variance à un facteur. Contrairement aux tests que nous avons vus jusqu’à maintenant, les conditions d’application de ce test ne seront vérifiées qu’après avoir réalisé l’analyse. En effet, les conditions d’application de l’ANOVA ne se vérifient pas sur les données brutes mais sur les résidus de l’ANOVA. C’est d’ailleurs ce que l’on appelle l’analyse des résidus, ou diagnostique de l’ANOVA.\n\n4.6.1 Réalisation du test\nDans R, l’analyse de variance se fait grâce à la fonction aov() (comme “Analysis Of Variance”). La syntaxe est la même que pour un certain nombre de tests déjà vus dans les chapitres précédents : il faut fournir une formule à la fonction. On place la variable numérique expliquée à gauche du ~, et à droite, la variable qualitative explicative (le facteur).\nContrairement aux autres tests réalisés jusqu’ici, les résultats du test devront être sauvegardés dans un objet. Outre les résultats du test, cet objet contiendra également tous les éléments permettant de vérifier si les conditions d’application de l’ANOVA sont réunies ou non.\nLes hypothèses testées sont les suivantes :\n\nH\\(_0\\) : les moyennes de toutes les populations sont égales (\\(\\mu_{\\textrm{control}} = \\mu_{\\textrm{knee}} = \\mu_{\\textrm{eyes}}\\)).\nH\\(_1\\) : toutes les moyennes ne sont pas égales. Au moins l’une d’entre elles diffère des autres.\n\n\n# Réalisation de l'ANOVA 1 facteur\nres <- aov(shift ~ treatment, data = Light)\n\n# Affichage des résultats\nres\n\nCall:\n   aov(formula = shift ~ treatment, data = Light)\n\nTerms:\n                treatment Residuals\nSum of Squares   7.224492  9.415345\nDeg. of Freedom         2        19\n\nResidual standard error: 0.7039492\nEstimated effects may be unbalanced\n\n\nL’affichage des résultats bruts ne nous apprend que peu de choses. En revanche, la fonction summary() donne la réponse du test :\n\nsummary(res)\n\n            Df Sum Sq Mean Sq F value  Pr(>F)   \ntreatment    2  7.224   3.612   7.289 0.00447 **\nResiduals   19  9.415   0.496                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nPour le facteur étudié (treatment), on obtient le nombre de degrés de libertés (Df), la somme des carrés (Sum Sq), les carrés moyens (Mean Sq), la statistique du test (F) et la \\(p-\\)value (Pr(>F)). Ici, la \\(p-\\)value est inférieure à \\(\\alpha\\), donc on rejette H\\(_0\\). Au moins l’une des moyennes est différente des autres.\nAvant d’aller plus loin dans l’interprétation de ces résultats, il nous faut déterminer si nous avions bel et bien le droit de réaliser cette ANOVA, en vérifiant si les conditions d’application de l’ANOVA sont remplies.\n\n\n4.6.2 Conditions d’application\nL’ANOVA est un test paramétrique, et comme pour tous les tests paramétriques, des conditions d’application doivent être vérifiées pour avoir le droit d’effectuer le test. À la différence des autres tests paramétriques que nous avons réalisés jusqu’ici, les conditions d’application de l’ANOVA ne doivent pas être vérifiées avant de faire le test, mais après.\nLes résultats de l’ANOVA ne seront donc valides que si les conditions d’application sont vérifiées. Comme indiqué plus haut, ces conditions d’application doivent être vérifiées sur les résidus de l’ANOVA, donc nécessairement après avoir réalisé l’analyse. Les résidus de l’ANOVA représentent l’écart entre chaque observation et la moyenne de son groupe, et ils sont calculés au moment ou nous réalisons l’ANOVA.\n\n\n\n\n\n\nImportant\n\n\n\nLes conditions d’application de l’ANOVA ne se vérifient pas sur les données brutes comme c’est le cas du test de Student, mais sur les résidus de l’ANOVA, qui sont calculés au moment où l’ANOVA est réalisée. Par conséquent, on ne vérifie pas les conditions d’application avant mais bien après avoir fait le test.\nÇa n’est que si les conditions d’application sont remplies qu’on aura le droit d’interpréter les résultats de l’ANOVA.\n\n\nPour que l’ANOVA soit valide, les résidus doivent :\n\nÊtre indépendants.\nÊtre homogènes.\nÊtre distribués normalement.\n\n\n4.6.2.1 Indépendance des résidus\nL’indépendance des résidus signifie que connaître la valeur d’un résidu ne permet pas de prédire la valeur d’un autre résidu. Si les données ont été collectées correctement (échantillonnage aléatoire simple, indépendance des observations), on considère généralement que cette condition est vérifiée. Les 2 autres conditions d’application se vérifient soit graphiquement, soit avec un test d’hypothèses.\n\n\n4.6.2.2 Homogénéité des résidus\nL’homogénéité des résidus signifie que les résidus doivent avoir à peu près la même variance pour chacun des groupes comparés. On peut vérifier que cette condition d’application est vérifiée grâce à ce graphique, qui représente les résidus (residuals, sur l’axe des y) en fonction des valeurs ajustées (c’est-à-dire la moyenne de chaque groupe, fitted values, sur l’axe des x) :\n\nplot(res, which = 1)\n\n\n\n\nIci, les résidus sont considérés comme homogènes car nous avons à peu près autant de résidus positifs que négatifs et que la ligne rouge est très proche du 0. L’étalement (vertical) des résidus est à peu près le même de la gauche à la droite du graphique. On pourrait donc faire entrer les résidus dans une boite rectangulaire horizontale centrée sur le 0 et ayant la même largeur d’un bout à l’autre du graphique.\nCi-dessous, j’affiche quelques exemples de situations où les résidus ne sont pas homogènes afin que vous puissiez voir à quoi ressemblent les graphiques des résidus en fonction des valeurs ajustées dans ce type de situation :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPour ces 4 graphiques, les résidus ne rentrent pas dans une boîte rectangulaire qui a la même hauteur d’un bout à l’autre du graphique. Les résidus de ces ANOVAs fictives ne sont donc pas homogènes et les conditions d’application de l’ANOVA ne sont donc pas réunies.\nMais revenons à nos données de décalage de phase. Une autre façon de visualiser les résidus est d’utiliser le graphique suivant :\n\nplot(res, which = 3)\n\n\n\n\nSur ce graphique, ce qui compte principalement, c’est la droite en rouge. Elle est ici presque horizontale, ce qui montre que les résidus de tous les groupes (un groupe à gauche et 2 à droite) ont à peu près même moyenne.\nEnfin, cette condition d’homogénéité des résidus entre les groupes peut également être vérifiée grâce au test de Levene. Pour ce test, les hypothèses seront les suivantes :\n\nH\\(_0\\) : les résidus sont homogènes (i.e. identiques dans tous les groupes).\nH\\(_1\\) : les résidus ne sont pas homogènes (i.e. au moins un groupe présente des résidus dont la variance est différente des autres).\n\n\nleveneTest(res$residuals ~ Light$treatment)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(>F)\ngroup  2  0.1586 0.8545\n      19               \n\n\nIci, puisque \\(p > \\alpha\\), on ne peut pas rejeter l’hypothèse nulle. Les résidus sont donc bien homogènes.\nReste à vérifier la normalité des résidus.\n\n\n4.6.2.3 Normalité des résidus\nComme pour l’homogénéité des résidus, leur normalité peut être examinée graphiquement ou avec un test statistique :\n\nplot(res, which = 2)\n\n\n\n\nSur un graphique quantile-quantile comme celui-là, on considère que les observations sont distribuées normalement si les points sont bien alignés sur la droite. Ici, la plupart des points sont très proches de la droite, ce qui laisse penser que les résidus suivent bien la loi Normale. Mais il est souvent difficile, surtout pour les néophytes, de savoir à partir de quel écart entre les points et la droite il faut considérer que les résidus n’ont pas une distribution Normale.\nOn peut donc confirmer (ou non !) notre première impression avec le test de Normalité de Shapiro-Wilk. Il s’agit du même test de Normalité que nous utilisions sur les données brutes pour vérifier les conditions d’application du test de Student. Ici, on applique ce test sur les résidus de l’ANOVA :\n\nshapiro.test(res$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  res$residuals\nW = 0.95893, p-value = 0.468\n\n\nComme pour tous les tests de Shapiro-Wilk, l’hypothèse nulle est la normalité des observations. Ici, puisque \\(p > \\alpha\\), on ne peut pas rejeter H\\(_0\\). Les résidus suivent donc bien la loi Normale.\nToutes les conditions d’application de l’ANOVA sont donc vérifiées. Nous avions donc bien le droit de la réaliser et ses résultats sont valides.\nDernière chose, il est possible de produire les 3 graphiques ci-dessus (et même un quatrième que nous ne décrirons pas ici), en une seule commande :\n\nplot(res)\n\nIl faut alors presser la touche Entrée de votre clavier pour afficher successivement les 4 graphiques produits.\n\n\n\n4.6.3 Interprétation des résultats\nMaintenant que nous avons la confirmation que les conditions d’application sont vérifiées, revenons aux résultats de l’ANOVA :\n\nsummary(res)\n\n            Df Sum Sq Mean Sq F value  Pr(>F)   \ntreatment    2  7.224   3.612   7.289 0.00447 **\nResiduals   19  9.415   0.496                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nComme indiqué plus haut, la première ligne du tableau d’ANOVA contient toutes les informations pertinentes pour interpréter ces résultats. En particulier, la dernière valeur de la ligne correspond à la \\(p-\\)value. Ici, elle est inférieure au seuil \\(\\alpha\\) de 0.05. On pourrait rédiger les résultats de cette analyse ainsi :\n\nUne analyse de variance montre que la moyenne des 3 groupes n’est pas identique (\\(F = 7.289\\), \\(p = 0.004\\)). Un test de Levene a permis de vérifier la condition d’homogénéité de la variance des résidus (\\(F = 0.189\\), \\(p = 0.855\\)), et un test de Shapiro-Wilk a confirmé la normalité des résidus (\\(W = 0.959\\), \\(p = 0.468\\)).\n\nAinsi, puisque \\(p < \\alpha\\), on rejette \\(H_0\\). ON a donc bien montré que tous les groupes n’avaient pas la même moyenne. Mais à ce stade, on ne sait pas encore si tous les groupes ont des moyennes strictement différentes les unes des autres, ou si seul un groupe (et lequel) présente une moyenne différente des 2 autres.\nÀ l’issue de cette analyse, deux questions restent donc en suspens :\n\nEntre quels groupes les moyennes sont-elles significativement différentes ?\nQuelle est la magnitude de ces différences ?\n\nPour répondre à ces 2 questions, il nous faut réaliser des tests a posteriori ou tests post-hoc.\n\n\n\n\n\n\nLes tests post-hoc\n\n\n\nLes tests post-hoc doivent être réalisés uniquement si l’hypothèse nulle de l’ANOVA est rejetée. Ils sont alors nécessaires pour déterminer entre quels groupes les moyennes sont significativement différentes. Si à l’inverse, l’ANOVA n’a pas permis de rejeter \\(H_0\\), alors on peut conclure à l’absence de différence de moyenne entre les groupes (i.e. toutes les moyennes sont égales), et les tests post-hoc n’ont alors aucun intérêt.\n\n\n\n\n4.6.4 Tests a posteriori ou tests post-hoc\nLorsqu’une ANOVA montre que tous les groupes n’ont pas la même moyenne, il faut en théorie effectuer toutes les comparaisons de moyennes deux à deux possibles. Le problème est que lorsque l’on effectue des comparaisons multiples, les erreurs \\(\\alpha\\) (probabilité de rejeter à tort H\\(_0\\)) de tous les tests s’ajoutent. Ainsi :\n\npour comparer 3 groupes 2 à 2, nous avons besoin de 3 tests.\nPour comparer 4 groupes 2 à 2, nous avons besoin de 6 tests.\npour comparer 5 groupes 2 à 2, nous avons besoin de 10 tests.\npour comparer 6 groupes 2 à 2, nous avons besoin de 15 tests.\npour comparer k groupes 2 à 2, nous avons besoin de \\(\\frac{k(k-1)}{2}\\) tests.\n\nIci, puisque pour chaque test, un risque \\(\\alpha\\) de 5% de rejeter à tort l’hypothèse nulle est commis, réaliser 3 tests ferait monter le risque de s’être trompé quelque part à 15%. C’est la raison pour laquelle des tests spécifiques existent. Nous en verrons 2 : le test de comparaisons multiples de Student et le test de Tukey (ou “Honestly Significant Difference Test”). Pour ces tests, des précautions sont prises qui garantissent que le risque \\(\\alpha\\) global (à l’issue de l’ensemble des tests) est maîtrisé et qu’il reste fixé à 5%, quel que soit le nombre de comparaisons effectuées.\n\n4.6.4.1 Comparaisons multiples de Student\nLe test de comparaisons multiples de Student est réalisé avec la fonction pairwise.t.test(). En réalité, ici, 3 tests de Student seront réalisés. Les \\(p-\\)values des tests seront simplement modifiées afin que globalement, le risque \\(\\alpha\\) n’augmente pas. Pour chaque test réalisé, les hypothèses nulles et alternatives sont les mêmes que celles décrites à la Section 3.6.2 :\n\nH\\(_0\\) : la moyenne des deux populations est égale (\\(\\mu_1 = \\mu_2\\), soit \\(\\mu_1 - \\mu_2\\) = 0).\nH\\(_1\\) : la moyenne des deux populations est différente (\\(\\mu_1 \\neq \\mu_2\\), soit \\(\\mu_1 - \\mu_2 \\neq 0\\)).\n\nAttention, pour ce test, la syntaxe “formules”, qui utilise le tilde (~) n’est pas possible. Il faut obligatoirement fournir à la fonction 2 objets : la colonne contenant la variable expliquée numérique, et la colonne (facteur) contenant les catégories (ici, le facteur contenant le type de traitement appliqué à chaque individu lors de l’expérience) :\n\n# Réalisation du test\npost_hoc1 <- pairwise.t.test(Light$shift, Light$treatment)\n\n# affichage des résultats\npost_hoc1\n\n\n    Pairwise comparisons using t tests with pooled SD \n\ndata:  Light$shift and Light$treatment \n\n     control knee  \nknee 0.9418  -     \neyes 0.0088  0.0088\n\nP value adjustment method: holm \n\n\nSeules les \\(p-\\)values de chaque test sont fournies sous la forme d’une demi-matrice. On constate ainsi qu’une seule \\(p-\\)value est supérieure à \\(\\alpha = 0.05\\) : celle du test comparant les moyennes des groupes knee et control. Une autre façon de visualiser ces résultats consiste à utiliser la fonction tidy() du package broom que nous avons mis en mémoire un peu plus tôt. Les résultats seront les mêmes. Ils seront simplement rangés dans un tibble :\n\ntidy(post_hoc1)\n\n# A tibble: 3 × 3\n  group1 group2  p.value\n  <chr>  <chr>     <dbl>\n1 knee   control 0.942  \n2 eyes   control 0.00879\n3 eyes   knee    0.00880\n\n\nNous avons donc la confirmation que les moyennes des groupes knee et control ne sont pas significativement différentes l’une de l’autre. En revanche, la moyenne du groupe eyes est différente de celle des 2 autres groupes (\\(p = 0.009\\) pour les 2 tests).\nNous avons donc appris des choses nouvelles, mais nous ne savons toujours pas quelle est la magnitude de la différence détectée entre le groupe eyes et les 2 autres. Le test de Tukey HSD nous permet de répondre à cette question.\n\n\n4.6.4.2 Test de Tukey\nCe test est souvent plus avantageux que le test des comparaisons multiples de Student, car outre la \\(p-\\)value de chaque comparaison deux à deux, il renvoie des informations concernant les différences de moyennes entre chaque paire de modalités du facteur étudié, et les intervalles de confiance à 95% de ces différences de moyennes. Donc en plus de savoir quels groupes ou traitements sont significativement différents les uns des autres, ce test nous indique l’importance des différences détectées.\nPour effectuer ce test, on utilise la fonction TukeyHSD(), à laquelle on fournit simplement l’objet contenant les résultats de l’ANOVA :\n\n# Réalisation du test de Tukey HSD\npost_hoc2 <- TukeyHSD(res)\n\n# Affichage des résultats\npost_hoc2\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = shift ~ treatment, data = Light)\n\n$treatment\n                    diff        lwr        upr     p adj\nknee-control -0.02696429 -0.9525222  0.8985936 0.9969851\neyes-control -1.24267857 -2.1682364 -0.3171207 0.0078656\neyes-knee    -1.21571429 -2.1716263 -0.2598022 0.0116776\n\n\nNous obtenons bien à la fois la \\(p-\\)value des comparaisons 2 à 2, ainsi que l’estimation des différences de moyennes (et de leur intervalle de confiance à 95%) entre paires de groupes. Là encore, l’utilisation de la fonction tidy() du package broom peut rendre les résultats plus lisibles (ou en tous cas, plus faciles à manipuler) :\n\ntidy(post_hoc2)\n\n# A tibble: 3 × 7\n  term      contrast     null.value estimate conf.low conf.high adj.p.value\n  <chr>     <chr>             <dbl>    <dbl>    <dbl>     <dbl>       <dbl>\n1 treatment knee-control          0  -0.0270   -0.953     0.899     0.997  \n2 treatment eyes-control          0  -1.24     -2.17     -0.317     0.00787\n3 treatment eyes-knee             0  -1.22     -2.17     -0.260     0.0117 \n\n\nLa première ligne de ce tableau nous confirme une absence de différence de moyenne significative entre les groupes knee et control (p = 0.997). La différence de moyenne estimée pour ces deux catégories (\\(\\hat{\\mu}_{\\textrm{knee}} - \\hat{\\mu}_{\\textrm{control}}\\)) vaut \\(-0.027\\), avec un intervalle de confiance à 95% pour cette différence qui vaut \\([-0.95 ; 0.90]\\). Cet intervalle, qui rassemble les valeurs les plus probables pour cette différence de moyenne, contient la valeur 0, ce qui confirme qu’il n’y a aucune raison de penser qu’une différence réelle existe entre ces 2 catégories. Le faible écart de moyennes observé entre ces 2 groupes est donc très vraisemblablement le fruit du hasard. L’éclairage du creux poplité donne les mêmes résultats que quand les patients sont maintenus dans le noir.\nEn revanche, les lignes 2 et 3 de ce tableau montrent des différences significatives (\\(p = 0.008\\) et \\(p = 0.012\\) pour les comparaisons eyes/control et eyes/knee respectivement). Les différences sont négatives, de l’ordre de -1.2 pour les 2 comparaisons, ce qui traduit des valeurs plus faibles pour eyes que pour les 2 autres groupes. Pour ces 2 comparaisons, les intervalles de confiance à 95% des différences ne contiennent pas le 0, mais exclusivement des valeurs négatives. Cela traduit donc bien une resynchronisation plus rapide chez les sujets dont les yeux sont exposés à la lumière que chez les sujets des 2 autres groupes.\nEn utilisant le tableau ci-dessus, nous pouvons synthétiser graphiquement ces résultats :\n\ntidy(post_hoc2) %>%\n  ggplot(aes(x = contrast, y = estimate)) +\n  geom_point() +\n  geom_linerange(aes(ymin = conf.low, ymax = conf.high)) +\n  geom_hline(yintercept = 0, linetype = 2) +\n  labs(x = \"Comparaison\",\n       y = \"Différence de moyennes (et IC 95%)\") +\n  coord_flip() +\n  theme_bw()\n\n\n\n\nNotez ici l’utilisation de geom_linerange, pour afficher les intervalles de confiance à 95% des différences de moyennes. Il s’agit d’une alternative à geom_errorbar() dont nous avons déjà parlé dans ce chapitre du livre en ligne du semestre 4. La fonction geom_hline() permet de faire apparaître des lignes horizontales sur un graphique. Ici, avec y = 0, cette fonction fait apparaître un axe horizontal (axe des abscisses). Enfin, la fonction coord_flip() permet d’inverser les axes du graphique : l’axe des x bascule à la verticale, et l’axe des y à l’horizontale. Cela permet d’obtenir un graphique dont l’apparence est typique de ce genre de graphique produit avec les résultats du test de Tukey HSD.\nCe graphique montre bien que pour la comparaison knee - control, le zéro est compris dans l’intervalle de confiance à 95% de la différence de moyennes, ce qui confirme l’absence de différence significative de décalage de phase entre ces 2 groupes. À l’inverse, pour les 2 autres comparaisons (eyes - knee d’une part, et eyes - control d’autre part), les intervalles de confiance à 95% des différences de moyennes ne coupent pas le zéro. Cela indique une différence de moyenne significative : dans la population générale, le zéro ne fait pas partie des valeurs les plus probables pour la différence de décalage de phase entre ces groupes.\nNous avons donc bien montré ici que la re-synchronisation de l’horloge interne n’est possible que par le biais de l’exposition des yeux à la lumière, et non du creux poplité."
  },
  {
    "objectID": "04-ANOVA.html#lalternative-non-paramétrique",
    "href": "04-ANOVA.html#lalternative-non-paramétrique",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.7 L’alternative non paramétrique",
    "text": "4.7 L’alternative non paramétrique\n\n4.7.1 La robustesse de l’ANOVA\nDans la suite de cette section, nous faisons l’hypothèse, bien que ça ne soit pas le cas, que les conditions d’application de l’ANOVA ne sont pas vérifiées pour notre jeu de données. Si les conditions d’application de l’ANOVA ne sont pas remplies, alors, les résultats de l’ANOVA ne peuvent pas être examinés car ils ne sont pas valides. Il nous faut alors recourir à un test non-paramétrique afin de comparer la moyenne de plus de deux groupes à la fois.\nLa particularité de l’ANOVA est sa grande robustesse vis-à-vis d’un non respect modéré de ses conditions d’application (voir définition de la robustesse dans la Section 3.6.1). L’ANOVA étant particulièrement robuste, ses résultats resteront valides dans les situations suivantes :\n\nNon normalité modérée des résidus. Si les résidus ne suivent pas parfaitement une loi Normale mais qu’ils sont néanmoins grossièrement distribués selon une courbe en cloche, les résultats de l’ANOVA resteront vrais, surtout si les effectifs sont importants.\nNon homogénéité des résidus. Si les résidus ne sont pas homogènes dans tous les groupes, les résultats de l’ANOVA resteront vrais tant que les échantillons seront grands, approximativement de la même taille dans tous les groupes, et à condition que les écarts de variances entre les groupes ne dépassent pas un facteur 10.\n\nDans tous les autres cas de non respect des conditions de l’ANOVA, par exemple, si la variance des résidus n’est pas homogène et que les groupes sont de petite taille ou de taille différente, ou si les variances diffèrent de plus d’un facteur 10, ou si les résidus s’écartent fortement de la normalité, ou si les deux conditions d’application ne sont pas respectées (même modérément) en même temps, il faudra alors faire un test non paramétrique.\nL’alternative non paramétrique à l’ANOVA à un facteur est le test de la somme des rangs de Kruskal-Wallis\n\n\n\n\n\n\nParamétrique ou non ?\n\n\n\nPour comparer la moyenne de plus de 2 groupes :\n\nlorsque les conditions permettant de réaliser un test paramétrique sont réunies (voir Section 4.6.2), on effectuera une ANOVA, qui n’est qu’une extension du test de Student. Si (et seulement si) on en rejette l’hypothèse nulle, on fera ensuite un test post-hoc paramétrique : le test de comparaisons multiples de Student et/ou le test de Tukey HSD.\nlorsque les conditions permettant de réaliser un test paramétrique ne sont pas réunies, on effectuera un test de Kruskal-Wallis, qui est une extension du test de Wilcoxon. Si (et seulement si) on en rejette l’hypothèse nulle, on fera ensuite un test post-hoc non paramétrique : le test de comparaisons multiples de Wilcoxon et/ou le test de Dunn.\n\n\n\n\n\n4.7.2 Réalisation du tests et interprétation\nLes hypothèses nulle et alternative du test de Kruskal-Wallis sont les suivante. Comme toujours, l’hypothèse nulle concerne l’absence d’effet du facteur étudié :\n\nH\\(_0\\) : le type de traitement appliqué n’a pas d’effet sur le décalage de phase. Les médianes sont égales dans tous les groupes (\\(\\textrm{med}_\\textrm{control} = \\textrm{med}_\\textrm{knee} = \\textrm{med}_\\textrm{eyes}\\)).\nH\\(_1\\) : le type de traitement appliqué a un effet sur le décalage de phase. Les médianes ne sont pas toutes égales, au moins l’une d’entre elles diffère des autres.\n\nLa syntaxe du test est similaire à celle de l’ANOVA. On utilise la notation formule en plaçant la variable numérique expliquée à gauche du ~, et le facteur (variable explicative) à droite du ~ :\n\nkruskal.test(shift ~ treatment, data = Light)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  shift by treatment\nKruskal-Wallis chi-squared = 9.4231, df = 2, p-value = 0.008991\n\n\nIci, la \\(p-\\)value est inférieure à \\(\\alpha\\), on rejette donc H\\(_0\\) : toutes les médianes ne sont pas égales. Comme avec l’ANOVA, il nous faut maintenant déterminer quelles médianes sont différentes les unes des autres, et quelles sont les magnitudes de ces différences. Pour cela, nous devons réaliser des tests post-hoc de comparaisons multiples.\n\n\n4.7.3 Tests a posteriori ou tests post-hoc\nComme pour les tests post-hoc de l’ANOVA, nous allons voir ici 2 tests de comparaisons multiples non paramétriques.\n\n4.7.3.1 Comparaisons multiples de Wilcoxon\nLe premier test est l’équivalent non paramétrique du test de comparaisons multiples de Student : le test de comparaisons multiples de la somme des rangs de Wilcoxon. Le principe est absolument le même que pour le test de comparaisons multiples de Student : toutes les comparaisons 2 à 2 sont effectuées au moyen d’un test de la somme des rangs de Wilcoxon. Les \\(p-\\)values de ces tests sont corrigées afin de garantir que le risque d’erreur \\(\\alpha\\) global soit maintenu constant en dépit de l’augmentation du nombre de tests réalisés. Pour chaque comparaison, les hypothèses sont les suivantes :\n\nH\\(_0\\) : la médiane des deux populations est égale.\nH\\(_1\\) : la médiane des deux populations est différente.\n\n\n# Réalisation du test\npost_hoc3 <- pairwise.wilcox.test(Light$shift, Light$treatment)\n\n# Affichage des résultats\npost_hoc3\n\n\n    Pairwise comparisons using Wilcoxon rank sum exact test \n\ndata:  Light$shift and Light$treatment \n\n     control knee  \nknee 0.9551  -     \neyes 0.0037  0.0524\n\nP value adjustment method: holm \n\n# Utilisation de la fonction `tidy` pour afficher les résultats dans un tibble\ntidy(post_hoc3)\n\n# A tibble: 3 × 3\n  group1 group2  p.value\n  <chr>  <chr>     <dbl>\n1 knee   control 0.955  \n2 eyes   control 0.00373\n3 eyes   knee    0.0524 \n\n\nIci, la \\(p-\\)value du premier test est supérieure à \\(\\alpha = 0.05\\). Il n’y a donc pas de différence entre les médianes du groupe control et du groupe knee. Le traitement lumineux appliqué dans le creux poplité n’a donc aucun effet sur le décalage de phase.\nLa \\(p-\\)value du second test est en revanche inférieure à \\(\\alpha\\). On rejette l’hypothèse nulle pour ce test ce qui confirme que le traitement lumineux appliqué au niveau des yeux a un effet sur le décalage de phase. Reste toutefois à quantifier l’importance de ce décalage de phase par rapport au groupe control.\nEnfin, la \\(p-\\)value du troisième test est supérieure (tout juste !) à \\(\\alpha\\). La conclusion logique est donc qu’il n’y a pas de différence significative entre les médianes des groupes knee et eyes. On sait que ce n’est pas le cas puisque nous avons montré plus haut (avec les tests paramétriques), que la différence de moyennes entre ces deux populations était significative. Nous avons ici l’illustration parfaite de la faible puissance des tests non paramétriques : leur capacité à détecter un effet lorsqu’il y en a réellement un est plus faible que celle des tests paramétriques. En outre, les procédures de comparaisons multiples sont très conservatives, et font mécaniquement baisser la puissance des tests pour maintenir constante l’erreur \\(\\alpha\\). Je ne peux donc que vous inciter à la prudence lorsque vous interprétez les résultats d’un test de comparaions multiples (a fortiori un test non paramétrique) pour lequel la \\(p-\\)value obtenue est très proche du seuil \\(\\alpha\\).\nComme pour son homologue paramétrique, le test de comparaisons multiples de Wilcoxon nous permet de prendre une décision par rapport à H\\(_0\\), mais il ne nous dit rien de la magnitude des effets mesurés. Pour les connaître, il nous faut réaliser un autre test.\n\n\n4.7.3.2 Le test de Dunn\nLe test de Dunn est au test de Kruskal-Wallis ce que le test de Tukey HSD est à l’ANOVA : un test post-hoc permettant de déterminer la magnitude des effets observés. Pour pouvoir le réaliser, le package DescTools doit être chargé. Sa syntaxe est la même que pour le test de Kruskal-Wallis ou l’ANOVA :\n\n# Réalisation du test\npost_hoc4 <- DunnTest(shift ~ treatment, data = Light)\n\n# Affichage des résultats\npost_hoc4\n\n\n Dunn's test of multiple comparisons using rank sums : holm  \n\n             mean.rank.diff   pval    \nknee-control     -0.4821429 0.8859    \neyes-control     -9.3392857 0.0164 *  \neyes-knee        -8.8571429 0.0214 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nAvec ces résultats on progresse un peu, car outre les \\(p-\\)values pour chaque comparaison, le test nous fournit une estimation de la différence des rangs moyens. Malheureusement, ces estimations sont souvent difficiles à interpréter (par exemple, quelle est l’unité utilisée ?) et aucun intervalle de confiance n’est fourni. On constate néanmoins que le test de Dunn donne ici des résultats comparables à ceux fournis par les tests paramétriques : le groupe eyes est significativement différent des deux autres. Pour obtenir les intervalles de confiance dont nous avons besoin, nous n’avons pas d’autre choix que des les calculer à l’aide du test de Wilcoxon classique, en réalisant manuellement les tests dont nous avons besoin. Ici, le test à proprement parler ne nous intéresse pas, d’ailleurs, sa \\(p-\\)value ne doit surtout pas être prise en compte car elle ignore totalement les comparaisons multiples et conduirait donc à augmenter l’erreur de type I. La seule chose pertinente est ici la différence de (pseudo-)médiane estimée et son intervalle de confiance :\n\n# Comparaisons entre les groupes `knee` et `eyes` (dans cet ordre)\nLight %>%\n  filter(treatment %in% c(\"knee\", \"eyes\")) %>%\n  wilcox.test(shift ~ treatment, data = ., conf.int = TRUE) %>%\n  tidy()\n\n# A tibble: 1 × 7\n  estimate statistic p.value conf.low conf.high method                   alter…¹\n     <dbl>     <dbl>   <dbl>    <dbl>     <dbl> <chr>                    <chr>  \n1     1.19        42  0.0262      0.3      2.21 Wilcoxon rank sum exact… two.si…\n# … with abbreviated variable name ¹​alternative\n\n\nPour le décalage de phase de ces 2 groupes, la différence de médiane estimée vaut donc 1.19, avec un intervalle de confiance à 95% de \\([0.3 ; 2.21]\\). Toutes les valeurs comprises dans cet intervalle de confiance sont strictement positives. Il y a donc très peu de chances pour que la différence de médiane entre ces deux groupes soit nulle. Le test de Dunn ci-dessus, qui montre une différence significative entre ces groupes, est donc confirmé."
  },
  {
    "objectID": "04-ANOVA.html#exercices-dapplication",
    "href": "04-ANOVA.html#exercices-dapplication",
    "title": "4  Comparaison de moyennes : plus de 2 groupes",
    "section": "4.8 Exercices d’application",
    "text": "4.8 Exercices d’application\n\n4.8.1 Cardamine pensylvanica\nEn biologie de la conservation, la question de l’existence d’un lien entre la capacité de dispersion des organismes et le maintien durable des populations dans le temps est étudié de près, notamment en raison de l’anthropisation des milieux qui conduit très souvent à la fragmentation des habitats. Cette question a été étudiée par 2 chercheurs (Molofsky et Ferdy 2005) chez Cardamine pensylvanica, une plante annuelle d’Amérique du Nord qui produit des graines qui sont dispersées de façon explosive. Quatre traitements ont été utilisés pour modifier expérimentalement la dispersion des graines. La distance entre populations contigües a été définie comme suit :\n\nTraitement 1 : continu. Les plants sont conservés au contact les uns des autres.\nTraitement 2 : medium. Les plants sont séparés de 23.2 centimètres.\nTratiement 3 : long. Les plants sont séparés de 49.5 centimètres.\nTraitement 4 : isole. Les plants sont séparés par des panneaux de bois empêchant la dispersion des graines.\n\nCes traitements ont été assignés au hasard à des populations de plantes, et 4 réplicats ont été faits pour chacun d’entre eux. Les résultats de l’expérience sont présentés ci-dessous. Il s’agit du nombre de générations durant lesquelles les plantes ont persisté :\n\ncontinu : 9, 13, 13, 16\nmedium : 14, 12, 16, 16\nlong : 13, 9, 10, 11\nisole : 13, 8, 8, 8\n\nSaisissez ces données dans RStudio et faites-en l’analyse. Vous tenterez de déterminer si l’éloignement entre les populations de plantes a un impact sur leur capacité de survie. Comme toujours, avant de vous lancer dans les tests, vous prendrez le temps de décrire les données avec des statistiques descriptives et des représentations graphiques.\n\n\n4.8.2 Insecticides\nL’efficacité de 6 insecticides nommés A, B, C, D, E et F a été testée sur 6 parcelles agricoles. Chaque insecticide de cette liste a été appliqué sur une parcelle agricole choisie au hasard. Deux semaines plus tard, 12 plants ont été collectés dans chaque parcelle agricole et le nombre d’insectes toujours vivants sur chacun d’entre eux a été compté. Les résultats sont présentés dans le fichier Insectes.csv. Importez ces données dans RStudio et faites-en l’analyse. Tous les insecticides ont-ils la même efficacité ? Si la réponse est non, quels sont les insecticides les plus (ou les moins) efficaces.\n\n\n4.8.3 La longueur des nageoirs des manchots femelles\nAvec le jeu de données penguins du package palmerpenguins, comparez la longueur des nageoires des femelles des 3 espèces de manchots. Les femelles des 3 espèces ont-elles toutes des nageoires de longueur différentes, et quelle est la magnitude de ces éventuelles différences ?\n\n\n\n\nCampbell, Scott S., et Patricia J. Murphy. 1998. « Extraocular Circadian Phototransduction in Humans ». Science 279 (5349): 396‑99. https://doi.org/10.1126/science.279.5349.396.\n\n\nFox, John, Sanford Weisberg, et Brad Price. 2022. car: Companion to Applied Regression. https://CRAN.R-project.org/package=car.\n\n\nHorst, Allison, Alison Hill, et Kristen Gorman. 2022. palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data. https://CRAN.R-project.org/package=palmerpenguins.\n\n\nMolofsky, Jane, et Jean-Baptiste Ferdy. 2005. « Extinction dynamics in experimental metapopulations ». Proceedings of the National Academy of Sciences 102 (10): 3726‑31. https://doi.org/10.1073/pnas.0404576102.\n\n\nRobinson, David, Alex Hayes, et Simon Couch. 2022. broom: Convert Statistical Objects into Tidy Tibbles. https://CRAN.R-project.org/package=broom.\n\n\nSignorell, Andri. 2022. DescTools: Tools for Descriptive Statistics. https://CRAN.R-project.org/package=DescTools.\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia, Hao Zhu, et Shannon Ellis. 2022. skimr: Compact and Flexible Summaries of Data. https://CRAN.R-project.org/package=skimr.\n\n\nWickham, Hadley. 2022. tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, et Jennifer Bryan. 2022. readxl: Read Excel Files. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, et Dewey Dunnington. 2022. ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, et Davis Vaughan. 2023. dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Jim Hester, et Jennifer Bryan. 2022. readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWright, Kenneth P., et Charles A. Czeisler. 2002. « Absence of Circadian Phase Resetting in Response to Bright Light Behind the Knees ». Science 297 (5581): 571‑71. https://doi.org/10.1126/science.1071697."
  },
  {
    "objectID": "05-Regression.html",
    "href": "05-Regression.html",
    "title": "5  Régression linéaire",
    "section": "",
    "text": "En cours…"
  },
  {
    "objectID": "06-PropTests.html",
    "href": "06-PropTests.html",
    "title": "6  Comparaison de proportions",
    "section": "",
    "text": "En cours…"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Campbell, Scott S., and Patricia J. Murphy. 1998. “Extraocular\nCircadian Phototransduction in Humans.” Science 279\n(5349): 396–99. https://doi.org/10.1126/science.279.5349.396.\n\n\nFox, John, Sanford Weisberg, and Brad Price. 2022. Car: Companion to\nApplied Regression. https://CRAN.R-project.org/package=car.\n\n\nFuller, Andrea, Peter R. Kamerman, Shane K. Maloney, Graham Mitchell,\nand Duncan Mitchell. 2003. “Variability in Brain and Arterial\nBlood Temperatures in Free-Ranging Ostriches in Their Natural\nHabitat.” Journal of Experimental Biology 206 (7):\n1171–81. https://doi.org/10.1242/jeb.00230.\n\n\nHasselquist, Dennis, James A. Marsh, Paul W. Sherman, and John C.\nWingfield. 1999. “Is Avian Humoral Immunocompetence Suppressed by\nTestosterone?” Behavioral Ecology and Sociobiology 45\n(3): 167–75. https://doi.org/10.1007/s002650050550.\n\n\nHorst, Allison, Alison Hill, and Kristen Gorman. 2022.\nPalmerpenguins: Palmer Archipelago (Antarctica) Penguin Data.\nhttps://CRAN.R-project.org/package=palmerpenguins.\n\n\nMolofsky, Jane, and Jean-Baptiste Ferdy. 2005. “Extinction\nDynamics in Experimental Metapopulations.” Proceedings of the\nNational Academy of Sciences 102 (10): 3726–31. https://doi.org/10.1073/pnas.0404576102.\n\n\nRobinson, David, Alex Hayes, and Simon Couch. 2022. Broom: Convert\nStatistical Objects into Tidy Tibbles. https://CRAN.R-project.org/package=broom.\n\n\nSignorell, Andri. 2022. DescTools: Tools for Descriptive\nStatistics. https://CRAN.R-project.org/package=DescTools.\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia,\nHao Zhu, and Shannon Ellis. 2022. Skimr: Compact and Flexible\nSummaries of Data. https://CRAN.R-project.org/package=skimr.\n\n\nWickham, Hadley. 2022. Tidyverse: Easily Install and Load the\nTidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, and Jennifer Bryan. 2022. Readxl: Read Excel\nFiles. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen,\nKohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey\nDunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using\nthe Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis\nVaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read\nRectangular Text Data. https://CRAN.R-project.org/package=readr.\n\n\nWright, Kenneth P., and Charles A. Czeisler. 2002. “Absence of\nCircadian Phase Resetting in Response to Bright Light Behind the\nKnees.” Science 297 (5581): 571–71. https://doi.org/10.1126/science.1071697.\n\n\nYoung, Kevin V., Edmund D. Brodie, and Edmund D. Brodie. 2004.\n“How the Horned Lizard Got Its Horns.” Science 304\n(5667): 65–65. https://doi.org/10.1126/science.1094790."
  }
]